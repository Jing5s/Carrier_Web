var commonjsGlobal =
  typeof globalThis !== 'undefined'
    ? globalThis
    : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
        ? global
        : typeof self !== 'undefined'
          ? self
          : {};
function getDefaultExportFromCjs(x2) {
  return x2 &&
    x2.__esModule &&
    Object.prototype.hasOwnProperty.call(x2, 'default')
    ? x2['default']
    : x2;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$1 = Symbol.for('react.element'),
  n$1 = Symbol.for('react.portal'),
  p$2 = Symbol.for('react.fragment'),
  q$1 = Symbol.for('react.strict_mode'),
  r = Symbol.for('react.profiler'),
  t = Symbol.for('react.provider'),
  u = Symbol.for('react.context'),
  v$1 = Symbol.for('react.forward_ref'),
  w = Symbol.for('react.suspense'),
  x = Symbol.for('react.memo'),
  y = Symbol.for('react.lazy'),
  z$1 = Symbol.iterator;
function A$1(a) {
  if (null === a || 'object' !== typeof a) return null;
  a = (z$1 && a[z$1]) || a['@@iterator'];
  return 'function' === typeof a ? a : null;
}
var B$1 = {
    isMounted: function () {
      return false;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  C$1 = Object.assign,
  D$1 = {};
function E$1(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function (a, b) {
  if ('object' !== typeof a && 'function' !== typeof a && null != a)
    throw Error(
      'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
    );
  this.updater.enqueueSetState(this, a, b, 'setState');
};
E$1.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, 'forceUpdate');
};
function F() {}
F.prototype = E$1.prototype;
function G$1(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
var H$1 = (G$1.prototype = new F());
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray,
  J = Object.prototype.hasOwnProperty,
  K$1 = { current: null },
  L$1 = { key: true, ref: true, __self: true, __source: true };
function M$1(a, b, e) {
  var d,
    c = {},
    k2 = null,
    h = null;
  if (null != b)
    for (d in (void 0 !== b.ref && (h = b.ref),
    void 0 !== b.key && (k2 = '' + b.key),
    b))
      J.call(b, d) && !L$1.hasOwnProperty(d) && (c[d] = b[d]);
  var g = arguments.length - 2;
  if (1 === g) c.children = e;
  else if (1 < g) {
    for (var f2 = Array(g), m2 = 0; m2 < g; m2++) f2[m2] = arguments[m2 + 2];
    c.children = f2;
  }
  if (a && a.defaultProps)
    for (d in ((g = a.defaultProps), g)) void 0 === c[d] && (c[d] = g[d]);
  return {
    $$typeof: l$1,
    type: a,
    key: k2,
    ref: h,
    props: c,
    _owner: K$1.current,
  };
}
function N$1(a, b) {
  return {
    $$typeof: l$1,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner,
  };
}
function O$1(a) {
  return 'object' === typeof a && null !== a && a.$$typeof === l$1;
}
function escape(a) {
  var b = { '=': '=0', ':': '=2' };
  return (
    '$' +
    a.replace(/[=:]/g, function (a2) {
      return b[a2];
    })
  );
}
var P$1 = /\/+/g;
function Q$1(a, b) {
  return 'object' === typeof a && null !== a && null != a.key
    ? escape('' + a.key)
    : b.toString(36);
}
function R$1(a, b, e, d, c) {
  var k2 = typeof a;
  if ('undefined' === k2 || 'boolean' === k2) a = null;
  var h = false;
  if (null === a) h = true;
  else
    switch (k2) {
      case 'string':
      case 'number':
        h = true;
        break;
      case 'object':
        switch (a.$$typeof) {
          case l$1:
          case n$1:
            h = true;
        }
    }
  if (h)
    return (
      (h = a),
      (c = c(h)),
      (a = '' === d ? '.' + Q$1(h, 0) : d),
      I$1(c)
        ? ((e = ''),
          null != a && (e = a.replace(P$1, '$&/') + '/'),
          R$1(c, b, e, '', function (a2) {
            return a2;
          }))
        : null != c &&
          (O$1(c) &&
            (c = N$1(
              c,
              e +
                (!c.key || (h && h.key === c.key)
                  ? ''
                  : ('' + c.key).replace(P$1, '$&/') + '/') +
                a
            )),
          b.push(c)),
      1
    );
  h = 0;
  d = '' === d ? '.' : d + ':';
  if (I$1(a))
    for (var g = 0; g < a.length; g++) {
      k2 = a[g];
      var f2 = d + Q$1(k2, g);
      h += R$1(k2, b, e, f2, c);
    }
  else if (((f2 = A$1(a)), 'function' === typeof f2))
    for (a = f2.call(a), g = 0; !(k2 = a.next()).done; )
      (k2 = k2.value), (f2 = d + Q$1(k2, g++)), (h += R$1(k2, b, e, f2, c));
  else if ('object' === k2)
    throw (
      ((b = String(a)),
      Error(
        'Objects are not valid as a React child (found: ' +
          ('[object Object]' === b
            ? 'object with keys {' + Object.keys(a).join(', ') + '}'
            : b) +
          '). If you meant to render a collection of children, use an array instead.'
      ))
    );
  return h;
}
function S$1(a, b, e) {
  if (null == a) return a;
  var d = [],
    c = 0;
  R$1(a, d, '', '', function (a2) {
    return b.call(e, a2, c++);
  });
  return d;
}
function T$1(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(
      function (b2) {
        if (0 === a._status || -1 === a._status)
          (a._status = 1), (a._result = b2);
      },
      function (b2) {
        if (0 === a._status || -1 === a._status)
          (a._status = 2), (a._result = b2);
      }
    );
    -1 === a._status && ((a._status = 0), (a._result = b));
  }
  if (1 === a._status) return a._result.default;
  throw a._result;
}
var U$1 = { current: null },
  V$1 = { transition: null },
  W$1 = {
    ReactCurrentDispatcher: U$1,
    ReactCurrentBatchConfig: V$1,
    ReactCurrentOwner: K$1,
  };
function X$1() {
  throw Error('act(...) is not supported in production builds of React.');
}
react_production_min.Children = {
  map: S$1,
  forEach: function (a, b, e) {
    S$1(
      a,
      function () {
        b.apply(this, arguments);
      },
      e
    );
  },
  count: function (a) {
    var b = 0;
    S$1(a, function () {
      b++;
    });
    return b;
  },
  toArray: function (a) {
    return (
      S$1(a, function (a2) {
        return a2;
      }) || []
    );
  },
  only: function (a) {
    if (!O$1(a))
      throw Error(
        'React.Children.only expected to receive a single React element child.'
      );
    return a;
  },
};
react_production_min.Component = E$1;
react_production_min.Fragment = p$2;
react_production_min.Profiler = r;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$1;
react_production_min.Suspense = w;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.act = X$1;
react_production_min.cloneElement = function (a, b, e) {
  if (null === a || void 0 === a)
    throw Error(
      'React.cloneElement(...): The argument must be a React element, but you passed ' +
        a +
        '.'
    );
  var d = C$1({}, a.props),
    c = a.key,
    k2 = a.ref,
    h = a._owner;
  if (null != b) {
    void 0 !== b.ref && ((k2 = b.ref), (h = K$1.current));
    void 0 !== b.key && (c = '' + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
    for (f2 in b)
      J.call(b, f2) &&
        !L$1.hasOwnProperty(f2) &&
        (d[f2] = void 0 === b[f2] && void 0 !== g ? g[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2) d.children = e;
  else if (1 < f2) {
    g = Array(f2);
    for (var m2 = 0; m2 < f2; m2++) g[m2] = arguments[m2 + 2];
    d.children = g;
  }
  return { $$typeof: l$1, type: a.type, key: c, ref: k2, props: d, _owner: h };
};
react_production_min.createContext = function (a) {
  a = {
    $$typeof: u,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null,
    _defaultValue: null,
    _globalName: null,
  };
  a.Provider = { $$typeof: t, _context: a };
  return (a.Consumer = a);
};
react_production_min.createElement = M$1;
react_production_min.createFactory = function (a) {
  var b = M$1.bind(null, a);
  b.type = a;
  return b;
};
react_production_min.createRef = function () {
  return { current: null };
};
react_production_min.forwardRef = function (a) {
  return { $$typeof: v$1, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function (a) {
  return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function (a, b) {
  return { $$typeof: x, type: a, compare: void 0 === b ? null : b };
};
react_production_min.startTransition = function (a) {
  var b = V$1.transition;
  V$1.transition = {};
  try {
    a();
  } finally {
    V$1.transition = b;
  }
};
react_production_min.unstable_act = X$1;
react_production_min.useCallback = function (a, b) {
  return U$1.current.useCallback(a, b);
};
react_production_min.useContext = function (a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function () {};
react_production_min.useDeferredValue = function (a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function (a, b) {
  return U$1.current.useEffect(a, b);
};
react_production_min.useId = function () {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function (a, b, e) {
  return U$1.current.useImperativeHandle(a, b, e);
};
react_production_min.useInsertionEffect = function (a, b) {
  return U$1.current.useInsertionEffect(a, b);
};
react_production_min.useLayoutEffect = function (a, b) {
  return U$1.current.useLayoutEffect(a, b);
};
react_production_min.useMemo = function (a, b) {
  return U$1.current.useMemo(a, b);
};
react_production_min.useReducer = function (a, b, e) {
  return U$1.current.useReducer(a, b, e);
};
react_production_min.useRef = function (a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function (a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function (a, b, e) {
  return U$1.current.useSyncExternalStore(a, b, e);
};
react_production_min.useTransition = function () {
  return U$1.current.useTransition();
};
react_production_min.version = '18.3.1';
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = reactExports,
  k = Symbol.for('react.element'),
  l = Symbol.for('react.fragment'),
  m$1 = Object.prototype.hasOwnProperty,
  n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p$1 = { key: true, ref: true, __self: true, __source: true };
function q(c, a, g) {
  var b,
    d = {},
    e = null,
    h = null;
  void 0 !== g && (e = '' + g);
  void 0 !== a.key && (e = '' + a.key);
  void 0 !== a.ref && (h = a.ref);
  for (b in a) m$1.call(a, b) && !p$1.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in ((a = c.defaultProps), a)) void 0 === d[b] && (d[b] = a[b]);
  return { $$typeof: k, type: c, key: e, ref: h, props: d, _owner: n.current };
}
reactJsxRuntime_production_min.Fragment = l;
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function (exports) {
  function f2(a, b) {
    var c = a.length;
    a.push(b);
    a: for (; 0 < c; ) {
      var d = (c - 1) >>> 1,
        e = a[d];
      if (0 < g(e, b)) (a[d] = b), (a[c] = e), (c = d);
      else break a;
    }
  }
  function h(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length) return null;
    var b = a[0],
      c = a.pop();
    if (c !== b) {
      a[0] = c;
      a: for (var d = 0, e = a.length, w2 = e >>> 1; d < w2; ) {
        var m2 = 2 * (d + 1) - 1,
          C2 = a[m2],
          n2 = m2 + 1,
          x2 = a[n2];
        if (0 > g(C2, c))
          n2 < e && 0 > g(x2, C2)
            ? ((a[d] = x2), (a[n2] = c), (d = n2))
            : ((a[d] = C2), (a[m2] = c), (d = m2));
        else if (n2 < e && 0 > g(x2, c)) (a[d] = x2), (a[n2] = c), (d = n2);
        else break a;
      }
    }
    return b;
  }
  function g(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
  }
  if (
    'object' === typeof performance &&
    'function' === typeof performance.now
  ) {
    var l2 = performance;
    exports.unstable_now = function () {
      return l2.now();
    };
  } else {
    var p2 = Date,
      q2 = p2.now();
    exports.unstable_now = function () {
      return p2.now() - q2;
    };
  }
  var r2 = [],
    t2 = [],
    u2 = 1,
    v2 = null,
    y2 = 3,
    z2 = false,
    A2 = false,
    B2 = false,
    D2 = 'function' === typeof setTimeout ? setTimeout : null,
    E2 = 'function' === typeof clearTimeout ? clearTimeout : null,
    F2 = 'undefined' !== typeof setImmediate ? setImmediate : null;
  'undefined' !== typeof navigator &&
    void 0 !== navigator.scheduling &&
    void 0 !== navigator.scheduling.isInputPending &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b = h(t2); null !== b; ) {
      if (null === b.callback) k2(t2);
      else if (b.startTime <= a)
        k2(t2), (b.sortIndex = b.expirationTime), f2(r2, b);
      else break;
      b = h(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (null !== h(r2)) (A2 = true), I2(J2);
      else {
        var b = h(t2);
        null !== b && K2(H2, b.startTime - a);
      }
  }
  function J2(a, b) {
    A2 = false;
    B2 && ((B2 = false), E2(L2), (L2 = -1));
    z2 = true;
    var c = y2;
    try {
      G2(b);
      for (
        v2 = h(r2);
        null !== v2 && (!(v2.expirationTime > b) || (a && !M2()));

      ) {
        var d = v2.callback;
        if ('function' === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e = d(v2.expirationTime <= b);
          b = exports.unstable_now();
          'function' === typeof e ? (v2.callback = e) : v2 === h(r2) && k2(r2);
          G2(b);
        } else k2(r2);
        v2 = h(r2);
      }
      if (null !== v2) var w2 = true;
      else {
        var m2 = h(t2);
        null !== m2 && K2(H2, m2.startTime - b);
        w2 = false;
      }
      return w2;
    } finally {
      (v2 = null), (y2 = c), (z2 = false);
    }
  }
  var N2 = false,
    O2 = null,
    L2 = -1,
    P2 = 5,
    Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports.unstable_now();
      Q2 = a;
      var b = true;
      try {
        b = O2(true, a);
      } finally {
        b ? S2() : ((N2 = false), (O2 = null));
      }
    } else N2 = false;
  }
  var S2;
  if ('function' === typeof F2)
    S2 = function () {
      F2(R2);
    };
  else if ('undefined' !== typeof MessageChannel) {
    var T2 = new MessageChannel(),
      U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function () {
      U2.postMessage(null);
    };
  } else
    S2 = function () {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || ((N2 = true), S2());
  }
  function K2(a, b) {
    L2 = D2(function () {
      a(exports.unstable_now());
    }, b);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function (a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function () {
    A2 || z2 || ((A2 = true), I2(J2));
  };
  exports.unstable_forceFrameRate = function (a) {
    0 > a || 125 < a
      ? console.error(
          'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
        )
      : (P2 = 0 < a ? Math.floor(1e3 / a) : 5);
  };
  exports.unstable_getCurrentPriorityLevel = function () {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function () {
    return h(r2);
  };
  exports.unstable_next = function (a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = y2;
    }
    var c = y2;
    y2 = b;
    try {
      return a();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_pauseExecution = function () {};
  exports.unstable_requestPaint = function () {};
  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c = y2;
    y2 = a;
    try {
      return b();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_scheduleCallback = function (a, b, c) {
    var d = exports.unstable_now();
    'object' === typeof c && null !== c
      ? ((c = c.delay), (c = 'number' === typeof c && 0 < c ? d + c : d))
      : (c = d);
    switch (a) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c + e;
    a = {
      id: u2++,
      callback: b,
      priorityLevel: a,
      startTime: c,
      expirationTime: e,
      sortIndex: -1,
    };
    c > d
      ? ((a.sortIndex = c),
        f2(t2, a),
        null === h(r2) &&
          a === h(t2) &&
          (B2 ? (E2(L2), (L2 = -1)) : (B2 = true), K2(H2, c - d)))
      : ((a.sortIndex = e), f2(r2, a), A2 || z2 || ((A2 = true), I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function (a) {
    var b = y2;
    return function () {
      var c = y2;
      y2 = b;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports,
  ca = schedulerExports;
function p(a) {
  for (
    var b = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a, c = 1;
    c < arguments.length;
    c++
  )
    b += '&args[]=' + encodeURIComponent(arguments[c]);
  return (
    'Minified React error #' +
    a +
    '; visit ' +
    b +
    ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
  );
}
var da = /* @__PURE__ */ new Set(),
  ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + 'Capture', b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++) da.add(b[a]);
}
var ia = !(
    'undefined' === typeof window ||
    'undefined' === typeof window.document ||
    'undefined' === typeof window.document.createElement
  ),
  ja = Object.prototype.hasOwnProperty,
  ka =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(a) {
  if (ja.call(ma, a)) return true;
  if (ja.call(la, a)) return false;
  if (ka.test(a)) return (ma[a] = true);
  la[a] = true;
  return false;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type) return false;
  switch (typeof b) {
    case 'function':
    case 'symbol':
      return true;
    case 'boolean':
      if (d) return false;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return 'data-' !== a && 'aria-' !== a;
    default:
      return false;
  }
}
function qa(a, b, c, d) {
  if (null === b || 'undefined' === typeof b || pa(a, b, c, d)) return true;
  if (d) return false;
  if (null !== c)
    switch (c.type) {
      case 3:
        return !b;
      case 4:
        return false === b;
      case 5:
        return isNaN(b);
      case 6:
        return isNaN(b) || 1 > b;
    }
  return false;
}
function v(a, b, c, d, e, f2, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g;
}
var z = {};
'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
  .split(' ')
  .forEach(function (a) {
    z[a] = new v(a, 0, false, a, null, false, false);
  });
[
  ['acceptCharset', 'accept-charset'],
  ['className', 'class'],
  ['htmlFor', 'for'],
  ['httpEquiv', 'http-equiv'],
].forEach(function (a) {
  var b = a[0];
  z[b] = new v(b, 1, false, a[1], null, false, false);
});
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (a) {
  z[a] = new v(a, 2, false, a.toLowerCase(), null, false, false);
});
[
  'autoReverse',
  'externalResourcesRequired',
  'focusable',
  'preserveAlpha',
].forEach(function (a) {
  z[a] = new v(a, 2, false, a, null, false, false);
});
'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
  .split(' ')
  .forEach(function (a) {
    z[a] = new v(a, 3, false, a.toLowerCase(), null, false, false);
  });
['checked', 'multiple', 'muted', 'selected'].forEach(function (a) {
  z[a] = new v(a, 3, true, a, null, false, false);
});
['capture', 'download'].forEach(function (a) {
  z[a] = new v(a, 4, false, a, null, false, false);
});
['cols', 'rows', 'size', 'span'].forEach(function (a) {
  z[a] = new v(a, 6, false, a, null, false, false);
});
['rowSpan', 'start'].forEach(function (a) {
  z[a] = new v(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
  .split(' ')
  .forEach(function (a) {
    var b = a.replace(ra, sa);
    z[b] = new v(b, 1, false, a, null, false, false);
  });
'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
  .split(' ')
  .forEach(function (a) {
    var b = a.replace(ra, sa);
    z[b] = new v(b, 1, false, a, 'http://www.w3.org/1999/xlink', false, false);
  });
['xml:base', 'xml:lang', 'xml:space'].forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(
    b,
    1,
    false,
    a,
    'http://www.w3.org/XML/1998/namespace',
    false,
    false
  );
});
['tabIndex', 'crossOrigin'].forEach(function (a) {
  z[a] = new v(a, 1, false, a.toLowerCase(), null, false, false);
});
z.xlinkHref = new v(
  'xlinkHref',
  1,
  false,
  'xlink:href',
  'http://www.w3.org/1999/xlink',
  true,
  false
);
['src', 'href', 'action', 'formAction'].forEach(function (a) {
  z[a] = new v(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta(a, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (
    null !== e
      ? 0 !== e.type
      : d ||
        !(2 < b.length) ||
        ('o' !== b[0] && 'O' !== b[0]) ||
        ('n' !== b[1] && 'N' !== b[1])
  )
    qa(b, c, e, d) && (c = null),
      d || null === e
        ? oa(b) &&
          (null === c ? a.removeAttribute(b) : a.setAttribute(b, '' + c))
        : e.mustUseProperty
          ? (a[e.propertyName] = null === c ? (3 === e.type ? false : '') : c)
          : ((b = e.attributeName),
            (d = e.attributeNamespace),
            null === c
              ? a.removeAttribute(b)
              : ((e = e.type),
                (c = 3 === e || (4 === e && true === c) ? '' : '' + c),
                d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for('react.element'),
  wa = Symbol.for('react.portal'),
  ya = Symbol.for('react.fragment'),
  za = Symbol.for('react.strict_mode'),
  Aa = Symbol.for('react.profiler'),
  Ba = Symbol.for('react.provider'),
  Ca = Symbol.for('react.context'),
  Da = Symbol.for('react.forward_ref'),
  Ea = Symbol.for('react.suspense'),
  Fa = Symbol.for('react.suspense_list'),
  Ga = Symbol.for('react.memo'),
  Ha = Symbol.for('react.lazy');
var Ia = Symbol.for('react.offscreen');
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || 'object' !== typeof a) return null;
  a = (Ja && a[Ja]) || a['@@iterator'];
  return 'function' === typeof a ? a : null;
}
var A = Object.assign,
  La;
function Ma(a) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c) {
      var b = c.stack.trim().match(/\n( *(at )?)/);
      La = (b && b[1]) || '';
    }
  return '\n' + La + a;
}
var Na = false;
function Oa(a, b) {
  if (!a || Na) return '';
  Na = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b)
      if (
        ((b = function () {
          throw Error();
        }),
        Object.defineProperty(b.prototype, 'props', {
          set: function () {
            throw Error();
          },
        }),
        'object' === typeof Reflect && Reflect.construct)
      ) {
        try {
          Reflect.construct(b, []);
        } catch (l2) {
          var d = l2;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l2) {
          d = l2;
        }
        a.call(b.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d && 'string' === typeof l2.stack) {
      for (
        var e = l2.stack.split('\n'),
          f2 = d.stack.split('\n'),
          g = e.length - 1,
          h = f2.length - 1;
        1 <= g && 0 <= h && e[g] !== f2[h];

      )
        h--;
      for (; 1 <= g && 0 <= h; g--, h--)
        if (e[g] !== f2[h]) {
          if (1 !== g || 1 !== h) {
            do
              if ((g--, h--, 0 > h || e[g] !== f2[h])) {
                var k2 = '\n' + e[g].replace(' at new ', ' at ');
                a.displayName &&
                  k2.includes('<anonymous>') &&
                  (k2 = k2.replace('<anonymous>', a.displayName));
                return k2;
              }
            while (1 <= g && 0 <= h);
          }
          break;
        }
    }
  } finally {
    (Na = false), (Error.prepareStackTrace = c);
  }
  return (a = a ? a.displayName || a.name : '') ? Ma(a) : '';
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma('Lazy');
    case 13:
      return Ma('Suspense');
    case 19:
      return Ma('SuspenseList');
    case 0:
    case 2:
    case 15:
      return (a = Oa(a.type, false)), a;
    case 11:
      return (a = Oa(a.type.render, false)), a;
    case 1:
      return (a = Oa(a.type, true)), a;
    default:
      return '';
  }
}
function Qa(a) {
  if (null == a) return null;
  if ('function' === typeof a) return a.displayName || a.name || null;
  if ('string' === typeof a) return a;
  switch (a) {
    case ya:
      return 'Fragment';
    case wa:
      return 'Portal';
    case Aa:
      return 'Profiler';
    case za:
      return 'StrictMode';
    case Ea:
      return 'Suspense';
    case Fa:
      return 'SuspenseList';
  }
  if ('object' === typeof a)
    switch (a.$$typeof) {
      case Ca:
        return (a.displayName || 'Context') + '.Consumer';
      case Ba:
        return (a._context.displayName || 'Context') + '.Provider';
      case Da:
        var b = a.render;
        a = a.displayName;
        a ||
          ((a = b.displayName || b.name || ''),
          (a = '' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef'));
        return a;
      case Ga:
        return (
          (b = a.displayName || null), null !== b ? b : Qa(a.type) || 'Memo'
        );
      case Ha:
        b = a._payload;
        a = a._init;
        try {
          return Qa(a(b));
        } catch (c) {}
    }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return 'Cache';
    case 9:
      return (b.displayName || 'Context') + '.Consumer';
    case 10:
      return (b._context.displayName || 'Context') + '.Provider';
    case 18:
      return 'DehydratedFragment';
    case 11:
      return (
        (a = b.render),
        (a = a.displayName || a.name || ''),
        b.displayName || ('' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef')
      );
    case 7:
      return 'Fragment';
    case 5:
      return b;
    case 4:
      return 'Portal';
    case 3:
      return 'Root';
    case 6:
      return 'Text';
    case 16:
      return Qa(b);
    case 8:
      return b === za ? 'StrictMode' : 'Mode';
    case 22:
      return 'Offscreen';
    case 12:
      return 'Profiler';
    case 21:
      return 'Scope';
    case 13:
      return 'Suspense';
    case 19:
      return 'SuspenseList';
    case 25:
      return 'TracingMarker';
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ('function' === typeof b) return b.displayName || b.name || null;
      if ('string' === typeof b) return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case 'boolean':
    case 'number':
    case 'string':
    case 'undefined':
      return a;
    case 'object':
      return a;
    default:
      return '';
  }
}
function Ta(a) {
  var b = a.type;
  return (
    (a = a.nodeName) &&
    'input' === a.toLowerCase() &&
    ('checkbox' === b || 'radio' === b)
  );
}
function Ua(a) {
  var b = Ta(a) ? 'checked' : 'value',
    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
    d = '' + a[b];
  if (
    !a.hasOwnProperty(b) &&
    'undefined' !== typeof c &&
    'function' === typeof c.get &&
    'function' === typeof c.set
  ) {
    var e = c.get,
      f2 = c.set;
    Object.defineProperty(a, b, {
      configurable: true,
      get: function () {
        return e.call(this);
      },
      set: function (a2) {
        d = '' + a2;
        f2.call(this, a2);
      },
    });
    Object.defineProperty(a, b, { enumerable: c.enumerable });
    return {
      getValue: function () {
        return d;
      },
      setValue: function (a2) {
        d = '' + a2;
      },
      stopTracking: function () {
        a._valueTracker = null;
        delete a[b];
      },
    };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return false;
  var b = a._valueTracker;
  if (!b) return true;
  var c = b.getValue();
  var d = '';
  a && (d = Ta(a) ? (a.checked ? 'true' : 'false') : a.value);
  a = d;
  return a !== c ? (b.setValue(a), true) : false;
}
function Xa(a) {
  a = a || ('undefined' !== typeof document ? document : void 0);
  if ('undefined' === typeof a) return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked,
  });
}
function Za(a, b) {
  var c = null == b.defaultValue ? '' : b.defaultValue,
    d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled:
      'checkbox' === b.type || 'radio' === b.type
        ? null != b.checked
        : null != b.value,
  };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, 'checked', b, false);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value),
    d = b.type;
  if (null != c)
    if ('number' === d) {
      if ((0 === c && '' === a.value) || a.value != c) a.value = '' + c;
    } else a.value !== '' + c && (a.value = '' + c);
  else if ('submit' === d || 'reset' === d) {
    a.removeAttribute('value');
    return;
  }
  b.hasOwnProperty('value')
    ? cb(a, b.type, c)
    : b.hasOwnProperty('defaultValue') && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked &&
    null != b.defaultChecked &&
    (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty('value') || b.hasOwnProperty('defaultValue')) {
    var d = b.type;
    if (
      !(
        ('submit' !== d && 'reset' !== d) ||
        (void 0 !== b.value && null !== b.value)
      )
    )
      return;
    b = '' + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  '' !== c && (a.name = '');
  a.defaultChecked = !!a._wrapperState.initialChecked;
  '' !== c && (a.name = c);
}
function cb(a, b, c) {
  if ('number' !== b || Xa(a.ownerDocument) !== a)
    null == c
      ? (a.defaultValue = '' + a._wrapperState.initialValue)
      : a.defaultValue !== '' + c && (a.defaultValue = '' + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++) b['$' + c[e]] = true;
    for (c = 0; c < a.length; c++)
      (e = b.hasOwnProperty('$' + a[c].value)),
        a[c].selected !== e && (a[c].selected = e),
        e && d && (a[c].defaultSelected = true);
  } else {
    c = '' + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = true;
        d && (a[e].defaultSelected = true);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = true);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
  return A({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: '' + a._wrapperState.initialValue,
  });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b) throw Error(p(92));
      if (eb(c)) {
        if (1 < c.length) throw Error(p(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = '');
    c = b;
  }
  a._wrapperState = { initialValue: Sa(c) };
}
function ib(a, b) {
  var c = Sa(b.value),
    d = Sa(b.defaultValue);
  null != c &&
    ((c = '' + c),
    c !== a.value && (a.value = c),
    null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = '' + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && '' !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case 'svg':
      return 'http://www.w3.org/2000/svg';
    case 'math':
      return 'http://www.w3.org/1998/Math/MathML';
    default:
      return 'http://www.w3.org/1999/xhtml';
  }
}
function lb(a, b) {
  return null == a || 'http://www.w3.org/1999/xhtml' === a
    ? kb(b)
    : 'http://www.w3.org/2000/svg' === a && 'foreignObject' === b
      ? 'http://www.w3.org/1999/xhtml'
      : a;
}
var mb,
  nb = (function (a) {
    return 'undefined' !== typeof MSApp && MSApp.execUnsafeLocalFunction
      ? function (b, c, d, e) {
          MSApp.execUnsafeLocalFunction(function () {
            return a(b, c, d, e);
          });
        }
      : a;
  })(function (a, b) {
    if ('http://www.w3.org/2000/svg' !== a.namespaceURI || 'innerHTML' in a)
      a.innerHTML = b;
    else {
      mb = mb || document.createElement('div');
      mb.innerHTML = '<svg>' + b.valueOf().toString() + '</svg>';
      for (b = mb.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
      for (; b.firstChild; ) a.appendChild(b.firstChild);
    }
  });
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
    animationIterationCount: true,
    aspectRatio: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    columns: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridArea: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true,
  },
  qb = ['Webkit', 'ms', 'Moz', 'O'];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || 'boolean' === typeof b || '' === b
    ? ''
    : c || 'number' !== typeof b || 0 === b || (pb.hasOwnProperty(a) && pb[a])
      ? ('' + b).trim()
      : b + 'px';
}
function sb(a, b) {
  a = a.style;
  for (var c in b)
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf('--'),
        e = rb(c, b[c], d);
      'float' === c && (c = 'cssFloat');
      d ? a.setProperty(c, e) : (a[c] = e);
    }
}
var tb = A(
  { menuitem: true },
  {
    area: true,
    base: true,
    br: true,
    col: true,
    embed: true,
    hr: true,
    img: true,
    input: true,
    keygen: true,
    link: true,
    meta: true,
    param: true,
    source: true,
    track: true,
    wbr: true,
  }
);
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML))
      throw Error(p(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(p(60));
      if (
        'object' !== typeof b.dangerouslySetInnerHTML ||
        !('__html' in b.dangerouslySetInnerHTML)
      )
        throw Error(p(61));
    }
    if (null != b.style && 'object' !== typeof b.style) throw Error(p(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf('-')) return 'string' === typeof b.is;
  switch (a) {
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(a) {
  if ((a = Cb(a))) {
    if ('function' !== typeof yb) throw Error(p(280));
    var b = a.stateNode;
    b && ((b = Db(b)), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? (Ab ? Ab.push(a) : (Ab = [a])) : (zb = a);
}
function Fb() {
  if (zb) {
    var a = zb,
      b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {}
var Ib = false;
function Jb(a, b, c) {
  if (Ib) return a(b, c);
  Ib = true;
  try {
    return Gb(a, b, c);
  } finally {
    if (((Ib = false), null !== zb || null !== Ab)) Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];
  a: switch (b) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      (d = !d.disabled) ||
        ((a = a.type),
        (d = !(
          'button' === a ||
          'input' === a ||
          'select' === a ||
          'textarea' === a
        )));
      a = !d;
      break a;
    default:
      a = false;
  }
  if (a) return null;
  if (c && 'function' !== typeof c) throw Error(p(231, b, typeof c));
  return c;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, 'passive', {
      get: function () {
        Lb = true;
      },
    });
    window.addEventListener('test', Mb, Mb);
    window.removeEventListener('test', Mb, Mb);
  } catch (a) {
    Lb = false;
  }
function Nb(a, b, c, d, e, f2, g, h, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false,
  Pb = null,
  Qb = false,
  Rb = null,
  Sb = {
    onError: function (a) {
      Ob = true;
      Pb = a;
    },
  };
function Tb(a, b, c, d, e, f2, g, h, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e, f2, g, h, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else throw Error(p(198));
    Qb || ((Qb = true), (Rb = l2));
  }
}
function Vb(a) {
  var b = a,
    c = a;
  if (a.alternate) for (; b.return; ) b = b.return;
  else {
    a = b;
    do (b = a), 0 !== (b.flags & 4098) && (c = b.return), (a = b.return);
    while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && ((a = a.alternate), null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b) throw Error(p(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b; ; ) {
    var e = c.return;
    if (null === e) break;
    var f2 = e.alternate;
    if (null === f2) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c) return Xb(e), a;
        if (f2 === d) return Xb(e), b;
        f2 = f2.sibling;
      }
      throw Error(p(188));
    }
    if (c.return !== d.return) (c = e), (d = f2);
    else {
      for (var g = false, h = e.child; h; ) {
        if (h === c) {
          g = true;
          c = e;
          d = f2;
          break;
        }
        if (h === d) {
          g = true;
          d = e;
          c = f2;
          break;
        }
        h = h.sibling;
      }
      if (!g) {
        for (h = f2.child; h; ) {
          if (h === c) {
            g = true;
            c = f2;
            d = e;
            break;
          }
          if (h === d) {
            g = true;
            d = f2;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g) throw Error(p(189));
      }
    }
    if (c.alternate !== d) throw Error(p(190));
  }
  if (3 !== c.tag) throw Error(p(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag) return a;
  for (a = a.child; null !== a; ) {
    var b = $b(a);
    if (null !== b) return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(a) {
  if (lc && 'function' === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : (31 - ((pc(a) / qc) | 0)) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return 0;
  var d = 0,
    e = a.suspendedLanes,
    f2 = a.pingedLanes,
    g = c & 268435455;
  if (0 !== g) {
    var h = g & ~e;
    0 !== h ? (d = tc(h)) : ((f2 &= g), 0 !== f2 && (d = tc(f2)));
  } else (g = c & ~e), 0 !== g ? (d = tc(g)) : 0 !== f2 && (d = tc(f2));
  if (0 === d) return 0;
  if (
    0 !== b &&
    b !== d &&
    0 === (b & e) &&
    ((e = d & -d), (f2 = b & -b), e >= f2 || (16 === e && 0 !== (f2 & 4194240)))
  )
    return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b)
    for (a = a.entanglements, b &= d; 0 < b; )
      (c = 31 - oc(b)), (e = 1 << c), (d |= a[c]), (b &= ~e);
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (
    var c = a.suspendedLanes,
      d = a.pingedLanes,
      e = a.expirationTimes,
      f2 = a.pendingLanes;
    0 < f2;

  ) {
    var g = 31 - oc(f2),
      h = 1 << g,
      k2 = e[g];
    if (-1 === k2) {
      if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b);
    } else k2 <= b && (a.expiredLanes |= h);
    f2 &= ~h;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++) b.push(a);
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && ((a.suspendedLanes = 0), (a.pingedLanes = 0));
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c; ) {
    var e = 31 - oc(c),
      f2 = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f2;
  }
}
function Cc(a, b) {
  var c = (a.entangledLanes |= b);
  for (a = a.entanglements; c; ) {
    var d = 31 - oc(c),
      e = 1 << d;
    (e & b) | (a[d] & b) && (a[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? (4 < a ? (0 !== (a & 268435455) ? 16 : 536870912) : 4) : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = false,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = /* @__PURE__ */ new Map(),
  Pc = /* @__PURE__ */ new Map(),
  Qc = [],
  Rc =
    'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
      ' '
    );
function Sc(a, b) {
  switch (a) {
    case 'focusin':
    case 'focusout':
      Lc = null;
      break;
    case 'dragenter':
    case 'dragleave':
      Mc = null;
      break;
    case 'mouseover':
    case 'mouseout':
      Nc = null;
      break;
    case 'pointerover':
    case 'pointerout':
      Oc.delete(b.pointerId);
      break;
    case 'gotpointercapture':
    case 'lostpointercapture':
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e, f2) {
  if (null === a || a.nativeEvent !== f2)
    return (
      (a = {
        blockedOn: b,
        domEventName: c,
        eventSystemFlags: d,
        nativeEvent: f2,
        targetContainers: [e],
      }),
      null !== b && ((b = Cb(b)), null !== b && Fc(b)),
      a
    );
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc(a, b, c, d, e) {
  switch (b) {
    case 'focusin':
      return (Lc = Tc(Lc, a, b, c, d, e)), true;
    case 'dragenter':
      return (Mc = Tc(Mc, a, b, c, d, e)), true;
    case 'mouseover':
      return (Nc = Tc(Nc, a, b, c, d, e)), true;
    case 'pointerover':
      var f2 = e.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a, b, c, d, e));
      return true;
    case 'gotpointercapture':
      return (
        (f2 = e.pointerId),
        Pc.set(f2, Tc(Pc.get(f2) || null, a, b, c, d, e)),
        true
      );
  }
  return false;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) {
      if (((b = c.tag), 13 === b)) {
        if (((b = Wb(c)), null !== b)) {
          a.blockedOn = b;
          Ic(a.priority, function () {
            Gc(c);
          });
          return;
        }
      } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn) return false;
  for (var b = a.targetContainers; 0 < b.length; ) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else return (b = Cb(c)), null !== b && Fc(b), (a.blockedOn = c), false;
    b.shift();
  }
  return true;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b &&
    ((a.blockedOn = null),
    Jc ||
      ((Jc = true),
      ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b2) {
    return ad(b2, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++)
    (d = Qc[c]), d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && ((c = Qc[0]), null === c.blockedOn); )
    Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig,
  dd = true;
function ed(a, b, c, d) {
  var e = C,
    f2 = cd.transition;
  cd.transition = null;
  try {
    (C = 1), fd(a, b, c, d);
  } finally {
    (C = e), (cd.transition = f2);
  }
}
function gd(a, b, c, d) {
  var e = C,
    f2 = cd.transition;
  cd.transition = null;
  try {
    (C = 4), fd(a, b, c, d);
  } finally {
    (C = e), (cd.transition = f2);
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e = Yc(a, b, c, d);
    if (null === e) hd(a, b, d, id, c), Sc(a, d);
    else if (Uc(e, a, b, c, d)) d.stopPropagation();
    else if ((Sc(a, d), b & 4 && -1 < Rc.indexOf(a))) {
      for (; null !== e; ) {
        var f2 = Cb(e);
        null !== f2 && Ec(f2);
        f2 = Yc(a, b, c, d);
        null === f2 && hd(a, b, d, id, c);
        if (f2 === e) break;
        e = f2;
      }
      null !== e && d.stopPropagation();
    } else hd(a, b, d, null, c);
  }
}
var id = null;
function Yc(a, b, c, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a)
    if (((b = Vb(a)), null === b)) a = null;
    else if (((c = b.tag), 13 === c)) {
      a = Wb(b);
      if (null !== a) return a;
      a = null;
    } else if (3 === c) {
      if (b.stateNode.current.memoizedState.isDehydrated)
        return 3 === b.tag ? b.stateNode.containerInfo : null;
      a = null;
    } else b !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case 'cancel':
    case 'click':
    case 'close':
    case 'contextmenu':
    case 'copy':
    case 'cut':
    case 'auxclick':
    case 'dblclick':
    case 'dragend':
    case 'dragstart':
    case 'drop':
    case 'focusin':
    case 'focusout':
    case 'input':
    case 'invalid':
    case 'keydown':
    case 'keypress':
    case 'keyup':
    case 'mousedown':
    case 'mouseup':
    case 'paste':
    case 'pause':
    case 'play':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointerup':
    case 'ratechange':
    case 'reset':
    case 'resize':
    case 'seeked':
    case 'submit':
    case 'touchcancel':
    case 'touchend':
    case 'touchstart':
    case 'volumechange':
    case 'change':
    case 'selectionchange':
    case 'textInput':
    case 'compositionstart':
    case 'compositionend':
    case 'compositionupdate':
    case 'beforeblur':
    case 'afterblur':
    case 'beforeinput':
    case 'blur':
    case 'fullscreenchange':
    case 'focus':
    case 'hashchange':
    case 'popstate':
    case 'select':
    case 'selectstart':
      return 1;
    case 'drag':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'mousemove':
    case 'mouseout':
    case 'mouseover':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'scroll':
    case 'toggle':
    case 'touchmove':
    case 'wheel':
    case 'mouseenter':
    case 'mouseleave':
    case 'pointerenter':
    case 'pointerleave':
      return 4;
    case 'message':
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var a,
    b = ld,
    c = b.length,
    d,
    e = 'value' in kd ? kd.value : kd.textContent,
    f2 = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++);
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e[f2 - d]; d++);
  return (md = e.slice(a, 1 < d ? 1 - d : void 0));
}
function od(a) {
  var b = a.keyCode;
  'charCode' in a
    ? ((a = a.charCode), 0 === a && 13 === b && (a = 13))
    : (a = b);
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b(b2, d, e, f2, g) {
    this._reactName = b2;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g;
    this.currentTarget = null;
    for (var c in a)
      a.hasOwnProperty(c) && ((b2 = a[c]), (this[c] = b2 ? b2(f2) : f2[c]));
    this.isDefaultPrevented = (
      null != f2.defaultPrevented
        ? f2.defaultPrevented
        : false === f2.returnValue
    )
      ? pd
      : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var a2 = this.nativeEvent;
      a2 &&
        (a2.preventDefault
          ? a2.preventDefault()
          : 'unknown' !== typeof a2.returnValue && (a2.returnValue = false),
        (this.isDefaultPrevented = pd));
    },
    stopPropagation: function () {
      var a2 = this.nativeEvent;
      a2 &&
        (a2.stopPropagation
          ? a2.stopPropagation()
          : 'unknown' !== typeof a2.cancelBubble && (a2.cancelBubble = true),
        (this.isPropagationStopped = pd));
    },
    persist: function () {},
    isPersistent: pd,
  });
  return b;
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (a) {
      return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  td = rd(sd),
  ud = A({}, sd, { view: 0, detail: 0 }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function (a) {
      return void 0 === a.relatedTarget
        ? a.fromElement === a.srcElement
          ? a.toElement
          : a.fromElement
        : a.relatedTarget;
    },
    movementX: function (a) {
      if ('movementX' in a) return a.movementX;
      a !== yd &&
        (yd && 'mousemove' === a.type
          ? ((wd = a.screenX - yd.screenX), (xd = a.screenY - yd.screenY))
          : (xd = wd = 0),
        (yd = a));
      return wd;
    },
    movementY: function (a) {
      return 'movementY' in a ? a.movementY : xd;
    },
  }),
  Bd = rd(Ad),
  Cd = A({}, Ad, { dataTransfer: 0 }),
  Dd = rd(Cd),
  Ed = A({}, ud, { relatedTarget: 0 }),
  Fd = rd(Ed),
  Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Hd = rd(Gd),
  Id = A({}, sd, {
    clipboardData: function (a) {
      return 'clipboardData' in a ? a.clipboardData : window.clipboardData;
    },
  }),
  Jd = rd(Id),
  Kd = A({}, sd, { data: 0 }),
  Ld = rd(Kd),
  Md = {
    Esc: 'Escape',
    Spacebar: ' ',
    Left: 'ArrowLeft',
    Up: 'ArrowUp',
    Right: 'ArrowRight',
    Down: 'ArrowDown',
    Del: 'Delete',
    Win: 'OS',
    Menu: 'ContextMenu',
    Apps: 'ContextMenu',
    Scroll: 'ScrollLock',
    MozPrintableKey: 'Unidentified',
  },
  Nd = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta',
  },
  Od = {
    Alt: 'altKey',
    Control: 'ctrlKey',
    Meta: 'metaKey',
    Shift: 'shiftKey',
  };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState
    ? b.getModifierState(a)
    : (a = Od[a])
      ? !!b[a]
      : false;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, {
    key: function (a) {
      if (a.key) {
        var b = Md[a.key] || a.key;
        if ('Unidentified' !== b) return b;
      }
      return 'keypress' === a.type
        ? ((a = od(a)), 13 === a ? 'Enter' : String.fromCharCode(a))
        : 'keydown' === a.type || 'keyup' === a.type
          ? Nd[a.keyCode] || 'Unidentified'
          : '';
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function (a) {
      return 'keypress' === a.type ? od(a) : 0;
    },
    keyCode: function (a) {
      return 'keydown' === a.type || 'keyup' === a.type ? a.keyCode : 0;
    },
    which: function (a) {
      return 'keypress' === a.type
        ? od(a)
        : 'keydown' === a.type || 'keyup' === a.type
          ? a.keyCode
          : 0;
    },
  }),
  Rd = rd(Qd),
  Sd = A({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Td = rd(Sd),
  Ud = A({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd,
  }),
  Vd = rd(Ud),
  Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Xd = rd(Wd),
  Yd = A({}, Ad, {
    deltaX: function (a) {
      return 'deltaX' in a ? a.deltaX : 'wheelDeltaX' in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function (a) {
      return 'deltaY' in a
        ? a.deltaY
        : 'wheelDeltaY' in a
          ? -a.wheelDeltaY
          : 'wheelDelta' in a
            ? -a.wheelDelta
            : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae = ia && 'CompositionEvent' in window,
  be = null;
ia && 'documentMode' in document && (be = document.documentMode);
var ce = ia && 'TextEvent' in window && !be,
  de = ia && (!ae || (be && 8 < be && 11 >= be)),
  ee = String.fromCharCode(32),
  fe = false;
function ge(a, b) {
  switch (a) {
    case 'keyup':
      return -1 !== $d.indexOf(b.keyCode);
    case 'keydown':
      return 229 !== b.keyCode;
    case 'keypress':
    case 'mousedown':
    case 'focusout':
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return 'object' === typeof a && 'data' in a ? a.data : null;
}
var ie = false;
function je(a, b) {
  switch (a) {
    case 'compositionend':
      return he(b);
    case 'keypress':
      if (32 !== b.which) return null;
      fe = true;
      return ee;
    case 'textInput':
      return (a = b.data), a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie)
    return 'compositionend' === a || (!ae && ge(a, b))
      ? ((a = nd()), (md = ld = kd = null), (ie = false), a)
      : null;
  switch (a) {
    case 'paste':
      return null;
    case 'keypress':
      if (!(b.ctrlKey || b.altKey || b.metaKey) || (b.ctrlKey && b.altKey)) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }
      return null;
    case 'compositionend':
      return de && 'ko' !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true,
};
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return 'input' === b ? !!le[a.type] : 'textarea' === b ? true : false;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, 'onChange');
  0 < b.length &&
    ((c = new td('onChange', 'change', null, c, d)),
    a.push({ event: c, listeners: b }));
}
var pe = null,
  qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}
function ve(a, b) {
  if ('change' === a) return b;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = 'oninput' in document;
    if (!ye) {
      var ze = document.createElement('div');
      ze.setAttribute('oninput', 'return;');
      ye = 'function' === typeof ze.oninput;
    }
    xe = ye;
  } else xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent('onpropertychange', Be), (qe = pe = null));
}
function Be(a) {
  if ('value' === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  'focusin' === a
    ? (Ae(), (pe = b), (qe = c), pe.attachEvent('onpropertychange', Be))
    : 'focusout' === a && Ae();
}
function De(a) {
  if ('selectionchange' === a || 'keyup' === a || 'keydown' === a)
    return te(qe);
}
function Ee(a, b) {
  if ('click' === a) return te(b);
}
function Fe(a, b) {
  if ('input' === a || 'change' === a) return te(b);
}
function Ge(a, b) {
  return (a === b && (0 !== a || 1 / a === 1 / b)) || (a !== a && b !== b);
}
var He = 'function' === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b)) return true;
  if (
    'object' !== typeof a ||
    null === a ||
    'object' !== typeof b ||
    null === b
  )
    return false;
  var c = Object.keys(a),
    d = Object.keys(b);
  if (c.length !== d.length) return false;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a[e], b[e])) return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild; ) a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c; ) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return { node: c, offset: b - a };
      a = d;
    }
    a: {
      for (; c; ) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b
    ? a === b
      ? true
      : a && 3 === a.nodeType
        ? false
        : b && 3 === b.nodeType
          ? Le(a, b.parentNode)
          : 'contains' in a
            ? a.contains(b)
            : a.compareDocumentPosition
              ? !!(a.compareDocumentPosition(b) & 16)
              : false
    : false;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement; ) {
    try {
      var c = 'string' === typeof b.contentWindow.location.href;
    } catch (d) {
      c = false;
    }
    if (c) a = b.contentWindow;
    else break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return (
    b &&
    (('input' === b &&
      ('text' === a.type ||
        'search' === a.type ||
        'tel' === a.type ||
        'url' === a.type ||
        'password' === a.type)) ||
      'textarea' === b ||
      'true' === a.contentEditable)
  );
}
function Oe(a) {
  var b = Me(),
    c = a.focusedElem,
    d = a.selectionRange;
  if (
    b !== c &&
    c &&
    c.ownerDocument &&
    Le(c.ownerDocument.documentElement, c)
  ) {
    if (null !== d && Ne(c)) {
      if (
        ((b = d.start),
        (a = d.end),
        void 0 === a && (a = b),
        'selectionStart' in c)
      )
        (c.selectionStart = b), (c.selectionEnd = Math.min(a, c.value.length));
      else if (
        ((a = ((b = c.ownerDocument || document) && b.defaultView) || window),
        a.getSelection)
      ) {
        a = a.getSelection();
        var e = c.textContent.length,
          f2 = Math.min(d.start, e);
        d = void 0 === d.end ? f2 : Math.min(d.end, e);
        !a.extend && f2 > d && ((e = d), (d = f2), (f2 = e));
        e = Ke(c, f2);
        var g = Ke(c, d);
        e &&
          g &&
          (1 !== a.rangeCount ||
            a.anchorNode !== e.node ||
            a.anchorOffset !== e.offset ||
            a.focusNode !== g.node ||
            a.focusOffset !== g.offset) &&
          ((b = b.createRange()),
          b.setStart(e.node, e.offset),
          a.removeAllRanges(),
          f2 > d
            ? (a.addRange(b), a.extend(g.node, g.offset))
            : (b.setEnd(g.node, g.offset), a.addRange(b)));
      }
    }
    b = [];
    for (a = c; (a = a.parentNode); )
      1 === a.nodeType &&
        b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    'function' === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++)
      (a = b[c]),
        (a.element.scrollLeft = a.left),
        (a.element.scrollTop = a.top);
  }
}
var Pe = ia && 'documentMode' in document && 11 >= document.documentMode,
  Qe = null,
  Re = null,
  Se = null,
  Te = false;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te ||
    null == Qe ||
    Qe !== Xa(d) ||
    ((d = Qe),
    'selectionStart' in d && Ne(d)
      ? (d = { start: d.selectionStart, end: d.selectionEnd })
      : ((d = (
          (d.ownerDocument && d.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (d = {
          anchorNode: d.anchorNode,
          anchorOffset: d.anchorOffset,
          focusNode: d.focusNode,
          focusOffset: d.focusOffset,
        })),
    (Se && Ie(Se, d)) ||
      ((Se = d),
      (d = oe(Re, 'onSelect')),
      0 < d.length &&
        ((b = new td('onSelect', 'select', null, b, c)),
        a.push({ event: b, listeners: d }),
        (b.target = Qe))));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c['Webkit' + a] = 'webkit' + b;
  c['Moz' + a] = 'moz' + b;
  return c;
}
var We = {
    animationend: Ve('Animation', 'AnimationEnd'),
    animationiteration: Ve('Animation', 'AnimationIteration'),
    animationstart: Ve('Animation', 'AnimationStart'),
    transitionend: Ve('Transition', 'TransitionEnd'),
  },
  Xe = {},
  Ye = {};
ia &&
  ((Ye = document.createElement('div').style),
  'AnimationEvent' in window ||
    (delete We.animationend.animation,
    delete We.animationiteration.animation,
    delete We.animationstart.animation),
  'TransitionEvent' in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var b = We[a],
    c;
  for (c in b) if (b.hasOwnProperty(c) && c in Ye) return (Xe[a] = b[c]);
  return a;
}
var $e = Ze('animationend'),
  af = Ze('animationiteration'),
  bf = Ze('animationstart'),
  cf = Ze('transitionend'),
  df = /* @__PURE__ */ new Map(),
  ef =
    'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
      ' '
    );
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, 'on' + kf);
}
ff($e, 'onAnimationEnd');
ff(af, 'onAnimationIteration');
ff(bf, 'onAnimationStart');
ff('dblclick', 'onDoubleClick');
ff('focusin', 'onFocus');
ff('focusout', 'onBlur');
ff(cf, 'onTransitionEnd');
ha('onMouseEnter', ['mouseout', 'mouseover']);
ha('onMouseLeave', ['mouseout', 'mouseover']);
ha('onPointerEnter', ['pointerout', 'pointerover']);
ha('onPointerLeave', ['pointerout', 'pointerover']);
fa(
  'onChange',
  'change click focusin focusout input keydown keyup selectionchange'.split(' ')
);
fa(
  'onSelect',
  'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
    ' '
  )
);
fa('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
fa(
  'onCompositionEnd',
  'compositionend focusout keydown keypress keyup mousedown'.split(' ')
);
fa(
  'onCompositionStart',
  'compositionstart focusout keydown keypress keyup mousedown'.split(' ')
);
fa(
  'onCompositionUpdate',
  'compositionupdate focusout keydown keypress keyup mousedown'.split(' ')
);
var lf =
    'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
      ' '
    ),
  mf = new Set('cancel close invalid load scroll toggle'.split(' ').concat(lf));
function nf(a, b, c) {
  var d = a.type || 'unknown-event';
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c],
      e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b)
        for (var g = d.length - 1; 0 <= g; g--) {
          var h = d[g],
            k2 = h.instance,
            l2 = h.currentTarget;
          h = h.listener;
          if (k2 !== f2 && e.isPropagationStopped()) break a;
          nf(e, h, l2);
          f2 = k2;
        }
      else
        for (g = 0; g < d.length; g++) {
          h = d[g];
          k2 = h.instance;
          l2 = h.currentTarget;
          h = h.listener;
          if (k2 !== f2 && e.isPropagationStopped()) break a;
          nf(e, h, l2);
          f2 = k2;
        }
    }
  }
  if (Qb) throw ((a = Rb), (Qb = false), (Rb = null), a);
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = /* @__PURE__ */ new Set());
  var d = a + '__bubble';
  c.has(d) || (pf(b, a, 2, false), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = '_reactListening' + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da.forEach(function (b2) {
      'selectionchange' !== b2 &&
        (mf.has(b2) || qf(b2, false, a), qf(b2, true, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || ((b[rf] = true), qf('selectionchange', false, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb ||
    ('touchstart' !== b && 'touchmove' !== b && 'wheel' !== b) ||
    (e = true);
  d
    ? void 0 !== e
      ? a.addEventListener(b, c, { capture: true, passive: e })
      : a.addEventListener(b, c, true)
    : void 0 !== e
      ? a.addEventListener(b, c, { passive: e })
      : a.addEventListener(b, c, false);
}
function hd(a, b, c, d, e) {
  var f2 = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d)
    a: for (;;) {
      if (null === d) return;
      var g = d.tag;
      if (3 === g || 4 === g) {
        var h = d.stateNode.containerInfo;
        if (h === e || (8 === h.nodeType && h.parentNode === e)) break;
        if (4 === g)
          for (g = d.return; null !== g; ) {
            var k2 = g.tag;
            if (3 === k2 || 4 === k2) {
              if (
                ((k2 = g.stateNode.containerInfo),
                k2 === e || (8 === k2.nodeType && k2.parentNode === e))
              )
                return;
            }
            g = g.return;
          }
        for (; null !== h; ) {
          g = Wc(h);
          if (null === g) return;
          k2 = g.tag;
          if (5 === k2 || 6 === k2) {
            d = f2 = g;
            continue a;
          }
          h = h.parentNode;
        }
      }
      d = d.return;
    }
  Jb(function () {
    var d2 = f2,
      e2 = xb(c),
      g2 = [];
    a: {
      var h2 = df.get(a);
      if (void 0 !== h2) {
        var k3 = td,
          n2 = a;
        switch (a) {
          case 'keypress':
            if (0 === od(c)) break a;
          case 'keydown':
          case 'keyup':
            k3 = Rd;
            break;
          case 'focusin':
            n2 = 'focus';
            k3 = Fd;
            break;
          case 'focusout':
            n2 = 'blur';
            k3 = Fd;
            break;
          case 'beforeblur':
          case 'afterblur':
            k3 = Fd;
            break;
          case 'click':
            if (2 === c.button) break a;
          case 'auxclick':
          case 'dblclick':
          case 'mousedown':
          case 'mousemove':
          case 'mouseup':
          case 'mouseout':
          case 'mouseover':
          case 'contextmenu':
            k3 = Bd;
            break;
          case 'drag':
          case 'dragend':
          case 'dragenter':
          case 'dragexit':
          case 'dragleave':
          case 'dragover':
          case 'dragstart':
          case 'drop':
            k3 = Dd;
            break;
          case 'touchcancel':
          case 'touchend':
          case 'touchmove':
          case 'touchstart':
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case 'scroll':
            k3 = vd;
            break;
          case 'wheel':
            k3 = Zd;
            break;
          case 'copy':
          case 'cut':
          case 'paste':
            k3 = Jd;
            break;
          case 'gotpointercapture':
          case 'lostpointercapture':
          case 'pointercancel':
          case 'pointerdown':
          case 'pointermove':
          case 'pointerout':
          case 'pointerover':
          case 'pointerup':
            k3 = Td;
        }
        var t2 = 0 !== (b & 4),
          J2 = !t2 && 'scroll' === a,
          x2 = t2 ? (null !== h2 ? h2 + 'Capture' : null) : h2;
        t2 = [];
        for (var w2 = d2, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag &&
            null !== F2 &&
            ((u2 = F2),
            null !== x2 &&
              ((F2 = Kb(w2, x2)), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2) break;
          w2 = w2.return;
        }
        0 < t2.length &&
          ((h2 = new k3(h2, n2, null, c, e2)),
          g2.push({ event: h2, listeners: t2 }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h2 = 'mouseover' === a || 'pointerover' === a;
        k3 = 'mouseout' === a || 'pointerout' === a;
        if (
          h2 &&
          c !== wb &&
          (n2 = c.relatedTarget || c.fromElement) &&
          (Wc(n2) || n2[uf])
        )
          break a;
        if (k3 || h2) {
          h2 =
            e2.window === e2
              ? e2
              : (h2 = e2.ownerDocument)
                ? h2.defaultView || h2.parentWindow
                : window;
          if (k3) {
            if (
              ((n2 = c.relatedTarget || c.toElement),
              (k3 = d2),
              (n2 = n2 ? Wc(n2) : null),
              null !== n2 &&
                ((J2 = Vb(n2)), n2 !== J2 || (5 !== n2.tag && 6 !== n2.tag)))
            )
              n2 = null;
          } else (k3 = null), (n2 = d2);
          if (k3 !== n2) {
            t2 = Bd;
            F2 = 'onMouseLeave';
            x2 = 'onMouseEnter';
            w2 = 'mouse';
            if ('pointerout' === a || 'pointerover' === a)
              (t2 = Td),
                (F2 = 'onPointerLeave'),
                (x2 = 'onPointerEnter'),
                (w2 = 'pointer');
            J2 = null == k3 ? h2 : ue(k3);
            u2 = null == n2 ? h2 : ue(n2);
            h2 = new t2(F2, w2 + 'leave', k3, c, e2);
            h2.target = J2;
            h2.relatedTarget = u2;
            F2 = null;
            Wc(e2) === d2 &&
              ((t2 = new t2(x2, w2 + 'enter', n2, c, e2)),
              (t2.target = u2),
              (t2.relatedTarget = J2),
              (F2 = t2));
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2)) w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2)) u2++;
                for (; 0 < w2 - u2; ) (t2 = vf(t2)), w2--;
                for (; 0 < u2 - w2; ) (x2 = vf(x2)), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || (null !== x2 && t2 === x2.alternate))
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else t2 = null;
            null !== k3 && wf(g2, h2, k3, t2, false);
            null !== n2 && null !== J2 && wf(g2, J2, n2, t2, true);
          }
        }
      }
      a: {
        h2 = d2 ? ue(d2) : window;
        k3 = h2.nodeName && h2.nodeName.toLowerCase();
        if ('select' === k3 || ('input' === k3 && 'file' === h2.type))
          var na = ve;
        else if (me(h2))
          if (we) na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
        else
          (k3 = h2.nodeName) &&
            'input' === k3.toLowerCase() &&
            ('checkbox' === h2.type || 'radio' === h2.type) &&
            (na = Ee);
        if (na && (na = na(a, d2))) {
          ne(g2, na, c, e2);
          break a;
        }
        xa && xa(a, h2, d2);
        'focusout' === a &&
          (xa = h2._wrapperState) &&
          xa.controlled &&
          'number' === h2.type &&
          cb(h2, 'number', h2.value);
      }
      xa = d2 ? ue(d2) : window;
      switch (a) {
        case 'focusin':
          if (me(xa) || 'true' === xa.contentEditable)
            (Qe = xa), (Re = d2), (Se = null);
          break;
        case 'focusout':
          Se = Re = Qe = null;
          break;
        case 'mousedown':
          Te = true;
          break;
        case 'contextmenu':
        case 'mouseup':
        case 'dragend':
          Te = false;
          Ue(g2, c, e2);
          break;
        case 'selectionchange':
          if (Pe) break;
        case 'keydown':
        case 'keyup':
          Ue(g2, c, e2);
      }
      var $a;
      if (ae)
        b: {
          switch (a) {
            case 'compositionstart':
              var ba = 'onCompositionStart';
              break b;
            case 'compositionend':
              ba = 'onCompositionEnd';
              break b;
            case 'compositionupdate':
              ba = 'onCompositionUpdate';
              break b;
          }
          ba = void 0;
        }
      else
        ie
          ? ge(a, c) && (ba = 'onCompositionEnd')
          : 'keydown' === a && 229 === c.keyCode && (ba = 'onCompositionStart');
      ba &&
        (de &&
          'ko' !== c.locale &&
          (ie || 'onCompositionStart' !== ba
            ? 'onCompositionEnd' === ba && ie && ($a = nd())
            : ((kd = e2),
              (ld = 'value' in kd ? kd.value : kd.textContent),
              (ie = true))),
        (xa = oe(d2, ba)),
        0 < xa.length &&
          ((ba = new Ld(ba, a, null, c, e2)),
          g2.push({ event: ba, listeners: xa }),
          $a ? (ba.data = $a) : (($a = he(c)), null !== $a && (ba.data = $a))));
      if (($a = ce ? je(a, c) : ke(a, c)))
        (d2 = oe(d2, 'onBeforeInput')),
          0 < d2.length &&
            ((e2 = new Ld('onBeforeInput', 'beforeinput', null, c, e2)),
            g2.push({ event: e2, listeners: d2 }),
            (e2.data = $a));
    }
    se(g2, b);
  });
}
function tf(a, b, c) {
  return { instance: a, listener: b, currentTarget: c };
}
function oe(a, b) {
  for (var c = b + 'Capture', d = []; null !== a; ) {
    var e = a,
      f2 = e.stateNode;
    5 === e.tag &&
      null !== f2 &&
      ((e = f2),
      (f2 = Kb(a, c)),
      null != f2 && d.unshift(tf(a, f2, e)),
      (f2 = Kb(a, b)),
      null != f2 && d.push(tf(a, f2, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a) return null;
  do a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f2 = b._reactName, g = []; null !== c && c !== d; ) {
    var h = c,
      k2 = h.alternate,
      l2 = h.stateNode;
    if (null !== k2 && k2 === d) break;
    5 === h.tag &&
      null !== l2 &&
      ((h = l2),
      e
        ? ((k2 = Kb(c, f2)), null != k2 && g.unshift(tf(c, k2, h)))
        : e || ((k2 = Kb(c, f2)), null != k2 && g.push(tf(c, k2, h))));
    c = c.return;
  }
  0 !== g.length && a.push({ event: b, listeners: g });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ('string' === typeof a ? a : '' + a).replace(xf, '\n').replace(yf, '');
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c) throw Error(p(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(a, b) {
  return (
    'textarea' === a ||
    'noscript' === a ||
    'string' === typeof b.children ||
    'number' === typeof b.children ||
    ('object' === typeof b.dangerouslySetInnerHTML &&
      null !== b.dangerouslySetInnerHTML &&
      null != b.dangerouslySetInnerHTML.__html)
  );
}
var Ff = 'function' === typeof setTimeout ? setTimeout : void 0,
  Gf = 'function' === typeof clearTimeout ? clearTimeout : void 0,
  Hf = 'function' === typeof Promise ? Promise : void 0,
  Jf =
    'function' === typeof queueMicrotask
      ? queueMicrotask
      : 'undefined' !== typeof Hf
        ? function (a) {
            return Hf.resolve(null).then(a).catch(If);
          }
        : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, b) {
  var c = b,
    d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType)
      if (((c = e.data), '/$' === c)) {
        if (0 === d) {
          a.removeChild(e);
          bd(b);
          return;
        }
        d--;
      } else ('$' !== c && '$?' !== c && '$!' !== c) || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
    if (8 === b) {
      b = a.data;
      if ('$' === b || '$!' === b || '$?' === b) break;
      if ('/$' === b) return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a; ) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ('$' === c || '$!' === c || '$?' === c) {
        if (0 === b) return a;
        b--;
      } else '/$' === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = '__reactFiber$' + Nf,
  Pf = '__reactProps$' + Nf,
  uf = '__reactContainer$' + Nf,
  of = '__reactEvents$' + Nf,
  Qf = '__reactListeners$' + Nf,
  Rf = '__reactHandles$' + Nf;
function Wc(a) {
  var b = a[Of];
  if (b) return b;
  for (var c = a.parentNode; c; ) {
    if ((b = c[uf] || c[Of])) {
      c = b.alternate;
      if (null !== b.child || (null !== c && null !== c.child))
        for (a = Mf(a); null !== a; ) {
          if ((c = a[Of])) return c;
          a = Mf(a);
        }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || (5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag)
    ? null
    : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(a) {
  return { current: a };
}
function E(a) {
  0 > Tf || ((a.current = Sf[Tf]), (Sf[Tf] = null), Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {},
  H = Uf(Vf),
  Wf = Uf(false),
  Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
    return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
    f2;
  for (f2 in c) e[f2] = b[f2];
  d &&
    ((a = a.stateNode),
    (a.__reactInternalMemoizedUnmaskedChildContext = b),
    (a.__reactInternalMemoizedMaskedChildContext = e));
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf) throw Error(p(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ('function' !== typeof d.getChildContext) return c;
  d = d.getChildContext();
  for (var e in d) if (!(e in b)) throw Error(p(108, Ra(a) || 'Unknown', e));
  return A({}, c, d);
}
function cg(a) {
  a = ((a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext) || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return true;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(p(169));
  c
    ? ((a = bg(a, b, Xf)),
      (d.__reactInternalMemoizedMergedChildContext = a),
      E(Wf),
      E(H),
      G(H, a))
    : E(Wf);
  G(Wf, c);
}
var eg = null,
  fg = false,
  gg = false;
function hg(a) {
  null === eg ? (eg = [a]) : eg.push(a);
}
function ig(a) {
  fg = true;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a = 0,
      b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do d = d(true);
        while (null !== d);
      }
      eg = null;
      fg = false;
    } catch (e) {
      throw (null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e);
    } finally {
      (C = b), (gg = false);
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = '';
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f2 = 32 - oc(b) + e;
  if (30 < f2) {
    var g = e - (e % 5);
    f2 = (d & ((1 << g) - 1)).toString(32);
    d >>= g;
    e -= g;
    rg = (1 << (32 - oc(b) + e)) | (c << e) | d;
    sg = f2 + a;
  } else (rg = (1 << f2) | (c << e) | d), (sg = a);
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg; )
    (mg = kg[--lg]), (kg[lg] = null), (ng = kg[--lg]), (kg[lg] = null);
  for (; a === qg; )
    (qg = og[--pg]),
      (og[pg] = null),
      (sg = og[--pg]),
      (og[pg] = null),
      (rg = og[--pg]),
      (og[pg] = null);
}
var xg = null,
  yg = null,
  I = false,
  zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = 'DELETED';
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? ((a.deletions = [c]), (a.flags |= 16)) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b =
        1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase()
          ? null
          : b;
      return null !== b
        ? ((a.stateNode = b), (xg = a), (yg = Lf(b.firstChild)), true)
        : false;
    case 6:
      return (
        (b = '' === a.pendingProps || 3 !== b.nodeType ? null : b),
        null !== b ? ((a.stateNode = b), (xg = a), (yg = null), true) : false
      );
    case 13:
      return (
        (b = 8 !== b.nodeType ? null : b),
        null !== b
          ? ((c = null !== qg ? { id: rg, overflow: sg } : null),
            (a.memoizedState = {
              dehydrated: b,
              treeContext: c,
              retryLane: 1073741824,
            }),
            (c = Bg(18, null, null, 0)),
            (c.stateNode = b),
            (c.return = a),
            (a.child = c),
            (xg = a),
            (yg = null),
            true)
          : false
      );
    default:
      return false;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a)) throw Error(p(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b)
          ? Ag(d, c)
          : ((a.flags = (a.flags & -4097) | 2), (I = false), (xg = a));
      }
    } else {
      if (Dg(a)) throw Error(p(418));
      a.flags = (a.flags & -4097) | 2;
      I = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; )
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg) return false;
  if (!I) return Fg(a), (I = true), false;
  var b;
  (b = 3 !== a.tag) &&
    !(b = 5 !== a.tag) &&
    ((b = a.type),
    (b = 'head' !== b && 'body' !== b && !Ef(a.type, a.memoizedProps)));
  if (b && (b = yg)) {
    if (Dg(a)) throw (Hg(), Error(p(418)));
    for (; b; ) Ag(a, b), (b = Lf(b.nextSibling));
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a; ) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ('/$' === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else ('$' !== c && '$!' !== c && '$?' !== c) || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a = yg; a; ) a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = false;
}
function Jg(a) {
  null === zg ? (zg = [a]) : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b, c) {
  a = c.ref;
  if (null !== a && 'function' !== typeof a && 'object' !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag) throw Error(p(309));
        var d = c.stateNode;
      }
      if (!d) throw Error(p(147, a));
      var e = d,
        f2 = '' + a;
      if (
        null !== b &&
        null !== b.ref &&
        'function' === typeof b.ref &&
        b.ref._stringRef === f2
      )
        return b.ref;
      b = function (a2) {
        var b2 = e.refs;
        null === a2 ? delete b2[f2] : (b2[f2] = a2);
      };
      b._stringRef = f2;
      return b;
    }
    if ('string' !== typeof a) throw Error(p(284));
    if (!c._owner) throw Error(p(290, a));
  }
  return a;
}
function Mg(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(
    p(
      31,
      '[object Object]' === a
        ? 'object with keys {' + Object.keys(b).join(', ') + '}'
        : a
    )
  );
}
function Ng(a) {
  var b = a._init;
  return b(a._payload);
}
function Og(a) {
  function b(b2, c2) {
    if (a) {
      var d2 = b2.deletions;
      null === d2 ? ((b2.deletions = [c2]), (b2.flags |= 16)) : d2.push(c2);
    }
  }
  function c(c2, d2) {
    if (!a) return null;
    for (; null !== d2; ) b(c2, d2), (d2 = d2.sibling);
    return null;
  }
  function d(a2, b2) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b2; )
      null !== b2.key ? a2.set(b2.key, b2) : a2.set(b2.index, b2),
        (b2 = b2.sibling);
    return a2;
  }
  function e(a2, b2) {
    a2 = Pg(a2, b2);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a) return (b2.flags |= 1048576), c2;
    d2 = b2.alternate;
    if (null !== d2)
      return (d2 = d2.index), d2 < c2 ? ((b2.flags |= 2), c2) : d2;
    b2.flags |= 2;
    return c2;
  }
  function g(b2) {
    a && null === b2.alternate && (b2.flags |= 2);
    return b2;
  }
  function h(a2, b2, c2, d2) {
    if (null === b2 || 6 !== b2.tag)
      return (b2 = Qg(c2, a2.mode, d2)), (b2.return = a2), b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function k2(a2, b2, c2, d2) {
    var f3 = c2.type;
    if (f3 === ya) return m2(a2, b2, c2.props.children, d2, c2.key);
    if (
      null !== b2 &&
      (b2.elementType === f3 ||
        ('object' === typeof f3 &&
          null !== f3 &&
          f3.$$typeof === Ha &&
          Ng(f3) === b2.type))
    )
      return (
        (d2 = e(b2, c2.props)), (d2.ref = Lg(a2, b2, c2)), (d2.return = a2), d2
      );
    d2 = Rg(c2.type, c2.key, c2.props, null, a2.mode, d2);
    d2.ref = Lg(a2, b2, c2);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b2, c2, d2) {
    if (
      null === b2 ||
      4 !== b2.tag ||
      b2.stateNode.containerInfo !== c2.containerInfo ||
      b2.stateNode.implementation !== c2.implementation
    )
      return (b2 = Sg(c2, a2.mode, d2)), (b2.return = a2), b2;
    b2 = e(b2, c2.children || []);
    b2.return = a2;
    return b2;
  }
  function m2(a2, b2, c2, d2, f3) {
    if (null === b2 || 7 !== b2.tag)
      return (b2 = Tg(c2, a2.mode, d2, f3)), (b2.return = a2), b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function q2(a2, b2, c2) {
    if (('string' === typeof b2 && '' !== b2) || 'number' === typeof b2)
      return (b2 = Qg('' + b2, a2.mode, c2)), (b2.return = a2), b2;
    if ('object' === typeof b2 && null !== b2) {
      switch (b2.$$typeof) {
        case va:
          return (
            (c2 = Rg(b2.type, b2.key, b2.props, null, a2.mode, c2)),
            (c2.ref = Lg(a2, null, b2)),
            (c2.return = a2),
            c2
          );
        case wa:
          return (b2 = Sg(b2, a2.mode, c2)), (b2.return = a2), b2;
        case Ha:
          var d2 = b2._init;
          return q2(a2, d2(b2._payload), c2);
      }
      if (eb(b2) || Ka(b2))
        return (b2 = Tg(b2, a2.mode, c2, null)), (b2.return = a2), b2;
      Mg(a2, b2);
    }
    return null;
  }
  function r2(a2, b2, c2, d2) {
    var e2 = null !== b2 ? b2.key : null;
    if (('string' === typeof c2 && '' !== c2) || 'number' === typeof c2)
      return null !== e2 ? null : h(a2, b2, '' + c2, d2);
    if ('object' === typeof c2 && null !== c2) {
      switch (c2.$$typeof) {
        case va:
          return c2.key === e2 ? k2(a2, b2, c2, d2) : null;
        case wa:
          return c2.key === e2 ? l2(a2, b2, c2, d2) : null;
        case Ha:
          return (e2 = c2._init), r2(a2, b2, e2(c2._payload), d2);
      }
      if (eb(c2) || Ka(c2))
        return null !== e2 ? null : m2(a2, b2, c2, d2, null);
      Mg(a2, c2);
    }
    return null;
  }
  function y2(a2, b2, c2, d2, e2) {
    if (('string' === typeof d2 && '' !== d2) || 'number' === typeof d2)
      return (a2 = a2.get(c2) || null), h(b2, a2, '' + d2, e2);
    if ('object' === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va:
          return (
            (a2 = a2.get(null === d2.key ? c2 : d2.key) || null),
            k2(b2, a2, d2, e2)
          );
        case wa:
          return (
            (a2 = a2.get(null === d2.key ? c2 : d2.key) || null),
            l2(b2, a2, d2, e2)
          );
        case Ha:
          var f3 = d2._init;
          return y2(a2, b2, c2, f3(d2._payload), e2);
      }
      if (eb(d2) || Ka(d2))
        return (a2 = a2.get(c2) || null), m2(b2, a2, d2, e2, null);
      Mg(b2, d2);
    }
    return null;
  }
  function n2(e2, g2, h2, k3) {
    for (
      var l3 = null, m3 = null, u2 = g2, w2 = (g2 = 0), x2 = null;
      null !== u2 && w2 < h2.length;
      w2++
    ) {
      u2.index > w2 ? ((x2 = u2), (u2 = null)) : (x2 = u2.sibling);
      var n3 = r2(e2, u2, h2[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b(e2, u2);
      g2 = f2(n3, g2, w2);
      null === m3 ? (l3 = n3) : (m3.sibling = n3);
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h2.length) return c(e2, u2), I && tg(e2, w2), l3;
    if (null === u2) {
      for (; w2 < h2.length; w2++)
        (u2 = q2(e2, h2[w2], k3)),
          null !== u2 &&
            ((g2 = f2(u2, g2, w2)),
            null === m3 ? (l3 = u2) : (m3.sibling = u2),
            (m3 = u2));
      I && tg(e2, w2);
      return l3;
    }
    for (u2 = d(e2, u2); w2 < h2.length; w2++)
      (x2 = y2(u2, e2, w2, h2[w2], k3)),
        null !== x2 &&
          (a &&
            null !== x2.alternate &&
            u2.delete(null === x2.key ? w2 : x2.key),
          (g2 = f2(x2, g2, w2)),
          null === m3 ? (l3 = x2) : (m3.sibling = x2),
          (m3 = x2));
    a &&
      u2.forEach(function (a2) {
        return b(e2, a2);
      });
    I && tg(e2, w2);
    return l3;
  }
  function t2(e2, g2, h2, k3) {
    var l3 = Ka(h2);
    if ('function' !== typeof l3) throw Error(p(150));
    h2 = l3.call(h2);
    if (null == h2) throw Error(p(151));
    for (
      var u2 = (l3 = null), m3 = g2, w2 = (g2 = 0), x2 = null, n3 = h2.next();
      null !== m3 && !n3.done;
      w2++, n3 = h2.next()
    ) {
      m3.index > w2 ? ((x2 = m3), (m3 = null)) : (x2 = m3.sibling);
      var t3 = r2(e2, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b(e2, m3);
      g2 = f2(t3, g2, w2);
      null === u2 ? (l3 = t3) : (u2.sibling = t3);
      u2 = t3;
      m3 = x2;
    }
    if (n3.done) return c(e2, m3), I && tg(e2, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h2.next())
        (n3 = q2(e2, n3.value, k3)),
          null !== n3 &&
            ((g2 = f2(n3, g2, w2)),
            null === u2 ? (l3 = n3) : (u2.sibling = n3),
            (u2 = n3));
      I && tg(e2, w2);
      return l3;
    }
    for (m3 = d(e2, m3); !n3.done; w2++, n3 = h2.next())
      (n3 = y2(m3, e2, w2, n3.value, k3)),
        null !== n3 &&
          (a &&
            null !== n3.alternate &&
            m3.delete(null === n3.key ? w2 : n3.key),
          (g2 = f2(n3, g2, w2)),
          null === u2 ? (l3 = n3) : (u2.sibling = n3),
          (u2 = n3));
    a &&
      m3.forEach(function (a2) {
        return b(e2, a2);
      });
    I && tg(e2, w2);
    return l3;
  }
  function J2(a2, d2, f3, h2) {
    'object' === typeof f3 &&
      null !== f3 &&
      f3.type === ya &&
      null === f3.key &&
      (f3 = f3.props.children);
    if ('object' === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c(a2, l3.sibling);
                    d2 = e(l3, f3.props.children);
                    d2.return = a2;
                    a2 = d2;
                    break a;
                  }
                } else if (
                  l3.elementType === k3 ||
                  ('object' === typeof k3 &&
                    null !== k3 &&
                    k3.$$typeof === Ha &&
                    Ng(k3) === l3.type)
                ) {
                  c(a2, l3.sibling);
                  d2 = e(l3, f3.props);
                  d2.ref = Lg(a2, l3, f3);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                }
                c(a2, l3);
                break;
              } else b(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya
              ? ((d2 = Tg(f3.props.children, a2.mode, h2, f3.key)),
                (d2.return = a2),
                (a2 = d2))
              : ((h2 = Rg(f3.type, f3.key, f3.props, null, a2.mode, h2)),
                (h2.ref = Lg(a2, d2, f3)),
                (h2.return = a2),
                (a2 = h2));
          }
          return g(a2);
        case wa:
          a: {
            for (l3 = f3.key; null !== d2; ) {
              if (d2.key === l3)
                if (
                  4 === d2.tag &&
                  d2.stateNode.containerInfo === f3.containerInfo &&
                  d2.stateNode.implementation === f3.implementation
                ) {
                  c(a2, d2.sibling);
                  d2 = e(d2, f3.children || []);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                } else {
                  c(a2, d2);
                  break;
                }
              else b(a2, d2);
              d2 = d2.sibling;
            }
            d2 = Sg(f3, a2.mode, h2);
            d2.return = a2;
            a2 = d2;
          }
          return g(a2);
        case Ha:
          return (l3 = f3._init), J2(a2, d2, l3(f3._payload), h2);
      }
      if (eb(f3)) return n2(a2, d2, f3, h2);
      if (Ka(f3)) return t2(a2, d2, f3, h2);
      Mg(a2, f3);
    }
    return ('string' === typeof f3 && '' !== f3) || 'number' === typeof f3
      ? ((f3 = '' + f3),
        null !== d2 && 6 === d2.tag
          ? (c(a2, d2.sibling), (d2 = e(d2, f3)), (d2.return = a2), (a2 = d2))
          : (c(a2, d2),
            (d2 = Qg(f3, a2.mode, h2)),
            (d2.return = a2),
            (a2 = d2)),
        g(a2))
      : c(a2, d2);
  }
  return J2;
}
var Ug = Og(true),
  Vg = Og(false),
  Wg = Uf(null),
  Xg = null,
  Yg = null,
  Zg = null;
function $g() {
  Zg = Yg = Xg = null;
}
function ah(a) {
  var b = Wg.current;
  E(Wg);
  a._currentValue = b;
}
function bh(a, b, c) {
  for (; null !== a; ) {
    var d = a.alternate;
    (a.childLanes & b) !== b
      ? ((a.childLanes |= b), null !== d && (d.childLanes |= b))
      : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c) break;
    a = a.return;
  }
}
function ch(a, b) {
  Xg = a;
  Zg = Yg = null;
  a = a.dependencies;
  null !== a &&
    null !== a.firstContext &&
    (0 !== (a.lanes & b) && (dh = true), (a.firstContext = null));
}
function eh(a) {
  var b = a._currentValue;
  if (Zg !== a)
    if (((a = { context: a, memoizedValue: b, next: null }), null === Yg)) {
      if (null === Xg) throw Error(p(308));
      Yg = a;
      Xg.dependencies = { lanes: 0, firstContext: a };
    } else Yg = Yg.next = a;
  return b;
}
var fh = null;
function gh(a) {
  null === fh ? (fh = [a]) : fh.push(a);
}
function hh(a, b, c, d) {
  var e = b.interleaved;
  null === e ? ((c.next = c), gh(b)) : ((c.next = e.next), (e.next = c));
  b.interleaved = c;
  return ih(a, d);
}
function ih(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a; )
    (a.childLanes |= b),
      (c = a.alternate),
      null !== c && (c.childLanes |= b),
      (c = a),
      (a = a.return);
  return 3 === c.tag ? c.stateNode : null;
}
var jh = false;
function kh(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function lh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a &&
    (b.updateQueue = {
      baseState: a.baseState,
      firstBaseUpdate: a.firstBaseUpdate,
      lastBaseUpdate: a.lastBaseUpdate,
      shared: a.shared,
      effects: a.effects,
    });
}
function mh(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function nh(a, b, c) {
  var d = a.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? (b.next = b) : ((b.next = e.next), (e.next = b));
    d.pending = b;
    return ih(a, c);
  }
  e = d.interleaved;
  null === e ? ((b.next = b), gh(d)) : ((b.next = e.next), (e.next = b));
  d.interleaved = b;
  return ih(a, c);
}
function oh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && ((b = b.shared), 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function ph(a, b) {
  var c = a.updateQueue,
    d = a.alternate;
  if (null !== d && ((d = d.updateQueue), c === d)) {
    var e = null,
      f2 = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null,
        };
        null === f2 ? (e = f2 = g) : (f2 = f2.next = g);
        c = c.next;
      } while (null !== c);
      null === f2 ? (e = f2 = b) : (f2 = f2.next = b);
    } else e = f2 = b;
    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f2,
      shared: d.shared,
      effects: d.effects,
    };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? (c.firstBaseUpdate = b) : (a.next = b);
  c.lastBaseUpdate = b;
}
function qh(a, b, c, d) {
  var e = a.updateQueue;
  jh = false;
  var f2 = e.firstBaseUpdate,
    g = e.lastBaseUpdate,
    h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k2 = h,
      l2 = k2.next;
    k2.next = null;
    null === g ? (f2 = l2) : (g.next = l2);
    g = k2;
    var m2 = a.alternate;
    null !== m2 &&
      ((m2 = m2.updateQueue),
      (h = m2.lastBaseUpdate),
      h !== g &&
        (null === h ? (m2.firstBaseUpdate = l2) : (h.next = l2),
        (m2.lastBaseUpdate = k2)));
  }
  if (null !== f2) {
    var q2 = e.baseState;
    g = 0;
    m2 = l2 = k2 = null;
    h = f2;
    do {
      var r2 = h.lane,
        y2 = h.eventTime;
      if ((d & r2) === r2) {
        null !== m2 &&
          (m2 = m2.next =
            {
              eventTime: y2,
              lane: 0,
              tag: h.tag,
              payload: h.payload,
              callback: h.callback,
              next: null,
            });
        a: {
          var n2 = a,
            t2 = h;
          r2 = b;
          y2 = c;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ('function' === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = (n2.flags & -65537) | 128;
            case 0:
              n2 = t2.payload;
              r2 = 'function' === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2) break a;
              q2 = A({}, q2, r2);
              break a;
            case 2:
              jh = true;
          }
        }
        null !== h.callback &&
          0 !== h.lane &&
          ((a.flags |= 64),
          (r2 = e.effects),
          null === r2 ? (e.effects = [h]) : r2.push(h));
      } else
        (y2 = {
          eventTime: y2,
          lane: r2,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null,
        }),
          null === m2 ? ((l2 = m2 = y2), (k2 = q2)) : (m2 = m2.next = y2),
          (g |= r2);
      h = h.next;
      if (null === h)
        if (((h = e.shared.pending), null === h)) break;
        else
          (r2 = h),
            (h = r2.next),
            (r2.next = null),
            (e.lastBaseUpdate = r2),
            (e.shared.pending = null);
    } while (1);
    null === m2 && (k2 = q2);
    e.baseState = k2;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = m2;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do (g |= e.lane), (e = e.next);
      while (e !== b);
    } else null === f2 && (e.shared.lanes = 0);
    rh |= g;
    a.lanes = g;
    a.memoizedState = q2;
  }
}
function sh(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a)
    for (b = 0; b < a.length; b++) {
      var d = a[b],
        e = d.callback;
      if (null !== e) {
        d.callback = null;
        d = c;
        if ('function' !== typeof e) throw Error(p(191, e));
        e.call(d);
      }
    }
}
var th = {},
  uh = Uf(th),
  vh = Uf(th),
  wh = Uf(th);
function xh(a) {
  if (a === th) throw Error(p(174));
  return a;
}
function yh(a, b) {
  G(wh, b);
  G(vh, a);
  G(uh, th);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, '');
      break;
    default:
      (a = 8 === a ? b.parentNode : b),
        (b = a.namespaceURI || null),
        (a = a.tagName),
        (b = lb(b, a));
  }
  E(uh);
  G(uh, b);
}
function zh() {
  E(uh);
  E(vh);
  E(wh);
}
function Ah(a) {
  xh(wh.current);
  var b = xh(uh.current);
  var c = lb(b, a.type);
  b !== c && (G(vh, a), G(uh, c));
}
function Bh(a) {
  vh.current === a && (E(uh), E(vh));
}
var L = Uf(0);
function Ch(a) {
  for (var b = a; null !== b; ) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (
        null !== c &&
        ((c = c.dehydrated), null === c || '$?' === c.data || '$!' === c.data)
      )
        return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a) break;
    for (; null === b.sibling; ) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Dh = [];
function Eh() {
  for (var a = 0; a < Dh.length; a++)
    Dh[a]._workInProgressVersionPrimary = null;
  Dh.length = 0;
}
var Fh = ua.ReactCurrentDispatcher,
  Gh = ua.ReactCurrentBatchConfig,
  Hh = 0,
  M = null,
  N = null,
  O = null,
  Ih = false,
  Jh = false,
  Kh = 0,
  Lh = 0;
function P() {
  throw Error(p(321));
}
function Mh(a, b) {
  if (null === b) return false;
  for (var c = 0; c < b.length && c < a.length; c++)
    if (!He(a[c], b[c])) return false;
  return true;
}
function Nh(a, b, c, d, e, f2) {
  Hh = f2;
  M = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Fh.current = null === a || null === a.memoizedState ? Oh : Ph;
  a = c(d, e);
  if (Jh) {
    f2 = 0;
    do {
      Jh = false;
      Kh = 0;
      if (25 <= f2) throw Error(p(301));
      f2 += 1;
      O = N = null;
      b.updateQueue = null;
      Fh.current = Qh;
      a = c(d, e);
    } while (Jh);
  }
  Fh.current = Rh;
  b = null !== N && null !== N.next;
  Hh = 0;
  O = N = M = null;
  Ih = false;
  if (b) throw Error(p(300));
  return a;
}
function Sh() {
  var a = 0 !== Kh;
  Kh = 0;
  return a;
}
function Th() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  null === O ? (M.memoizedState = O = a) : (O = O.next = a);
  return O;
}
function Uh() {
  if (null === N) {
    var a = M.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = N.next;
  var b = null === O ? M.memoizedState : O.next;
  if (null !== b) (O = b), (N = a);
  else {
    if (null === a) throw Error(p(310));
    N = a;
    a = {
      memoizedState: N.memoizedState,
      baseState: N.baseState,
      baseQueue: N.baseQueue,
      queue: N.queue,
      next: null,
    };
    null === O ? (M.memoizedState = O = a) : (O = O.next = a);
  }
  return O;
}
function Vh(a, b) {
  return 'function' === typeof b ? b(a) : b;
}
function Wh(a) {
  var b = Uh(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = N,
    e = d.baseQueue,
    f2 = c.pending;
  if (null !== f2) {
    if (null !== e) {
      var g = e.next;
      e.next = f2.next;
      f2.next = g;
    }
    d.baseQueue = e = f2;
    c.pending = null;
  }
  if (null !== e) {
    f2 = e.next;
    d = d.baseState;
    var h = (g = null),
      k2 = null,
      l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Hh & m2) === m2)
        null !== k2 &&
          (k2 = k2.next =
            {
              lane: 0,
              action: l2.action,
              hasEagerState: l2.hasEagerState,
              eagerState: l2.eagerState,
              next: null,
            }),
          (d = l2.hasEagerState ? l2.eagerState : a(d, l2.action));
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null,
        };
        null === k2 ? ((h = k2 = q2), (g = d)) : (k2 = k2.next = q2);
        M.lanes |= m2;
        rh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? (g = d) : (k2.next = h);
    He(d, b.memoizedState) || (dh = true);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k2;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do (f2 = e.lane), (M.lanes |= f2), (rh |= f2), (e = e.next);
    while (e !== a);
  } else null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function Xh(a) {
  var b = Uh(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
    e = c.pending,
    f2 = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g = (e = e.next);
    do (f2 = a(f2, g.action)), (g = g.next);
    while (g !== e);
    He(f2, b.memoizedState) || (dh = true);
    b.memoizedState = f2;
    null === b.baseQueue && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function Yh() {}
function Zh(a, b) {
  var c = M,
    d = Uh(),
    e = b(),
    f2 = !He(d.memoizedState, e);
  f2 && ((d.memoizedState = e), (dh = true));
  d = d.queue;
  $h(ai.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f2 || (null !== O && O.memoizedState.tag & 1)) {
    c.flags |= 2048;
    bi(9, ci.bind(null, c, d, e, b), void 0, null);
    if (null === Q) throw Error(p(349));
    0 !== (Hh & 30) || di(c, b, e);
  }
  return e;
}
function di(a, b, c) {
  a.flags |= 16384;
  a = { getSnapshot: b, value: c };
  b = M.updateQueue;
  null === b
    ? ((b = { lastEffect: null, stores: null }),
      (M.updateQueue = b),
      (b.stores = [a]))
    : ((c = b.stores), null === c ? (b.stores = [a]) : c.push(a));
}
function ci(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  ei(b) && fi(a);
}
function ai(a, b, c) {
  return c(function () {
    ei(b) && fi(a);
  });
}
function ei(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return true;
  }
}
function fi(a) {
  var b = ih(a, 1);
  null !== b && gi(b, a, 1, -1);
}
function hi(a) {
  var b = Th();
  'function' === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = {
    pending: null,
    interleaved: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: Vh,
    lastRenderedState: a,
  };
  b.queue = a;
  a = a.dispatch = ii.bind(null, M, a);
  return [b.memoizedState, a];
}
function bi(a, b, c, d) {
  a = { tag: a, create: b, destroy: c, deps: d, next: null };
  b = M.updateQueue;
  null === b
    ? ((b = { lastEffect: null, stores: null }),
      (M.updateQueue = b),
      (b.lastEffect = a.next = a))
    : ((c = b.lastEffect),
      null === c
        ? (b.lastEffect = a.next = a)
        : ((d = c.next), (c.next = a), (a.next = d), (b.lastEffect = a)));
  return a;
}
function ji() {
  return Uh().memoizedState;
}
function ki(a, b, c, d) {
  var e = Th();
  M.flags |= a;
  e.memoizedState = bi(1 | b, c, void 0, void 0 === d ? null : d);
}
function li(a, b, c, d) {
  var e = Uh();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== N) {
    var g = N.memoizedState;
    f2 = g.destroy;
    if (null !== d && Mh(d, g.deps)) {
      e.memoizedState = bi(b, c, f2, d);
      return;
    }
  }
  M.flags |= a;
  e.memoizedState = bi(1 | b, c, f2, d);
}
function mi(a, b) {
  return ki(8390656, 8, a, b);
}
function $h(a, b) {
  return li(2048, 8, a, b);
}
function ni(a, b) {
  return li(4, 2, a, b);
}
function oi(a, b) {
  return li(4, 4, a, b);
}
function pi(a, b) {
  if ('function' === typeof b)
    return (
      (a = a()),
      b(a),
      function () {
        b(null);
      }
    );
  if (null !== b && void 0 !== b)
    return (
      (a = a()),
      (b.current = a),
      function () {
        b.current = null;
      }
    );
}
function qi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return li(4, 4, pi.bind(null, b, a), c);
}
function ri() {}
function si(a, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}
function ti(a, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function ui(a, b, c) {
  if (0 === (Hh & 21))
    return (
      a.baseState && ((a.baseState = false), (dh = true)), (a.memoizedState = c)
    );
  He(c, b) || ((c = yc()), (M.lanes |= c), (rh |= c), (a.baseState = true));
  return b;
}
function vi(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(true);
  var d = Gh.transition;
  Gh.transition = {};
  try {
    a(false), b();
  } finally {
    (C = c), (Gh.transition = d);
  }
}
function wi() {
  return Uh().memoizedState;
}
function xi(a, b, c) {
  var d = yi(a);
  c = {
    lane: d,
    action: c,
    hasEagerState: false,
    eagerState: null,
    next: null,
  };
  if (zi(a)) Ai(b, c);
  else if (((c = hh(a, b, c, d)), null !== c)) {
    var e = R();
    gi(c, a, d, e);
    Bi(c, b, d);
  }
}
function ii(a, b, c) {
  var d = yi(a),
    e = {
      lane: d,
      action: c,
      hasEagerState: false,
      eagerState: null,
      next: null,
    };
  if (zi(a)) Ai(b, e);
  else {
    var f2 = a.alternate;
    if (
      0 === a.lanes &&
      (null === f2 || 0 === f2.lanes) &&
      ((f2 = b.lastRenderedReducer), null !== f2)
    )
      try {
        var g = b.lastRenderedState,
          h = f2(g, c);
        e.hasEagerState = true;
        e.eagerState = h;
        if (He(h, g)) {
          var k2 = b.interleaved;
          null === k2
            ? ((e.next = e), gh(b))
            : ((e.next = k2.next), (k2.next = e));
          b.interleaved = e;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c = hh(a, b, e, d);
    null !== c && ((e = R()), gi(c, a, d, e), Bi(c, b, d));
  }
}
function zi(a) {
  var b = a.alternate;
  return a === M || (null !== b && b === M);
}
function Ai(a, b) {
  Jh = Ih = true;
  var c = a.pending;
  null === c ? (b.next = b) : ((b.next = c.next), (c.next = b));
  a.pending = b;
}
function Bi(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var Rh = {
    readContext: eh,
    useCallback: P,
    useContext: P,
    useEffect: P,
    useImperativeHandle: P,
    useInsertionEffect: P,
    useLayoutEffect: P,
    useMemo: P,
    useReducer: P,
    useRef: P,
    useState: P,
    useDebugValue: P,
    useDeferredValue: P,
    useTransition: P,
    useMutableSource: P,
    useSyncExternalStore: P,
    useId: P,
    unstable_isNewReconciler: false,
  },
  Oh = {
    readContext: eh,
    useCallback: function (a, b) {
      Th().memoizedState = [a, void 0 === b ? null : b];
      return a;
    },
    useContext: eh,
    useEffect: mi,
    useImperativeHandle: function (a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return ki(4194308, 4, pi.bind(null, b, a), c);
    },
    useLayoutEffect: function (a, b) {
      return ki(4194308, 4, a, b);
    },
    useInsertionEffect: function (a, b) {
      return ki(4, 2, a, b);
    },
    useMemo: function (a, b) {
      var c = Th();
      b = void 0 === b ? null : b;
      a = a();
      c.memoizedState = [a, b];
      return a;
    },
    useReducer: function (a, b, c) {
      var d = Th();
      b = void 0 !== c ? c(b) : b;
      d.memoizedState = d.baseState = b;
      a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: a,
        lastRenderedState: b,
      };
      d.queue = a;
      a = a.dispatch = xi.bind(null, M, a);
      return [d.memoizedState, a];
    },
    useRef: function (a) {
      var b = Th();
      a = { current: a };
      return (b.memoizedState = a);
    },
    useState: hi,
    useDebugValue: ri,
    useDeferredValue: function (a) {
      return (Th().memoizedState = a);
    },
    useTransition: function () {
      var a = hi(false),
        b = a[0];
      a = vi.bind(null, a[1]);
      Th().memoizedState = a;
      return [b, a];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (a, b, c) {
      var d = M,
        e = Th();
      if (I) {
        if (void 0 === c) throw Error(p(407));
        c = c();
      } else {
        c = b();
        if (null === Q) throw Error(p(349));
        0 !== (Hh & 30) || di(d, b, c);
      }
      e.memoizedState = c;
      var f2 = { value: c, getSnapshot: b };
      e.queue = f2;
      mi(ai.bind(null, d, f2, a), [a]);
      d.flags |= 2048;
      bi(9, ci.bind(null, d, f2, c, b), void 0, null);
      return c;
    },
    useId: function () {
      var a = Th(),
        b = Q.identifierPrefix;
      if (I) {
        var c = sg;
        var d = rg;
        c = (d & ~(1 << (32 - oc(d) - 1))).toString(32) + c;
        b = ':' + b + 'R' + c;
        c = Kh++;
        0 < c && (b += 'H' + c.toString(32));
        b += ':';
      } else (c = Lh++), (b = ':' + b + 'r' + c.toString(32) + ':');
      return (a.memoizedState = b);
    },
    unstable_isNewReconciler: false,
  },
  Ph = {
    readContext: eh,
    useCallback: si,
    useContext: eh,
    useEffect: $h,
    useImperativeHandle: qi,
    useInsertionEffect: ni,
    useLayoutEffect: oi,
    useMemo: ti,
    useReducer: Wh,
    useRef: ji,
    useState: function () {
      return Wh(Vh);
    },
    useDebugValue: ri,
    useDeferredValue: function (a) {
      var b = Uh();
      return ui(b, N.memoizedState, a);
    },
    useTransition: function () {
      var a = Wh(Vh)[0],
        b = Uh().memoizedState;
      return [a, b];
    },
    useMutableSource: Yh,
    useSyncExternalStore: Zh,
    useId: wi,
    unstable_isNewReconciler: false,
  },
  Qh = {
    readContext: eh,
    useCallback: si,
    useContext: eh,
    useEffect: $h,
    useImperativeHandle: qi,
    useInsertionEffect: ni,
    useLayoutEffect: oi,
    useMemo: ti,
    useReducer: Xh,
    useRef: ji,
    useState: function () {
      return Xh(Vh);
    },
    useDebugValue: ri,
    useDeferredValue: function (a) {
      var b = Uh();
      return null === N ? (b.memoizedState = a) : ui(b, N.memoizedState, a);
    },
    useTransition: function () {
      var a = Xh(Vh)[0],
        b = Uh().memoizedState;
      return [a, b];
    },
    useMutableSource: Yh,
    useSyncExternalStore: Zh,
    useId: wi,
    unstable_isNewReconciler: false,
  };
function Ci(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a) void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
function Di(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var Ei = {
  isMounted: function (a) {
    return (a = a._reactInternals) ? Vb(a) === a : false;
  },
  enqueueSetState: function (a, b, c) {
    a = a._reactInternals;
    var d = R(),
      e = yi(a),
      f2 = mh(d, e);
    f2.payload = b;
    void 0 !== c && null !== c && (f2.callback = c);
    b = nh(a, f2, e);
    null !== b && (gi(b, a, e, d), oh(b, a, e));
  },
  enqueueReplaceState: function (a, b, c) {
    a = a._reactInternals;
    var d = R(),
      e = yi(a),
      f2 = mh(d, e);
    f2.tag = 1;
    f2.payload = b;
    void 0 !== c && null !== c && (f2.callback = c);
    b = nh(a, f2, e);
    null !== b && (gi(b, a, e, d), oh(b, a, e));
  },
  enqueueForceUpdate: function (a, b) {
    a = a._reactInternals;
    var c = R(),
      d = yi(a),
      e = mh(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    b = nh(a, e, d);
    null !== b && (gi(b, a, d, c), oh(b, a, d));
  },
};
function Fi(a, b, c, d, e, f2, g) {
  a = a.stateNode;
  return 'function' === typeof a.shouldComponentUpdate
    ? a.shouldComponentUpdate(d, f2, g)
    : b.prototype && b.prototype.isPureReactComponent
      ? !Ie(c, d) || !Ie(e, f2)
      : true;
}
function Gi(a, b, c) {
  var d = false,
    e = Vf;
  var f2 = b.contextType;
  'object' === typeof f2 && null !== f2
    ? (f2 = eh(f2))
    : ((e = Zf(b) ? Xf : H.current),
      (d = b.contextTypes),
      (f2 = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf));
  b = new b(c, f2);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = Ei;
  a.stateNode = b;
  b._reactInternals = a;
  d &&
    ((a = a.stateNode),
    (a.__reactInternalMemoizedUnmaskedChildContext = e),
    (a.__reactInternalMemoizedMaskedChildContext = f2));
  return b;
}
function Hi(a, b, c, d) {
  a = b.state;
  'function' === typeof b.componentWillReceiveProps &&
    b.componentWillReceiveProps(c, d);
  'function' === typeof b.UNSAFE_componentWillReceiveProps &&
    b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && Ei.enqueueReplaceState(b, b.state, null);
}
function Ii(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = {};
  kh(a);
  var f2 = b.contextType;
  'object' === typeof f2 && null !== f2
    ? (e.context = eh(f2))
    : ((f2 = Zf(b) ? Xf : H.current), (e.context = Yf(a, f2)));
  e.state = a.memoizedState;
  f2 = b.getDerivedStateFromProps;
  'function' === typeof f2 && (Di(a, b, f2, c), (e.state = a.memoizedState));
  'function' === typeof b.getDerivedStateFromProps ||
    'function' === typeof e.getSnapshotBeforeUpdate ||
    ('function' !== typeof e.UNSAFE_componentWillMount &&
      'function' !== typeof e.componentWillMount) ||
    ((b = e.state),
    'function' === typeof e.componentWillMount && e.componentWillMount(),
    'function' === typeof e.UNSAFE_componentWillMount &&
      e.UNSAFE_componentWillMount(),
    b !== e.state && Ei.enqueueReplaceState(e, e.state, null),
    qh(a, c, e, d),
    (e.state = a.memoizedState));
  'function' === typeof e.componentDidMount && (a.flags |= 4194308);
}
function Ji(a, b) {
  try {
    var c = '',
      d = b;
    do (c += Pa(d)), (d = d.return);
    while (d);
    var e = c;
  } catch (f2) {
    e = '\nError generating stack: ' + f2.message + '\n' + f2.stack;
  }
  return { value: a, source: b, stack: e, digest: null };
}
function Ki(a, b, c) {
  return {
    value: a,
    source: null,
    stack: null != c ? c : null,
    digest: null != b ? b : null,
  };
}
function Li(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}
var Mi = 'function' === typeof WeakMap ? WeakMap : Map;
function Ni(a, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function () {
    Oi || ((Oi = true), (Pi = d));
    Li(a, b);
  };
  return c;
}
function Qi(a, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ('function' === typeof d) {
    var e = b.value;
    c.payload = function () {
      return d(e);
    };
    c.callback = function () {
      Li(a, b);
    };
  }
  var f2 = a.stateNode;
  null !== f2 &&
    'function' === typeof f2.componentDidCatch &&
    (c.callback = function () {
      Li(a, b);
      'function' !== typeof d &&
        (null === Ri ? (Ri = /* @__PURE__ */ new Set([this])) : Ri.add(this));
      var c2 = b.stack;
      this.componentDidCatch(b.value, {
        componentStack: null !== c2 ? c2 : '',
      });
    });
  return c;
}
function Si(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Mi();
    var e = /* @__PURE__ */ new Set();
    d.set(b, e);
  } else
    (e = d.get(b)),
      void 0 === e && ((e = /* @__PURE__ */ new Set()), d.set(b, e));
  e.has(c) || (e.add(c), (a = Ti.bind(null, a, b, c)), b.then(a, a));
}
function Ui(a) {
  do {
    var b;
    if ((b = 13 === a.tag))
      (b = a.memoizedState),
        (b = null !== b ? (null !== b.dehydrated ? true : false) : true);
    if (b) return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Vi(a, b, c, d, e) {
  if (0 === (a.mode & 1))
    return (
      a === b
        ? (a.flags |= 65536)
        : ((a.flags |= 128),
          (c.flags |= 131072),
          (c.flags &= -52805),
          1 === c.tag &&
            (null === c.alternate
              ? (c.tag = 17)
              : ((b = mh(-1, 1)), (b.tag = 2), nh(c, b, 1))),
          (c.lanes |= 1)),
      a
    );
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Wi = ua.ReactCurrentOwner,
  dh = false;
function Xi(a, b, c, d) {
  b.child = null === a ? Vg(b, null, c, d) : Ug(b, a.child, c, d);
}
function Yi(a, b, c, d, e) {
  c = c.render;
  var f2 = b.ref;
  ch(b, e);
  d = Nh(a, b, c, d, f2, e);
  c = Sh();
  if (null !== a && !dh)
    return (
      (b.updateQueue = a.updateQueue),
      (b.flags &= -2053),
      (a.lanes &= ~e),
      Zi(a, b, e)
    );
  I && c && vg(b);
  b.flags |= 1;
  Xi(a, b, d, e);
  return b.child;
}
function $i(a, b, c, d, e) {
  if (null === a) {
    var f2 = c.type;
    if (
      'function' === typeof f2 &&
      !aj(f2) &&
      void 0 === f2.defaultProps &&
      null === c.compare &&
      void 0 === c.defaultProps
    )
      return (b.tag = 15), (b.type = f2), bj(a, b, f2, d, e);
    a = Rg(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return (b.child = a);
  }
  f2 = a.child;
  if (0 === (a.lanes & e)) {
    var g = f2.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref) return Zi(a, b, e);
  }
  b.flags |= 1;
  a = Pg(f2, d);
  a.ref = b.ref;
  a.return = b;
  return (b.child = a);
}
function bj(a, b, c, d, e) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d) && a.ref === b.ref)
      if (((dh = false), (b.pendingProps = d = f2), 0 !== (a.lanes & e)))
        0 !== (a.flags & 131072) && (dh = true);
      else return (b.lanes = a.lanes), Zi(a, b, e);
  }
  return cj(a, b, c, d, e);
}
function dj(a, b, c) {
  var d = b.pendingProps,
    e = d.children,
    f2 = null !== a ? a.memoizedState : null;
  if ('hidden' === d.mode)
    if (0 === (b.mode & 1))
      (b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        G(ej, fj),
        (fj |= c);
    else {
      if (0 === (c & 1073741824))
        return (
          (a = null !== f2 ? f2.baseLanes | c : c),
          (b.lanes = b.childLanes = 1073741824),
          (b.memoizedState = {
            baseLanes: a,
            cachePool: null,
            transitions: null,
          }),
          (b.updateQueue = null),
          G(ej, fj),
          (fj |= a),
          null
        );
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d = null !== f2 ? f2.baseLanes : c;
      G(ej, fj);
      fj |= d;
    }
  else
    null !== f2 ? ((d = f2.baseLanes | c), (b.memoizedState = null)) : (d = c),
      G(ej, fj),
      (fj |= d);
  Xi(a, b, e, c);
  return b.child;
}
function gj(a, b) {
  var c = b.ref;
  if ((null === a && null !== c) || (null !== a && a.ref !== c))
    (b.flags |= 512), (b.flags |= 2097152);
}
function cj(a, b, c, d, e) {
  var f2 = Zf(c) ? Xf : H.current;
  f2 = Yf(b, f2);
  ch(b, e);
  c = Nh(a, b, c, d, f2, e);
  d = Sh();
  if (null !== a && !dh)
    return (
      (b.updateQueue = a.updateQueue),
      (b.flags &= -2053),
      (a.lanes &= ~e),
      Zi(a, b, e)
    );
  I && d && vg(b);
  b.flags |= 1;
  Xi(a, b, c, e);
  return b.child;
}
function hj(a, b, c, d, e) {
  if (Zf(c)) {
    var f2 = true;
    cg(b);
  } else f2 = false;
  ch(b, e);
  if (null === b.stateNode) ij(a, b), Gi(b, c, d), Ii(b, c, d, e), (d = true);
  else if (null === a) {
    var g = b.stateNode,
      h = b.memoizedProps;
    g.props = h;
    var k2 = g.context,
      l2 = c.contextType;
    'object' === typeof l2 && null !== l2
      ? (l2 = eh(l2))
      : ((l2 = Zf(c) ? Xf : H.current), (l2 = Yf(b, l2)));
    var m2 = c.getDerivedStateFromProps,
      q2 =
        'function' === typeof m2 ||
        'function' === typeof g.getSnapshotBeforeUpdate;
    q2 ||
      ('function' !== typeof g.UNSAFE_componentWillReceiveProps &&
        'function' !== typeof g.componentWillReceiveProps) ||
      ((h !== d || k2 !== l2) && Hi(b, g, d, l2));
    jh = false;
    var r2 = b.memoizedState;
    g.state = r2;
    qh(b, d, g, e);
    k2 = b.memoizedState;
    h !== d || r2 !== k2 || Wf.current || jh
      ? ('function' === typeof m2 && (Di(b, c, m2, d), (k2 = b.memoizedState)),
        (h = jh || Fi(b, c, h, d, r2, k2, l2))
          ? (q2 ||
              ('function' !== typeof g.UNSAFE_componentWillMount &&
                'function' !== typeof g.componentWillMount) ||
              ('function' === typeof g.componentWillMount &&
                g.componentWillMount(),
              'function' === typeof g.UNSAFE_componentWillMount &&
                g.UNSAFE_componentWillMount()),
            'function' === typeof g.componentDidMount && (b.flags |= 4194308))
          : ('function' === typeof g.componentDidMount && (b.flags |= 4194308),
            (b.memoizedProps = d),
            (b.memoizedState = k2)),
        (g.props = d),
        (g.state = k2),
        (g.context = l2),
        (d = h))
      : ('function' === typeof g.componentDidMount && (b.flags |= 4194308),
        (d = false));
  } else {
    g = b.stateNode;
    lh(a, b);
    h = b.memoizedProps;
    l2 = b.type === b.elementType ? h : Ci(b.type, h);
    g.props = l2;
    q2 = b.pendingProps;
    r2 = g.context;
    k2 = c.contextType;
    'object' === typeof k2 && null !== k2
      ? (k2 = eh(k2))
      : ((k2 = Zf(c) ? Xf : H.current), (k2 = Yf(b, k2)));
    var y2 = c.getDerivedStateFromProps;
    (m2 =
      'function' === typeof y2 ||
      'function' === typeof g.getSnapshotBeforeUpdate) ||
      ('function' !== typeof g.UNSAFE_componentWillReceiveProps &&
        'function' !== typeof g.componentWillReceiveProps) ||
      ((h !== q2 || r2 !== k2) && Hi(b, g, d, k2));
    jh = false;
    r2 = b.memoizedState;
    g.state = r2;
    qh(b, d, g, e);
    var n2 = b.memoizedState;
    h !== q2 || r2 !== n2 || Wf.current || jh
      ? ('function' === typeof y2 && (Di(b, c, y2, d), (n2 = b.memoizedState)),
        (l2 = jh || Fi(b, c, l2, d, r2, n2, k2) || false)
          ? (m2 ||
              ('function' !== typeof g.UNSAFE_componentWillUpdate &&
                'function' !== typeof g.componentWillUpdate) ||
              ('function' === typeof g.componentWillUpdate &&
                g.componentWillUpdate(d, n2, k2),
              'function' === typeof g.UNSAFE_componentWillUpdate &&
                g.UNSAFE_componentWillUpdate(d, n2, k2)),
            'function' === typeof g.componentDidUpdate && (b.flags |= 4),
            'function' === typeof g.getSnapshotBeforeUpdate &&
              (b.flags |= 1024))
          : ('function' !== typeof g.componentDidUpdate ||
              (h === a.memoizedProps && r2 === a.memoizedState) ||
              (b.flags |= 4),
            'function' !== typeof g.getSnapshotBeforeUpdate ||
              (h === a.memoizedProps && r2 === a.memoizedState) ||
              (b.flags |= 1024),
            (b.memoizedProps = d),
            (b.memoizedState = n2)),
        (g.props = d),
        (g.state = n2),
        (g.context = k2),
        (d = l2))
      : ('function' !== typeof g.componentDidUpdate ||
          (h === a.memoizedProps && r2 === a.memoizedState) ||
          (b.flags |= 4),
        'function' !== typeof g.getSnapshotBeforeUpdate ||
          (h === a.memoizedProps && r2 === a.memoizedState) ||
          (b.flags |= 1024),
        (d = false));
  }
  return jj(a, b, c, d, f2, e);
}
function jj(a, b, c, d, e, f2) {
  gj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g) return e && dg(b, c, false), Zi(a, b, f2);
  d = b.stateNode;
  Wi.current = b;
  var h =
    g && 'function' !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g
    ? ((b.child = Ug(b, a.child, null, f2)), (b.child = Ug(b, null, h, f2)))
    : Xi(a, b, h, f2);
  b.memoizedState = d.state;
  e && dg(b, c, true);
  return b.child;
}
function kj(a) {
  var b = a.stateNode;
  b.pendingContext
    ? ag(a, b.pendingContext, b.pendingContext !== b.context)
    : b.context && ag(a, b.context, false);
  yh(a, b.containerInfo);
}
function lj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Xi(a, b, c, d);
  return b.child;
}
var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
function nj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function oj(a, b, c) {
  var d = b.pendingProps,
    e = L.current,
    f2 = false,
    g = 0 !== (b.flags & 128),
    h;
  (h = g) ||
    (h = null !== a && null === a.memoizedState ? false : 0 !== (e & 2));
  if (h) (f2 = true), (b.flags &= -129);
  else if (null === a || null !== a.memoizedState) e |= 1;
  G(L, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && ((a = a.dehydrated), null !== a))
      return (
        0 === (b.mode & 1)
          ? (b.lanes = 1)
          : '$!' === a.data
            ? (b.lanes = 8)
            : (b.lanes = 1073741824),
        null
      );
    g = d.children;
    a = d.fallback;
    return f2
      ? ((d = b.mode),
        (f2 = b.child),
        (g = { mode: 'hidden', children: g }),
        0 === (d & 1) && null !== f2
          ? ((f2.childLanes = 0), (f2.pendingProps = g))
          : (f2 = pj(g, d, 0, null)),
        (a = Tg(a, d, c, null)),
        (f2.return = b),
        (a.return = b),
        (f2.sibling = a),
        (b.child = f2),
        (b.child.memoizedState = nj(c)),
        (b.memoizedState = mj),
        a)
      : qj(b, g);
  }
  e = a.memoizedState;
  if (null !== e && ((h = e.dehydrated), null !== h))
    return rj(a, b, g, d, h, e, c);
  if (f2) {
    f2 = d.fallback;
    g = b.mode;
    e = a.child;
    h = e.sibling;
    var k2 = { mode: 'hidden', children: d.children };
    0 === (g & 1) && b.child !== e
      ? ((d = b.child),
        (d.childLanes = 0),
        (d.pendingProps = k2),
        (b.deletions = null))
      : ((d = Pg(e, k2)), (d.subtreeFlags = e.subtreeFlags & 14680064));
    null !== h
      ? (f2 = Pg(h, f2))
      : ((f2 = Tg(f2, g, c, null)), (f2.flags |= 2));
    f2.return = b;
    d.return = b;
    d.sibling = f2;
    b.child = d;
    d = f2;
    f2 = b.child;
    g = a.child.memoizedState;
    g =
      null === g
        ? nj(c)
        : {
            baseLanes: g.baseLanes | c,
            cachePool: null,
            transitions: g.transitions,
          };
    f2.memoizedState = g;
    f2.childLanes = a.childLanes & ~c;
    b.memoizedState = mj;
    return d;
  }
  f2 = a.child;
  a = f2.sibling;
  d = Pg(f2, { mode: 'visible', children: d.children });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a &&
    ((c = b.deletions),
    null === c ? ((b.deletions = [a]), (b.flags |= 16)) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function qj(a, b) {
  b = pj({ mode: 'visible', children: b }, a.mode, 0, null);
  b.return = a;
  return (a.child = b);
}
function sj(a, b, c, d) {
  null !== d && Jg(d);
  Ug(b, a.child, null, c);
  a = qj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function rj(a, b, c, d, e, f2, g) {
  if (c) {
    if (b.flags & 256)
      return (b.flags &= -257), (d = Ki(Error(p(422)))), sj(a, b, g, d);
    if (null !== b.memoizedState)
      return (b.child = a.child), (b.flags |= 128), null;
    f2 = d.fallback;
    e = b.mode;
    d = pj({ mode: 'visible', children: d.children }, e, 0, null);
    f2 = Tg(f2, e, g, null);
    f2.flags |= 2;
    d.return = b;
    f2.return = b;
    d.sibling = f2;
    b.child = d;
    0 !== (b.mode & 1) && Ug(b, a.child, null, g);
    b.child.memoizedState = nj(g);
    b.memoizedState = mj;
    return f2;
  }
  if (0 === (b.mode & 1)) return sj(a, b, g, null);
  if ('$!' === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h = d.dgst;
    d = h;
    f2 = Error(p(419));
    d = Ki(f2, d, void 0);
    return sj(a, b, g, d);
  }
  h = 0 !== (g & a.childLanes);
  if (dh || h) {
    d = Q;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e &&
        e !== f2.retryLane &&
        ((f2.retryLane = e), ih(a, e), gi(d, a, e, -1));
    }
    tj();
    d = Ki(Error(p(421)));
    return sj(a, b, g, d);
  }
  if ('$?' === e.data)
    return (
      (b.flags |= 128),
      (b.child = a.child),
      (b = uj.bind(null, a)),
      (e._reactRetry = b),
      null
    );
  a = f2.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = true;
  zg = null;
  null !== a &&
    ((og[pg++] = rg),
    (og[pg++] = sg),
    (og[pg++] = qg),
    (rg = a.id),
    (sg = a.overflow),
    (qg = b));
  b = qj(b, d.children);
  b.flags |= 4096;
  return b;
}
function vj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  bh(a.return, b, c);
}
function wj(a, b, c, d, e) {
  var f2 = a.memoizedState;
  null === f2
    ? (a.memoizedState = {
        isBackwards: b,
        rendering: null,
        renderingStartTime: 0,
        last: d,
        tail: c,
        tailMode: e,
      })
    : ((f2.isBackwards = b),
      (f2.rendering = null),
      (f2.renderingStartTime = 0),
      (f2.last = d),
      (f2.tail = c),
      (f2.tailMode = e));
}
function xj(a, b, c) {
  var d = b.pendingProps,
    e = d.revealOrder,
    f2 = d.tail;
  Xi(a, b, d.children, c);
  d = L.current;
  if (0 !== (d & 2)) (d = (d & 1) | 2), (b.flags |= 128);
  else {
    if (null !== a && 0 !== (a.flags & 128))
      a: for (a = b.child; null !== a; ) {
        if (13 === a.tag) null !== a.memoizedState && vj(a, c, b);
        else if (19 === a.tag) vj(a, c, b);
        else if (null !== a.child) {
          a.child.return = a;
          a = a.child;
          continue;
        }
        if (a === b) break a;
        for (; null === a.sibling; ) {
          if (null === a.return || a.return === b) break a;
          a = a.return;
        }
        a.sibling.return = a.return;
        a = a.sibling;
      }
    d &= 1;
  }
  G(L, d);
  if (0 === (b.mode & 1)) b.memoizedState = null;
  else
    switch (e) {
      case 'forwards':
        c = b.child;
        for (e = null; null !== c; )
          (a = c.alternate),
            null !== a && null === Ch(a) && (e = c),
            (c = c.sibling);
        c = e;
        null === c
          ? ((e = b.child), (b.child = null))
          : ((e = c.sibling), (c.sibling = null));
        wj(b, false, e, c, f2);
        break;
      case 'backwards':
        c = null;
        e = b.child;
        for (b.child = null; null !== e; ) {
          a = e.alternate;
          if (null !== a && null === Ch(a)) {
            b.child = e;
            break;
          }
          a = e.sibling;
          e.sibling = c;
          c = e;
          e = a;
        }
        wj(b, true, c, null, f2);
        break;
      case 'together':
        wj(b, false, null, null, void 0);
        break;
      default:
        b.memoizedState = null;
    }
  return b.child;
}
function ij(a, b) {
  0 === (b.mode & 1) &&
    null !== a &&
    ((a.alternate = null), (b.alternate = null), (b.flags |= 2));
}
function Zi(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  rh |= b.lanes;
  if (0 === (c & b.childLanes)) return null;
  if (null !== a && b.child !== a.child) throw Error(p(153));
  if (null !== b.child) {
    a = b.child;
    c = Pg(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling; )
      (a = a.sibling), (c = c.sibling = Pg(a, a.pendingProps)), (c.return = b);
    c.sibling = null;
  }
  return b.child;
}
function yj(a, b, c) {
  switch (b.tag) {
    case 3:
      kj(b);
      Ig();
      break;
    case 5:
      Ah(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      yh(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context,
        e = b.memoizedProps.value;
      G(Wg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated)
          return G(L, L.current & 1), (b.flags |= 128), null;
        if (0 !== (c & b.child.childLanes)) return oj(a, b, c);
        G(L, L.current & 1);
        a = Zi(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(L, L.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d) return xj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e &&
        ((e.rendering = null), (e.tail = null), (e.lastEffect = null));
      G(L, L.current);
      if (d) break;
      else return null;
    case 22:
    case 23:
      return (b.lanes = 0), dj(a, b, c);
  }
  return Zi(a, b, c);
}
var zj, Aj, Bj, Cj;
zj = function (a, b) {
  for (var c = b.child; null !== c; ) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
    else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;
    for (; null === c.sibling; ) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Aj = function () {};
Bj = function (a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    xh(uh.current);
    var f2 = null;
    switch (c) {
      case 'input':
        e = Ya(a, e);
        d = Ya(a, d);
        f2 = [];
        break;
      case 'select':
        e = A({}, e, { value: void 0 });
        d = A({}, d, { value: void 0 });
        f2 = [];
        break;
      case 'textarea':
        e = gb(a, e);
        d = gb(a, d);
        f2 = [];
        break;
      default:
        'function' !== typeof e.onClick &&
          'function' === typeof d.onClick &&
          (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l2 in e)
      if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && null != e[l2])
        if ('style' === l2) {
          var h = e[l2];
          for (g in h) h.hasOwnProperty(g) && (c || (c = {}), (c[g] = ''));
        } else
          'dangerouslySetInnerHTML' !== l2 &&
            'children' !== l2 &&
            'suppressContentEditableWarning' !== l2 &&
            'suppressHydrationWarning' !== l2 &&
            'autoFocus' !== l2 &&
            (ea.hasOwnProperty(l2)
              ? f2 || (f2 = [])
              : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h = null != e ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h && (null != k2 || null != h))
        if ('style' === l2)
          if (h) {
            for (g in h)
              !h.hasOwnProperty(g) ||
                (k2 && k2.hasOwnProperty(g)) ||
                (c || (c = {}), (c[g] = ''));
            for (g in k2)
              k2.hasOwnProperty(g) &&
                h[g] !== k2[g] &&
                (c || (c = {}), (c[g] = k2[g]));
          } else c || (f2 || (f2 = []), f2.push(l2, c)), (c = k2);
        else
          'dangerouslySetInnerHTML' === l2
            ? ((k2 = k2 ? k2.__html : void 0),
              (h = h ? h.__html : void 0),
              null != k2 && h !== k2 && (f2 = f2 || []).push(l2, k2))
            : 'children' === l2
              ? ('string' !== typeof k2 && 'number' !== typeof k2) ||
                (f2 = f2 || []).push(l2, '' + k2)
              : 'suppressContentEditableWarning' !== l2 &&
                'suppressHydrationWarning' !== l2 &&
                (ea.hasOwnProperty(l2)
                  ? (null != k2 && 'onScroll' === l2 && D('scroll', a),
                    f2 || h === k2 || (f2 = []))
                  : (f2 = f2 || []).push(l2, k2));
    }
    c && (f2 = f2 || []).push('style', c);
    var l2 = f2;
    if ((b.updateQueue = l2)) b.flags |= 4;
  }
};
Cj = function (a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Dj(a, b) {
  if (!I)
    switch (a.tailMode) {
      case 'hidden':
        b = a.tail;
        for (var c = null; null !== b; )
          null !== b.alternate && (c = b), (b = b.sibling);
        null === c ? (a.tail = null) : (c.sibling = null);
        break;
      case 'collapsed':
        c = a.tail;
        for (var d = null; null !== c; )
          null !== c.alternate && (d = c), (c = c.sibling);
        null === d
          ? b || null === a.tail
            ? (a.tail = null)
            : (a.tail.sibling = null)
          : (d.sibling = null);
    }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child,
    c = 0,
    d = 0;
  if (b)
    for (var e = a.child; null !== e; )
      (c |= e.lanes | e.childLanes),
        (d |= e.subtreeFlags & 14680064),
        (d |= e.flags & 14680064),
        (e.return = a),
        (e = e.sibling);
  else
    for (e = a.child; null !== e; )
      (c |= e.lanes | e.childLanes),
        (d |= e.subtreeFlags),
        (d |= e.flags),
        (e.return = a),
        (e = e.sibling);
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Ej(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      zh();
      E(Wf);
      E(H);
      Eh();
      d.pendingContext &&
        ((d.context = d.pendingContext), (d.pendingContext = null));
      if (null === a || null === a.child)
        Gg(b)
          ? (b.flags |= 4)
          : null === a ||
            (a.memoizedState.isDehydrated && 0 === (b.flags & 256)) ||
            ((b.flags |= 1024), null !== zg && (Fj(zg), (zg = null)));
      Aj(a, b);
      S(b);
      return null;
    case 5:
      Bh(b);
      var e = xh(wh.current);
      c = b.type;
      if (null !== a && null != b.stateNode)
        Bj(a, b, c, d, e),
          a.ref !== b.ref && ((b.flags |= 512), (b.flags |= 2097152));
      else {
        if (!d) {
          if (null === b.stateNode) throw Error(p(166));
          S(b);
          return null;
        }
        a = xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f2;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case 'dialog':
              D('cancel', d);
              D('close', d);
              break;
            case 'iframe':
            case 'object':
            case 'embed':
              D('load', d);
              break;
            case 'video':
            case 'audio':
              for (e = 0; e < lf.length; e++) D(lf[e], d);
              break;
            case 'source':
              D('error', d);
              break;
            case 'img':
            case 'image':
            case 'link':
              D('error', d);
              D('load', d);
              break;
            case 'details':
              D('toggle', d);
              break;
            case 'input':
              Za(d, f2);
              D('invalid', d);
              break;
            case 'select':
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D('invalid', d);
              break;
            case 'textarea':
              hb(d, f2), D('invalid', d);
          }
          ub(c, f2);
          e = null;
          for (var g in f2)
            if (f2.hasOwnProperty(g)) {
              var h = f2[g];
              'children' === g
                ? 'string' === typeof h
                  ? d.textContent !== h &&
                    (true !== f2.suppressHydrationWarning &&
                      Af(d.textContent, h, a),
                    (e = ['children', h]))
                  : 'number' === typeof h &&
                    d.textContent !== '' + h &&
                    (true !== f2.suppressHydrationWarning &&
                      Af(d.textContent, h, a),
                    (e = ['children', '' + h]))
                : ea.hasOwnProperty(g) &&
                  null != h &&
                  'onScroll' === g &&
                  D('scroll', d);
            }
          switch (c) {
            case 'input':
              Va(d);
              db(d, f2, true);
              break;
            case 'textarea':
              Va(d);
              jb(d);
              break;
            case 'select':
            case 'option':
              break;
            default:
              'function' === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          'http://www.w3.org/1999/xhtml' === a && (a = kb(c));
          'http://www.w3.org/1999/xhtml' === a
            ? 'script' === c
              ? ((a = g.createElement('div')),
                (a.innerHTML = '<script><\/script>'),
                (a = a.removeChild(a.firstChild)))
              : 'string' === typeof d.is
                ? (a = g.createElement(c, { is: d.is }))
                : ((a = g.createElement(c)),
                  'select' === c &&
                    ((g = a),
                    d.multiple
                      ? (g.multiple = true)
                      : d.size && (g.size = d.size)))
            : (a = g.createElementNS(a, c));
          a[Of] = b;
          a[Pf] = d;
          zj(a, b, false, false);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case 'dialog':
                D('cancel', a);
                D('close', a);
                e = d;
                break;
              case 'iframe':
              case 'object':
              case 'embed':
                D('load', a);
                e = d;
                break;
              case 'video':
              case 'audio':
                for (e = 0; e < lf.length; e++) D(lf[e], a);
                e = d;
                break;
              case 'source':
                D('error', a);
                e = d;
                break;
              case 'img':
              case 'image':
              case 'link':
                D('error', a);
                D('load', a);
                e = d;
                break;
              case 'details':
                D('toggle', a);
                e = d;
                break;
              case 'input':
                Za(a, d);
                e = Ya(a, d);
                D('invalid', a);
                break;
              case 'option':
                e = d;
                break;
              case 'select':
                a._wrapperState = { wasMultiple: !!d.multiple };
                e = A({}, d, { value: void 0 });
                D('invalid', a);
                break;
              case 'textarea':
                hb(a, d);
                e = gb(a, d);
                D('invalid', a);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h = e;
            for (f2 in h)
              if (h.hasOwnProperty(f2)) {
                var k2 = h[f2];
                'style' === f2
                  ? sb(a, k2)
                  : 'dangerouslySetInnerHTML' === f2
                    ? ((k2 = k2 ? k2.__html : void 0), null != k2 && nb(a, k2))
                    : 'children' === f2
                      ? 'string' === typeof k2
                        ? ('textarea' !== c || '' !== k2) && ob(a, k2)
                        : 'number' === typeof k2 && ob(a, '' + k2)
                      : 'suppressContentEditableWarning' !== f2 &&
                        'suppressHydrationWarning' !== f2 &&
                        'autoFocus' !== f2 &&
                        (ea.hasOwnProperty(f2)
                          ? null != k2 && 'onScroll' === f2 && D('scroll', a)
                          : null != k2 && ta(a, f2, k2, g));
              }
            switch (c) {
              case 'input':
                Va(a);
                db(a, d, false);
                break;
              case 'textarea':
                Va(a);
                jb(a);
                break;
              case 'option':
                null != d.value && a.setAttribute('value', '' + Sa(d.value));
                break;
              case 'select':
                a.multiple = !!d.multiple;
                f2 = d.value;
                null != f2
                  ? fb(a, !!d.multiple, f2, false)
                  : null != d.defaultValue &&
                    fb(a, !!d.multiple, d.defaultValue, true);
                break;
              default:
                'function' === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case 'button':
              case 'input':
              case 'select':
              case 'textarea':
                d = !!d.autoFocus;
                break a;
              case 'img':
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && ((b.flags |= 512), (b.flags |= 2097152));
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode) Cj(a, b, a.memoizedProps, d);
      else {
        if ('string' !== typeof d && null === b.stateNode) throw Error(p(166));
        c = xh(wh.current);
        xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if ((f2 = d.nodeValue !== c)) {
            if (((a = xg), null !== a))
              switch (a.tag) {
                case 3:
                  Af(d.nodeValue, c, 0 !== (a.mode & 1));
                  break;
                case 5:
                  true !== a.memoizedProps.suppressHydrationWarning &&
                    Af(d.nodeValue, c, 0 !== (a.mode & 1));
              }
          }
          f2 && (b.flags |= 4);
        } else
          (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d)),
            (d[Of] = b),
            (b.stateNode = d);
      }
      S(b);
      return null;
    case 13:
      E(L);
      d = b.memoizedState;
      if (
        null === a ||
        (null !== a.memoizedState && null !== a.memoizedState.dehydrated)
      ) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128))
          Hg(), Ig(), (b.flags |= 98560), (f2 = false);
        else if (((f2 = Gg(b)), null !== d && null !== d.dehydrated)) {
          if (null === a) {
            if (!f2) throw Error(p(318));
            f2 = b.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2) throw Error(p(317));
            f2[Of] = b;
          } else
            Ig(),
              0 === (b.flags & 128) && (b.memoizedState = null),
              (b.flags |= 4);
          S(b);
          f2 = false;
        } else null !== zg && (Fj(zg), (zg = null)), (f2 = true);
        if (!f2) return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128)) return (b.lanes = c), b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) &&
        d &&
        ((b.child.flags |= 8192),
        0 !== (b.mode & 1) &&
          (null === a || 0 !== (L.current & 1) ? 0 === T && (T = 3) : tj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return (
        zh(), Aj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null
      );
    case 10:
      return ah(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(L);
      f2 = b.memoizedState;
      if (null === f2) return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f2.rendering;
      if (null === g)
        if (d) Dj(f2, false);
        else {
          if (0 !== T || (null !== a && 0 !== (a.flags & 128)))
            for (a = b.child; null !== a; ) {
              g = Ch(a);
              if (null !== g) {
                b.flags |= 128;
                Dj(f2, false);
                d = g.updateQueue;
                null !== d && ((b.updateQueue = d), (b.flags |= 4));
                b.subtreeFlags = 0;
                d = c;
                for (c = b.child; null !== c; )
                  (f2 = c),
                    (a = d),
                    (f2.flags &= 14680066),
                    (g = f2.alternate),
                    null === g
                      ? ((f2.childLanes = 0),
                        (f2.lanes = a),
                        (f2.child = null),
                        (f2.subtreeFlags = 0),
                        (f2.memoizedProps = null),
                        (f2.memoizedState = null),
                        (f2.updateQueue = null),
                        (f2.dependencies = null),
                        (f2.stateNode = null))
                      : ((f2.childLanes = g.childLanes),
                        (f2.lanes = g.lanes),
                        (f2.child = g.child),
                        (f2.subtreeFlags = 0),
                        (f2.deletions = null),
                        (f2.memoizedProps = g.memoizedProps),
                        (f2.memoizedState = g.memoizedState),
                        (f2.updateQueue = g.updateQueue),
                        (f2.type = g.type),
                        (a = g.dependencies),
                        (f2.dependencies =
                          null === a
                            ? null
                            : {
                                lanes: a.lanes,
                                firstContext: a.firstContext,
                              })),
                    (c = c.sibling);
                G(L, (L.current & 1) | 2);
                return b.child;
              }
              a = a.sibling;
            }
          null !== f2.tail &&
            B() > Gj &&
            ((b.flags |= 128), (d = true), Dj(f2, false), (b.lanes = 4194304));
        }
      else {
        if (!d)
          if (((a = Ch(g)), null !== a)) {
            if (
              ((b.flags |= 128),
              (d = true),
              (c = a.updateQueue),
              null !== c && ((b.updateQueue = c), (b.flags |= 4)),
              Dj(f2, true),
              null === f2.tail &&
                'hidden' === f2.tailMode &&
                !g.alternate &&
                !I)
            )
              return S(b), null;
          } else
            2 * B() - f2.renderingStartTime > Gj &&
              1073741824 !== c &&
              ((b.flags |= 128),
              (d = true),
              Dj(f2, false),
              (b.lanes = 4194304));
        f2.isBackwards
          ? ((g.sibling = b.child), (b.child = g))
          : ((c = f2.last),
            null !== c ? (c.sibling = g) : (b.child = g),
            (f2.last = g));
      }
      if (null !== f2.tail)
        return (
          (b = f2.tail),
          (f2.rendering = b),
          (f2.tail = b.sibling),
          (f2.renderingStartTime = B()),
          (b.sibling = null),
          (c = L.current),
          G(L, d ? (c & 1) | 2 : c & 1),
          b
        );
      S(b);
      return null;
    case 22:
    case 23:
      return (
        Hj(),
        (d = null !== b.memoizedState),
        null !== a && (null !== a.memoizedState) !== d && (b.flags |= 8192),
        d && 0 !== (b.mode & 1)
          ? 0 !== (fj & 1073741824) &&
            (S(b), b.subtreeFlags & 6 && (b.flags |= 8192))
          : S(b),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b.tag));
}
function Ij(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return (
        Zf(b.type) && $f(),
        (a = b.flags),
        a & 65536 ? ((b.flags = (a & -65537) | 128), b) : null
      );
    case 3:
      return (
        zh(),
        E(Wf),
        E(H),
        Eh(),
        (a = b.flags),
        0 !== (a & 65536) && 0 === (a & 128)
          ? ((b.flags = (a & -65537) | 128), b)
          : null
      );
    case 5:
      return Bh(b), null;
    case 13:
      E(L);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate) throw Error(p(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? ((b.flags = (a & -65537) | 128), b) : null;
    case 19:
      return E(L), null;
    case 4:
      return zh(), null;
    case 10:
      return ah(b.type._context), null;
    case 22:
    case 23:
      return Hj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Jj = false,
  U = false,
  Kj = 'function' === typeof WeakSet ? WeakSet : Set,
  V = null;
function Lj(a, b) {
  var c = a.ref;
  if (null !== c)
    if ('function' === typeof c)
      try {
        c(null);
      } catch (d) {
        W(a, b, d);
      }
    else c.current = null;
}
function Mj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Nj = false;
function Oj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ('selectionStart' in a)
      var c = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c = ((c = a.ownerDocument) && c.defaultView) || window;
        var d = c.getSelection && c.getSelection();
        if (d && 0 !== d.rangeCount) {
          c = d.anchorNode;
          var e = d.anchorOffset,
            f2 = d.focusNode;
          d = d.focusOffset;
          try {
            c.nodeType, f2.nodeType;
          } catch (F2) {
            c = null;
            break a;
          }
          var g = 0,
            h = -1,
            k2 = -1,
            l2 = 0,
            m2 = 0,
            q2 = a,
            r2 = null;
          b: for (;;) {
            for (var y2; ; ) {
              q2 !== c || (0 !== e && 3 !== q2.nodeType) || (h = g + e);
              q2 !== f2 || (0 !== d && 3 !== q2.nodeType) || (k2 = g + d);
              3 === q2.nodeType && (g += q2.nodeValue.length);
              if (null === (y2 = q2.firstChild)) break;
              r2 = q2;
              q2 = y2;
            }
            for (;;) {
              if (q2 === a) break b;
              r2 === c && ++l2 === e && (h = g);
              r2 === f2 && ++m2 === d && (k2 = g);
              if (null !== (y2 = q2.nextSibling)) break;
              q2 = r2;
              r2 = q2.parentNode;
            }
            q2 = y2;
          }
          c = -1 === h || -1 === k2 ? null : { start: h, end: k2 };
        } else c = null;
      }
    c = c || { start: 0, end: 0 };
  } else c = null;
  Df = { focusedElem: a, selectionRange: c };
  dd = false;
  for (V = b; null !== V; )
    if (((b = V), (a = b.child), 0 !== (b.subtreeFlags & 1028) && null !== a))
      (a.return = b), (V = a);
    else
      for (; null !== V; ) {
        b = V;
        try {
          var n2 = b.alternate;
          if (0 !== (b.flags & 1024))
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps,
                    J2 = n2.memoizedState,
                    x2 = b.stateNode,
                    w2 = x2.getSnapshotBeforeUpdate(
                      b.elementType === b.type ? t2 : Ci(b.type, t2),
                      J2
                    );
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b.stateNode.containerInfo;
                1 === u2.nodeType
                  ? (u2.textContent = '')
                  : 9 === u2.nodeType &&
                    u2.documentElement &&
                    u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p(163));
            }
        } catch (F2) {
          W(b, b.return, F2);
        }
        a = b.sibling;
        if (null !== a) {
          a.return = b.return;
          V = a;
          break;
        }
        V = b.return;
      }
  n2 = Nj;
  Nj = false;
  return n2;
}
function Pj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = (d = d.next);
    do {
      if ((e.tag & a) === a) {
        var f2 = e.destroy;
        e.destroy = void 0;
        void 0 !== f2 && Mj(b, c, f2);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Qj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = (b = b.next);
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Rj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    'function' === typeof b ? b(a) : (b.current = a);
  }
}
function Sj(a) {
  var b = a.alternate;
  null !== b && ((a.alternate = null), Sj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag &&
    ((b = a.stateNode),
    null !== b &&
      (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Tj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Uj(a) {
  a: for (;;) {
    for (; null === a.sibling; ) {
      if (null === a.return || Tj(a.return)) return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
      if (a.flags & 2) continue a;
      if (null === a.child || 4 === a.tag) continue a;
      else (a.child.return = a), (a = a.child);
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Vj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    (a = a.stateNode),
      b
        ? 8 === c.nodeType
          ? c.parentNode.insertBefore(a, b)
          : c.insertBefore(a, b)
        : (8 === c.nodeType
            ? ((b = c.parentNode), b.insertBefore(a, c))
            : ((b = c), b.appendChild(a)),
          (c = c._reactRootContainer),
          (null !== c && void 0 !== c) ||
            null !== b.onclick ||
            (b.onclick = Bf));
  else if (4 !== d && ((a = a.child), null !== a))
    for (Vj(a, b, c), a = a.sibling; null !== a; ) Vj(a, b, c), (a = a.sibling);
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    (a = a.stateNode), b ? c.insertBefore(a, b) : c.appendChild(a);
  else if (4 !== d && ((a = a.child), null !== a))
    for (Wj(a, b, c), a = a.sibling; null !== a; ) Wj(a, b, c), (a = a.sibling);
}
var X = null,
  Xj = false;
function Yj(a, b, c) {
  for (c = c.child; null !== c; ) Zj(a, b, c), (c = c.sibling);
}
function Zj(a, b, c) {
  if (lc && 'function' === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c);
    } catch (h) {}
  switch (c.tag) {
    case 5:
      U || Lj(c, b);
    case 6:
      var d = X,
        e = Xj;
      X = null;
      Yj(a, b, c);
      X = d;
      Xj = e;
      null !== X &&
        (Xj
          ? ((a = X),
            (c = c.stateNode),
            8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c))
          : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X &&
        (Xj
          ? ((a = X),
            (c = c.stateNode),
            8 === a.nodeType
              ? Kf(a.parentNode, c)
              : 1 === a.nodeType && Kf(a, c),
            bd(a))
          : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Xj;
      X = c.stateNode.containerInfo;
      Xj = true;
      Yj(a, b, c);
      X = d;
      Xj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !U &&
        ((d = c.updateQueue), null !== d && ((d = d.lastEffect), null !== d))
      ) {
        e = d = d.next;
        do {
          var f2 = e,
            g = f2.destroy;
          f2 = f2.tag;
          void 0 !== g &&
            (0 !== (f2 & 2) ? Mj(c, b, g) : 0 !== (f2 & 4) && Mj(c, b, g));
          e = e.next;
        } while (e !== d);
      }
      Yj(a, b, c);
      break;
    case 1:
      if (
        !U &&
        (Lj(c, b),
        (d = c.stateNode),
        'function' === typeof d.componentWillUnmount)
      )
        try {
          (d.props = c.memoizedProps),
            (d.state = c.memoizedState),
            d.componentWillUnmount();
        } catch (h) {
          W(c, b, h);
        }
      Yj(a, b, c);
      break;
    case 21:
      Yj(a, b, c);
      break;
    case 22:
      c.mode & 1
        ? ((U = (d = U) || null !== c.memoizedState), Yj(a, b, c), (U = d))
        : Yj(a, b, c);
      break;
    default:
      Yj(a, b, c);
  }
}
function ak(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Kj());
    b.forEach(function (b2) {
      var d = bk.bind(null, a, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function ck(a, b) {
  var c = b.deletions;
  if (null !== c)
    for (var d = 0; d < c.length; d++) {
      var e = c[d];
      try {
        var f2 = a,
          g = b,
          h = g;
        a: for (; null !== h; ) {
          switch (h.tag) {
            case 5:
              X = h.stateNode;
              Xj = false;
              break a;
            case 3:
              X = h.stateNode.containerInfo;
              Xj = true;
              break a;
            case 4:
              X = h.stateNode.containerInfo;
              Xj = true;
              break a;
          }
          h = h.return;
        }
        if (null === X) throw Error(p(160));
        Zj(f2, g, e);
        X = null;
        Xj = false;
        var k2 = e.alternate;
        null !== k2 && (k2.return = null);
        e.return = null;
      } catch (l2) {
        W(e, b, l2);
      }
    }
  if (b.subtreeFlags & 12854)
    for (b = b.child; null !== b; ) dk(b, a), (b = b.sibling);
}
function dk(a, b) {
  var c = a.alternate,
    d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ck(b, a);
      ek(a);
      if (d & 4) {
        try {
          Pj(3, a, a.return), Qj(3, a);
        } catch (t2) {
          W(a, a.return, t2);
        }
        try {
          Pj(5, a, a.return);
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 1:
      ck(b, a);
      ek(a);
      d & 512 && null !== c && Lj(c, c.return);
      break;
    case 5:
      ck(b, a);
      ek(a);
      d & 512 && null !== c && Lj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, '');
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      if (d & 4 && ((e = a.stateNode), null != e)) {
        var f2 = a.memoizedProps,
          g = null !== c ? c.memoizedProps : f2,
          h = a.type,
          k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2)
          try {
            'input' === h &&
              'radio' === f2.type &&
              null != f2.name &&
              ab(e, f2);
            vb(h, g);
            var l2 = vb(h, f2);
            for (g = 0; g < k2.length; g += 2) {
              var m2 = k2[g],
                q2 = k2[g + 1];
              'style' === m2
                ? sb(e, q2)
                : 'dangerouslySetInnerHTML' === m2
                  ? nb(e, q2)
                  : 'children' === m2
                    ? ob(e, q2)
                    : ta(e, m2, q2, l2);
            }
            switch (h) {
              case 'input':
                bb(e, f2);
                break;
              case 'textarea':
                ib(e, f2);
                break;
              case 'select':
                var r2 = e._wrapperState.wasMultiple;
                e._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2
                  ? fb(e, !!f2.multiple, y2, false)
                  : r2 !== !!f2.multiple &&
                    (null != f2.defaultValue
                      ? fb(e, !!f2.multiple, f2.defaultValue, true)
                      : fb(e, !!f2.multiple, f2.multiple ? [] : '', false));
            }
            e[Pf] = f2;
          } catch (t2) {
            W(a, a.return, t2);
          }
      }
      break;
    case 6:
      ck(b, a);
      ek(a);
      if (d & 4) {
        if (null === a.stateNode) throw Error(p(162));
        e = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e.nodeValue = f2;
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 3:
      ck(b, a);
      ek(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated)
        try {
          bd(b.containerInfo);
        } catch (t2) {
          W(a, a.return, t2);
        }
      break;
    case 4:
      ck(b, a);
      ek(a);
      break;
    case 13:
      ck(b, a);
      ek(a);
      e = a.child;
      e.flags & 8192 &&
        ((f2 = null !== e.memoizedState),
        (e.stateNode.isHidden = f2),
        !f2 ||
          (null !== e.alternate && null !== e.alternate.memoizedState) ||
          (fk = B()));
      d & 4 && ak(a);
      break;
    case 22:
      m2 = null !== c && null !== c.memoizedState;
      a.mode & 1 ? ((U = (l2 = U) || m2), ck(b, a), (U = l2)) : ck(b, a);
      ek(a);
      if (d & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1))
          for (V = a, m2 = a.child; null !== m2; ) {
            for (q2 = V = m2; null !== V; ) {
              r2 = V;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Pj(4, r2, r2.return);
                  break;
                case 1:
                  Lj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ('function' === typeof n2.componentWillUnmount) {
                    d = r2;
                    c = r2.return;
                    try {
                      (b = d),
                        (n2.props = b.memoizedProps),
                        (n2.state = b.memoizedState),
                        n2.componentWillUnmount();
                    } catch (t2) {
                      W(d, c, t2);
                    }
                  }
                  break;
                case 5:
                  Lj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    gk(q2);
                    continue;
                  }
              }
              null !== y2 ? ((y2.return = r2), (V = y2)) : gk(q2);
            }
            m2 = m2.sibling;
          }
        a: for (m2 = null, q2 = a; ; ) {
          if (5 === q2.tag) {
            if (null === m2) {
              m2 = q2;
              try {
                (e = q2.stateNode),
                  l2
                    ? ((f2 = e.style),
                      'function' === typeof f2.setProperty
                        ? f2.setProperty('display', 'none', 'important')
                        : (f2.display = 'none'))
                    : ((h = q2.stateNode),
                      (k2 = q2.memoizedProps.style),
                      (g =
                        void 0 !== k2 &&
                        null !== k2 &&
                        k2.hasOwnProperty('display')
                          ? k2.display
                          : null),
                      (h.style.display = rb('display', g)));
              } catch (t2) {
                W(a, a.return, t2);
              }
            }
          } else if (6 === q2.tag) {
            if (null === m2)
              try {
                q2.stateNode.nodeValue = l2 ? '' : q2.memoizedProps;
              } catch (t2) {
                W(a, a.return, t2);
              }
          } else if (
            ((22 !== q2.tag && 23 !== q2.tag) ||
              null === q2.memoizedState ||
              q2 === a) &&
            null !== q2.child
          ) {
            q2.child.return = q2;
            q2 = q2.child;
            continue;
          }
          if (q2 === a) break a;
          for (; null === q2.sibling; ) {
            if (null === q2.return || q2.return === a) break a;
            m2 === q2 && (m2 = null);
            q2 = q2.return;
          }
          m2 === q2 && (m2 = null);
          q2.sibling.return = q2.return;
          q2 = q2.sibling;
        }
      }
      break;
    case 19:
      ck(b, a);
      ek(a);
      d & 4 && ak(a);
      break;
    case 21:
      break;
    default:
      ck(b, a), ek(a);
  }
}
function ek(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c; ) {
          if (Tj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ''), (d.flags &= -33));
          var f2 = Uj(a);
          Wj(a, f2, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo,
            h = Uj(a);
          Vj(a, h, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k2) {
      W(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function hk(a, b, c) {
  V = a;
  ik(a);
}
function ik(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V; ) {
    var e = V,
      f2 = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Jj;
      if (!g) {
        var h = e.alternate,
          k2 = (null !== h && null !== h.memoizedState) || U;
        h = Jj;
        var l2 = U;
        Jj = g;
        if ((U = k2) && !l2)
          for (V = e; null !== V; )
            (g = V),
              (k2 = g.child),
              22 === g.tag && null !== g.memoizedState
                ? jk(e)
                : null !== k2
                  ? ((k2.return = g), (V = k2))
                  : jk(e);
        for (; null !== f2; ) (V = f2), ik(f2), (f2 = f2.sibling);
        V = e;
        Jj = h;
        U = l2;
      }
      kk(a);
    } else
      0 !== (e.subtreeFlags & 8772) && null !== f2
        ? ((f2.return = e), (V = f2))
        : kk(a);
  }
}
function kk(a) {
  for (; null !== V; ) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772))
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              U || Qj(5, b);
              break;
            case 1:
              var d = b.stateNode;
              if (b.flags & 4 && !U)
                if (null === c) d.componentDidMount();
                else {
                  var e =
                    b.elementType === b.type
                      ? c.memoizedProps
                      : Ci(b.type, c.memoizedProps);
                  d.componentDidUpdate(
                    e,
                    c.memoizedState,
                    d.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var f2 = b.updateQueue;
              null !== f2 && sh(b, f2, d);
              break;
            case 3:
              var g = b.updateQueue;
              if (null !== g) {
                c = null;
                if (null !== b.child)
                  switch (b.child.tag) {
                    case 5:
                      c = b.child.stateNode;
                      break;
                    case 1:
                      c = b.child.stateNode;
                  }
                sh(b, g, c);
              }
              break;
            case 5:
              var h = b.stateNode;
              if (null === c && b.flags & 4) {
                c = h;
                var k2 = b.memoizedProps;
                switch (b.type) {
                  case 'button':
                  case 'input':
                  case 'select':
                  case 'textarea':
                    k2.autoFocus && c.focus();
                    break;
                  case 'img':
                    k2.src && (c.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b.memoizedState) {
                var l2 = b.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p(163));
          }
        U || (b.flags & 512 && Rj(b));
      } catch (r2) {
        W(b, b.return, r2);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function gk(a) {
  for (; null !== V; ) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function jk(a) {
  for (; null !== V; ) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Qj(4, b);
          } catch (k2) {
            W(b, c, k2);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ('function' === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W(b, e, k2);
            }
          }
          var f2 = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, f2, k2);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, g, k2);
          }
      }
    } catch (k2) {
      W(b, b.return, k2);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V = h;
      break;
    }
    V = b.return;
  }
}
var lk = Math.ceil,
  mk = ua.ReactCurrentDispatcher,
  nk = ua.ReactCurrentOwner,
  ok = ua.ReactCurrentBatchConfig,
  K = 0,
  Q = null,
  Y = null,
  Z = 0,
  fj = 0,
  ej = Uf(0),
  T = 0,
  pk = null,
  rh = 0,
  qk = 0,
  rk = 0,
  sk = null,
  tk = null,
  fk = 0,
  Gj = Infinity,
  uk = null,
  Oi = false,
  Pi = null,
  Ri = null,
  vk = false,
  wk = null,
  xk = 0,
  yk = 0,
  zk = null,
  Ak = -1,
  Bk = 0;
function R() {
  return 0 !== (K & 6) ? B() : -1 !== Ak ? Ak : (Ak = B());
}
function yi(a) {
  if (0 === (a.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;
  if (null !== Kg.transition) return 0 === Bk && (Bk = yc()), Bk;
  a = C;
  if (0 !== a) return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function gi(a, b, c, d) {
  if (50 < yk) throw ((yk = 0), (zk = null), Error(p(185)));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== Q)
    a === Q && (0 === (K & 2) && (qk |= c), 4 === T && Ck(a, Z)),
      Dk(a, d),
      1 === c &&
        0 === K &&
        0 === (b.mode & 1) &&
        ((Gj = B() + 500), fg && jg());
}
function Dk(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d)
    null !== c && bc(c), (a.callbackNode = null), (a.callbackPriority = 0);
  else if (((b = d & -d), a.callbackPriority !== b)) {
    null != c && bc(c);
    if (1 === b)
      0 === a.tag ? ig(Ek.bind(null, a)) : hg(Ek.bind(null, a)),
        Jf(function () {
          0 === (K & 6) && jg();
        }),
        (c = null);
    else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Fk(c, Gk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Gk(a, b) {
  Ak = -1;
  Bk = 0;
  if (0 !== (K & 6)) throw Error(p(327));
  var c = a.callbackNode;
  if (Hk() && a.callbackNode !== c) return null;
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Ik(a, d);
  else {
    b = d;
    var e = K;
    K |= 2;
    var f2 = Jk();
    if (Q !== a || Z !== b) (uk = null), (Gj = B() + 500), Kk(a, b);
    do
      try {
        Lk();
        break;
      } catch (h) {
        Mk(a, h);
      }
    while (1);
    $g();
    mk.current = f2;
    K = e;
    null !== Y ? (b = 0) : ((Q = null), (Z = 0), (b = T));
  }
  if (0 !== b) {
    2 === b && ((e = xc(a)), 0 !== e && ((d = e), (b = Nk(a, e))));
    if (1 === b) throw ((c = pk), Kk(a, 0), Ck(a, d), Dk(a, B()), c);
    if (6 === b) Ck(a, d);
    else {
      e = a.current.alternate;
      if (
        0 === (d & 30) &&
        !Ok(e) &&
        ((b = Ik(a, d)),
        2 === b && ((f2 = xc(a)), 0 !== f2 && ((d = f2), (b = Nk(a, f2)))),
        1 === b)
      )
        throw ((c = pk), Kk(a, 0), Ck(a, d), Dk(a, B()), c);
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Pk(a, tk, uk);
          break;
        case 3:
          Ck(a, d);
          if ((d & 130023424) === d && ((b = fk + 500 - B()), 10 < b)) {
            if (0 !== uc(a, 0)) break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              R();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), b);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 4:
          Ck(a, d);
          if ((d & 4194240) === d) break;
          b = a.eventTimes;
          for (e = -1; 0 < d; ) {
            var g = 31 - oc(d);
            f2 = 1 << g;
            g = b[g];
            g > e && (e = g);
            d &= ~f2;
          }
          d = e;
          d = B() - d;
          d =
            (120 > d
              ? 120
              : 480 > d
                ? 480
                : 1080 > d
                  ? 1080
                  : 1920 > d
                    ? 1920
                    : 3e3 > d
                      ? 3e3
                      : 4320 > d
                        ? 4320
                        : 1960 * lk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), d);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 5:
          Pk(a, tk, uk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Dk(a, B());
  return a.callbackNode === c ? Gk.bind(null, a) : null;
}
function Nk(a, b) {
  var c = sk;
  a.current.memoizedState.isDehydrated && (Kk(a, b).flags |= 256);
  a = Ik(a, b);
  2 !== a && ((b = tk), (tk = c), null !== b && Fj(b));
  return a;
}
function Fj(a) {
  null === tk ? (tk = a) : tk.push.apply(tk, a);
}
function Ok(a) {
  for (var b = a; ; ) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && ((c = c.stores), null !== c))
        for (var d = 0; d < c.length; d++) {
          var e = c[d],
            f2 = e.getSnapshot;
          e = e.value;
          try {
            if (!He(f2(), e)) return false;
          } catch (g) {
            return false;
          }
        }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c) (c.return = b), (b = c);
    else {
      if (b === a) break;
      for (; null === b.sibling; ) {
        if (null === b.return || b.return === a) return true;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return true;
}
function Ck(a, b) {
  b &= ~rk;
  b &= ~qk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b; ) {
    var c = 31 - oc(b),
      d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Ek(a) {
  if (0 !== (K & 6)) throw Error(p(327));
  Hk();
  var b = uc(a, 0);
  if (0 === (b & 1)) return Dk(a, B()), null;
  var c = Ik(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && ((b = d), (c = Nk(a, d)));
  }
  if (1 === c) throw ((c = pk), Kk(a, 0), Ck(a, b), Dk(a, B()), c);
  if (6 === c) throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Pk(a, tk, uk);
  Dk(a, B());
  return null;
}
function Qk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    (K = c), 0 === K && ((Gj = B() + 500), fg && jg());
  }
}
function Rk(a) {
  null !== wk && 0 === wk.tag && 0 === (K & 6) && Hk();
  var b = K;
  K |= 1;
  var c = ok.transition,
    d = C;
  try {
    if (((ok.transition = null), (C = 1), a)) return a();
  } finally {
    (C = d), (ok.transition = c), (K = b), 0 === (K & 6) && jg();
  }
}
function Hj() {
  fj = ej.current;
  E(ej);
}
function Kk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && ((a.timeoutHandle = -1), Gf(c));
  if (null !== Y)
    for (c = Y.return; null !== c; ) {
      var d = c;
      wg(d);
      switch (d.tag) {
        case 1:
          d = d.type.childContextTypes;
          null !== d && void 0 !== d && $f();
          break;
        case 3:
          zh();
          E(Wf);
          E(H);
          Eh();
          break;
        case 5:
          Bh(d);
          break;
        case 4:
          zh();
          break;
        case 13:
          E(L);
          break;
        case 19:
          E(L);
          break;
        case 10:
          ah(d.type._context);
          break;
        case 22:
        case 23:
          Hj();
      }
      c = c.return;
    }
  Q = a;
  Y = a = Pg(a.current, null);
  Z = fj = b;
  T = 0;
  pk = null;
  rk = qk = rh = 0;
  tk = sk = null;
  if (null !== fh) {
    for (b = 0; b < fh.length; b++)
      if (((c = fh[b]), (d = c.interleaved), null !== d)) {
        c.interleaved = null;
        var e = d.next,
          f2 = c.pending;
        if (null !== f2) {
          var g = f2.next;
          f2.next = e;
          d.next = g;
        }
        c.pending = d;
      }
    fh = null;
  }
  return a;
}
function Mk(a, b) {
  do {
    var c = Y;
    try {
      $g();
      Fh.current = Rh;
      if (Ih) {
        for (var d = M.memoizedState; null !== d; ) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Ih = false;
      }
      Hh = 0;
      O = N = M = null;
      Jh = false;
      Kh = 0;
      nk.current = null;
      if (null === c || null === c.return) {
        T = 1;
        pk = b;
        Y = null;
        break;
      }
      a: {
        var f2 = a,
          g = c.return,
          h = c,
          k2 = b;
        b = Z;
        h.flags |= 32768;
        if (
          null !== k2 &&
          'object' === typeof k2 &&
          'function' === typeof k2.then
        ) {
          var l2 = k2,
            m2 = h,
            q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2
              ? ((m2.updateQueue = r2.updateQueue),
                (m2.memoizedState = r2.memoizedState),
                (m2.lanes = r2.lanes))
              : ((m2.updateQueue = null), (m2.memoizedState = null));
          }
          var y2 = Ui(g);
          if (null !== y2) {
            y2.flags &= -257;
            Vi(y2, g, h, f2, b);
            y2.mode & 1 && Si(f2, l2, b);
            b = y2;
            k2 = l2;
            var n2 = b.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b.updateQueue = t2;
            } else n2.add(k2);
            break a;
          } else {
            if (0 === (b & 1)) {
              Si(f2, l2, b);
              tj();
              break a;
            }
            k2 = Error(p(426));
          }
        } else if (I && h.mode & 1) {
          var J2 = Ui(g);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Vi(J2, g, h, f2, b);
            Jg(Ji(k2, h));
            break a;
          }
        }
        f2 = k2 = Ji(k2, h);
        4 !== T && (T = 2);
        null === sk ? (sk = [f2]) : sk.push(f2);
        f2 = g;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b &= -b;
              f2.lanes |= b;
              var x2 = Ni(f2, k2, b);
              ph(f2, x2);
              break a;
            case 1:
              h = k2;
              var w2 = f2.type,
                u2 = f2.stateNode;
              if (
                0 === (f2.flags & 128) &&
                ('function' === typeof w2.getDerivedStateFromError ||
                  (null !== u2 &&
                    'function' === typeof u2.componentDidCatch &&
                    (null === Ri || !Ri.has(u2))))
              ) {
                f2.flags |= 65536;
                b &= -b;
                f2.lanes |= b;
                var F2 = Qi(f2, h, b);
                ph(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Sk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Jk() {
  var a = mk.current;
  mk.current = Rh;
  return null === a ? Rh : a;
}
function tj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === Q || (0 === (rh & 268435455) && 0 === (qk & 268435455)) || Ck(Q, Z);
}
function Ik(a, b) {
  var c = K;
  K |= 2;
  var d = Jk();
  if (Q !== a || Z !== b) (uk = null), Kk(a, b);
  do
    try {
      Tk();
      break;
    } catch (e) {
      Mk(a, e);
    }
  while (1);
  $g();
  K = c;
  mk.current = d;
  if (null !== Y) throw Error(p(261));
  Q = null;
  Z = 0;
  return T;
}
function Tk() {
  for (; null !== Y; ) Uk(Y);
}
function Lk() {
  for (; null !== Y && !cc(); ) Uk(Y);
}
function Uk(a) {
  var b = Vk(a.alternate, a, fj);
  a.memoizedProps = a.pendingProps;
  null === b ? Sk(a) : (Y = b);
  nk.current = null;
}
function Sk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (((c = Ej(c, b, fj)), null !== c)) {
        Y = c;
        return;
      }
    } else {
      c = Ij(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a)
        (a.flags |= 32768), (a.subtreeFlags = 0), (a.deletions = null);
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Pk(a, b, c) {
  var d = C,
    e = ok.transition;
  try {
    (ok.transition = null), (C = 1), Wk(a, b, c, d);
  } finally {
    (ok.transition = e), (C = d);
  }
  return null;
}
function Wk(a, b, c, d) {
  do Hk();
  while (null !== wk);
  if (0 !== (K & 6)) throw Error(p(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c.lanes | c.childLanes;
  Bc(a, f2);
  a === Q && ((Y = Q = null), (Z = 0));
  (0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064)) ||
    vk ||
    ((vk = true),
    Fk(hc, function () {
      Hk();
      return null;
    }));
  f2 = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f2) {
    f2 = ok.transition;
    ok.transition = null;
    var g = C;
    C = 1;
    var h = K;
    K |= 4;
    nk.current = null;
    Oj(a, c);
    dk(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    hk(c);
    dc();
    K = h;
    C = g;
    ok.transition = f2;
  } else a.current = c;
  vk && ((vk = false), (wk = a), (xk = e));
  f2 = a.pendingLanes;
  0 === f2 && (Ri = null);
  mc(c.stateNode);
  Dk(a, B());
  if (null !== b)
    for (d = a.onRecoverableError, c = 0; c < b.length; c++)
      (e = b[c]), d(e.value, { componentStack: e.stack, digest: e.digest });
  if (Oi) throw ((Oi = false), (a = Pi), (Pi = null), a);
  0 !== (xk & 1) && 0 !== a.tag && Hk();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? (a === zk ? yk++ : ((yk = 0), (zk = a))) : (yk = 0);
  jg();
  return null;
}
function Hk() {
  if (null !== wk) {
    var a = Dc(xk),
      b = ok.transition,
      c = C;
    try {
      ok.transition = null;
      C = 16 > a ? 16 : a;
      if (null === wk) var d = false;
      else {
        a = wk;
        wk = null;
        xk = 0;
        if (0 !== (K & 6)) throw Error(p(331));
        var e = K;
        K |= 4;
        for (V = a.current; null !== V; ) {
          var f2 = V,
            g = f2.child;
          if (0 !== (V.flags & 16)) {
            var h = f2.deletions;
            if (null !== h) {
              for (var k2 = 0; k2 < h.length; k2++) {
                var l2 = h[k2];
                for (V = l2; null !== V; ) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2) (q2.return = m2), (V = q2);
                  else
                    for (; null !== V; ) {
                      m2 = V;
                      var r2 = m2.sibling,
                        y2 = m2.return;
                      Sj(m2);
                      if (m2 === l2) {
                        V = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V = r2;
                        break;
                      }
                      V = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g)
            (g.return = f2), (V = g);
          else
            b: for (; null !== V; ) {
              f2 = V;
              if (0 !== (f2.flags & 2048))
                switch (f2.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Pj(9, f2, f2.return);
                }
              var x2 = f2.sibling;
              if (null !== x2) {
                x2.return = f2.return;
                V = x2;
                break b;
              }
              V = f2.return;
            }
        }
        var w2 = a.current;
        for (V = w2; null !== V; ) {
          g = V;
          var u2 = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u2)
            (u2.return = g), (V = u2);
          else
            b: for (g = w2; null !== V; ) {
              h = V;
              if (0 !== (h.flags & 2048))
                try {
                  switch (h.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, h);
                  }
                } catch (na) {
                  W(h, h.return, na);
                }
              if (h === g) {
                V = null;
                break b;
              }
              var F2 = h.sibling;
              if (null !== F2) {
                F2.return = h.return;
                V = F2;
                break b;
              }
              V = h.return;
            }
        }
        K = e;
        jg();
        if (lc && 'function' === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a);
          } catch (na) {}
        d = true;
      }
      return d;
    } finally {
      (C = c), (ok.transition = b);
    }
  }
  return false;
}
function Xk(a, b, c) {
  b = Ji(c, b);
  b = Ni(a, b, 1);
  a = nh(a, b, 1);
  b = R();
  null !== a && (Ac(a, 1, b), Dk(a, b));
}
function W(a, b, c) {
  if (3 === a.tag) Xk(a, a, c);
  else
    for (; null !== b; ) {
      if (3 === b.tag) {
        Xk(b, a, c);
        break;
      } else if (1 === b.tag) {
        var d = b.stateNode;
        if (
          'function' === typeof b.type.getDerivedStateFromError ||
          ('function' === typeof d.componentDidCatch &&
            (null === Ri || !Ri.has(d)))
        ) {
          a = Ji(c, a);
          a = Qi(b, a, 1);
          b = nh(b, a, 1);
          a = R();
          null !== b && (Ac(b, 1, a), Dk(b, a));
          break;
        }
      }
      b = b.return;
    }
}
function Ti(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = R();
  a.pingedLanes |= a.suspendedLanes & c;
  Q === a &&
    (Z & c) === c &&
    (4 === T || (3 === T && (Z & 130023424) === Z && 500 > B() - fk)
      ? Kk(a, 0)
      : (rk |= c));
  Dk(a, b);
}
function Yk(a, b) {
  0 === b &&
    (0 === (a.mode & 1)
      ? (b = 1)
      : ((b = sc), (sc <<= 1), 0 === (sc & 130023424) && (sc = 4194304)));
  var c = R();
  a = ih(a, b);
  null !== a && (Ac(a, b, c), Dk(a, c));
}
function uj(a) {
  var b = a.memoizedState,
    c = 0;
  null !== b && (c = b.retryLane);
  Yk(a, c);
}
function bk(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b);
  Yk(a, c);
}
var Vk;
Vk = function (a, b, c) {
  if (null !== a)
    if (a.memoizedProps !== b.pendingProps || Wf.current) dh = true;
    else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128))
        return (dh = false), yj(a, b, c);
      dh = 0 !== (a.flags & 131072) ? true : false;
    }
  else (dh = false), I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      ij(a, b);
      a = b.pendingProps;
      var e = Yf(b, H.current);
      ch(b, c);
      e = Nh(null, b, d, a, e, c);
      var f2 = Sh();
      b.flags |= 1;
      'object' === typeof e &&
      null !== e &&
      'function' === typeof e.render &&
      void 0 === e.$$typeof
        ? ((b.tag = 1),
          (b.memoizedState = null),
          (b.updateQueue = null),
          Zf(d) ? ((f2 = true), cg(b)) : (f2 = false),
          (b.memoizedState =
            null !== e.state && void 0 !== e.state ? e.state : null),
          kh(b),
          (e.updater = Ei),
          (b.stateNode = e),
          (e._reactInternals = b),
          Ii(b, d, a, c),
          (b = jj(null, b, d, true, f2, c)))
        : ((b.tag = 0), I && f2 && vg(b), Xi(null, b, e, c), (b = b.child));
      return b;
    case 16:
      d = b.elementType;
      a: {
        ij(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = Zk(d);
        a = Ci(d, a);
        switch (e) {
          case 0:
            b = cj(null, b, d, a, c);
            break a;
          case 1:
            b = hj(null, b, d, a, c);
            break a;
          case 11:
            b = Yi(null, b, d, a, c);
            break a;
          case 14:
            b = $i(null, b, d, Ci(d.type, a), c);
            break a;
        }
        throw Error(p(306, d, ''));
      }
      return b;
    case 0:
      return (
        (d = b.type),
        (e = b.pendingProps),
        (e = b.elementType === d ? e : Ci(d, e)),
        cj(a, b, d, e, c)
      );
    case 1:
      return (
        (d = b.type),
        (e = b.pendingProps),
        (e = b.elementType === d ? e : Ci(d, e)),
        hj(a, b, d, e, c)
      );
    case 3:
      a: {
        kj(b);
        if (null === a) throw Error(p(387));
        d = b.pendingProps;
        f2 = b.memoizedState;
        e = f2.element;
        lh(a, b);
        qh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f2.isDehydrated)
          if (
            ((f2 = {
              element: d,
              isDehydrated: false,
              cache: g.cache,
              pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
              transitions: g.transitions,
            }),
            (b.updateQueue.baseState = f2),
            (b.memoizedState = f2),
            b.flags & 256)
          ) {
            e = Ji(Error(p(423)), b);
            b = lj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ji(Error(p(424)), b);
            b = lj(a, b, d, c, e);
            break a;
          } else
            for (
              yg = Lf(b.stateNode.containerInfo.firstChild),
                xg = b,
                I = true,
                zg = null,
                c = Vg(b, null, d, c),
                b.child = c;
              c;

            )
              (c.flags = (c.flags & -3) | 4096), (c = c.sibling);
        else {
          Ig();
          if (d === e) {
            b = Zi(a, b, c);
            break a;
          }
          Xi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return (
        Ah(b),
        null === a && Eg(b),
        (d = b.type),
        (e = b.pendingProps),
        (f2 = null !== a ? a.memoizedProps : null),
        (g = e.children),
        Ef(d, e) ? (g = null) : null !== f2 && Ef(d, f2) && (b.flags |= 32),
        gj(a, b),
        Xi(a, b, g, c),
        b.child
      );
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return oj(a, b, c);
    case 4:
      return (
        yh(b, b.stateNode.containerInfo),
        (d = b.pendingProps),
        null === a ? (b.child = Ug(b, null, d, c)) : Xi(a, b, d, c),
        b.child
      );
    case 11:
      return (
        (d = b.type),
        (e = b.pendingProps),
        (e = b.elementType === d ? e : Ci(d, e)),
        Yi(a, b, d, e, c)
      );
    case 7:
      return Xi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Xi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Xi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f2 = b.memoizedProps;
        g = e.value;
        G(Wg, d._currentValue);
        d._currentValue = g;
        if (null !== f2)
          if (He(f2.value, g)) {
            if (f2.children === e.children && !Wf.current) {
              b = Zi(a, b, c);
              break a;
            }
          } else
            for (f2 = b.child, null !== f2 && (f2.return = b); null !== f2; ) {
              var h = f2.dependencies;
              if (null !== h) {
                g = f2.child;
                for (var k2 = h.firstContext; null !== k2; ) {
                  if (k2.context === d) {
                    if (1 === f2.tag) {
                      k2 = mh(-1, c & -c);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2
                          ? (k2.next = k2)
                          : ((k2.next = m2.next), (m2.next = k2));
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c);
                    bh(f2.return, c, b);
                    h.lanes |= c;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g = f2.type === b.type ? null : f2.child;
              else if (18 === f2.tag) {
                g = f2.return;
                if (null === g) throw Error(p(341));
                g.lanes |= c;
                h = g.alternate;
                null !== h && (h.lanes |= c);
                bh(g, c, b);
                g = f2.sibling;
              } else g = f2.child;
              if (null !== g) g.return = f2;
              else
                for (g = f2; null !== g; ) {
                  if (g === b) {
                    g = null;
                    break;
                  }
                  f2 = g.sibling;
                  if (null !== f2) {
                    f2.return = g.return;
                    g = f2;
                    break;
                  }
                  g = g.return;
                }
              f2 = g;
            }
        Xi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return (
        (e = b.type),
        (d = b.pendingProps.children),
        ch(b, c),
        (e = eh(e)),
        (d = d(e)),
        (b.flags |= 1),
        Xi(a, b, d, c),
        b.child
      );
    case 14:
      return (
        (d = b.type),
        (e = Ci(d, b.pendingProps)),
        (e = Ci(d.type, e)),
        $i(a, b, d, e, c)
      );
    case 15:
      return bj(a, b, b.type, b.pendingProps, c);
    case 17:
      return (
        (d = b.type),
        (e = b.pendingProps),
        (e = b.elementType === d ? e : Ci(d, e)),
        ij(a, b),
        (b.tag = 1),
        Zf(d) ? ((a = true), cg(b)) : (a = false),
        ch(b, c),
        Gi(b, d, e),
        Ii(b, d, e, c),
        jj(null, b, d, true, a, c)
      );
    case 19:
      return xj(a, b, c);
    case 22:
      return dj(a, b, c);
  }
  throw Error(p(156, b.tag));
};
function Fk(a, b) {
  return ac(a, b);
}
function $k(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling =
    this.child =
    this.return =
    this.stateNode =
    this.type =
    this.elementType =
      null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies =
    this.memoizedState =
    this.updateQueue =
    this.memoizedProps =
      null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new $k(a, b, c, d);
}
function aj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function Zk(a) {
  if ('function' === typeof a) return aj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function Pg(a, b) {
  var c = a.alternate;
  null === c
    ? ((c = Bg(a.tag, b, a.key, a.mode)),
      (c.elementType = a.elementType),
      (c.type = a.type),
      (c.stateNode = a.stateNode),
      (c.alternate = a),
      (a.alternate = c))
    : ((c.pendingProps = b),
      (c.type = a.type),
      (c.flags = 0),
      (c.subtreeFlags = 0),
      (c.deletions = null));
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies =
    null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function Rg(a, b, c, d, e, f2) {
  var g = 2;
  d = a;
  if ('function' === typeof a) aj(a) && (g = 1);
  else if ('string' === typeof a) g = 5;
  else
    a: switch (a) {
      case ya:
        return Tg(c.children, e, f2, b);
      case za:
        g = 8;
        e |= 8;
        break;
      case Aa:
        return (
          (a = Bg(12, c, b, e | 2)), (a.elementType = Aa), (a.lanes = f2), a
        );
      case Ea:
        return (a = Bg(13, c, b, e)), (a.elementType = Ea), (a.lanes = f2), a;
      case Fa:
        return (a = Bg(19, c, b, e)), (a.elementType = Fa), (a.lanes = f2), a;
      case Ia:
        return pj(c, e, f2, b);
      default:
        if ('object' === typeof a && null !== a)
          switch (a.$$typeof) {
            case Ba:
              g = 10;
              break a;
            case Ca:
              g = 9;
              break a;
            case Da:
              g = 11;
              break a;
            case Ga:
              g = 14;
              break a;
            case Ha:
              g = 16;
              d = null;
              break a;
          }
        throw Error(p(130, null == a ? a : typeof a, ''));
    }
  b = Bg(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Tg(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function pj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = { isHidden: false };
  return a;
}
function Qg(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function Sg(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation,
  };
  return b;
}
function al(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork =
    this.pingCache =
    this.current =
    this.pendingChildren =
      null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes =
    this.finishedLanes =
    this.mutableReadLanes =
    this.expiredLanes =
    this.pingedLanes =
    this.suspendedLanes =
    this.pendingLanes =
      0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function bl(a, b, c, d, e, f2, g, h, k2) {
  a = new al(a, b, c, h, k2);
  1 === b ? ((b = 1), true === f2 && (b |= 8)) : (b = 0);
  f2 = Bg(3, null, null, b);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = {
    element: d,
    isDehydrated: c,
    cache: null,
    transitions: null,
    pendingSuspenseBoundaries: null,
  };
  kh(f2);
  return a;
}
function cl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: null == d ? null : '' + d,
    children: a,
    containerInfo: b,
    implementation: c,
  };
}
function dl(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c)) return bg(a, c, b);
  }
  return b;
}
function el(a, b, c, d, e, f2, g, h, k2) {
  a = bl(c, d, true, a, e, f2, g, h, k2);
  a.context = dl(null);
  c = a.current;
  d = R();
  e = yi(c);
  f2 = mh(d, e);
  f2.callback = void 0 !== b && null !== b ? b : null;
  nh(c, f2, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Dk(a, d);
  return a;
}
function fl(a, b, c, d) {
  var e = b.current,
    f2 = R(),
    g = yi(e);
  c = dl(c);
  null === b.context ? (b.context = c) : (b.pendingContext = c);
  b = mh(f2, g);
  b.payload = { element: a };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = nh(e, b, g);
  null !== a && (gi(a, e, g, f2), oh(a, e, g));
  return g;
}
function gl(a) {
  a = a.current;
  if (!a.child) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function hl(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function il(a, b) {
  hl(a, b);
  (a = a.alternate) && hl(a, b);
}
function jl() {
  return null;
}
var kl =
  'function' === typeof reportError
    ? reportError
    : function (a) {
        console.error(a);
      };
function ll(a) {
  this._internalRoot = a;
}
ml.prototype.render = ll.prototype.render = function (a) {
  var b = this._internalRoot;
  if (null === b) throw Error(p(409));
  fl(a, b, null, null);
};
ml.prototype.unmount = ll.prototype.unmount = function () {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Rk(function () {
      fl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function ml(a) {
  this._internalRoot = a;
}
ml.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var b = Hc();
    a = { blockedOn: null, target: a, priority: b };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++);
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function nl(a) {
  return !(!a || (1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType));
}
function ol(a) {
  return !(
    !a ||
    (1 !== a.nodeType &&
      9 !== a.nodeType &&
      11 !== a.nodeType &&
      (8 !== a.nodeType || ' react-mount-point-unstable ' !== a.nodeValue))
  );
}
function pl() {}
function ql(a, b, c, d, e) {
  if (e) {
    if ('function' === typeof d) {
      var f2 = d;
      d = function () {
        var a2 = gl(g);
        f2.call(a2);
      };
    }
    var g = el(b, d, a, 0, null, false, false, '', pl);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Rk();
    return g;
  }
  for (; (e = a.lastChild); ) a.removeChild(e);
  if ('function' === typeof d) {
    var h = d;
    d = function () {
      var a2 = gl(k2);
      h.call(a2);
    };
  }
  var k2 = bl(a, 0, false, null, null, false, false, '', pl);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Rk(function () {
    fl(b, k2, c, d);
  });
  return k2;
}
function rl(a, b, c, d, e) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g = f2;
    if ('function' === typeof e) {
      var h = e;
      e = function () {
        var a2 = gl(g);
        h.call(a2);
      };
    }
    fl(b, g, a, e);
  } else g = ql(c, b, a, e, d);
  return gl(g);
}
Ec = function (a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c &&
          (Cc(b, c | 1), Dk(b, B()), 0 === (K & 6) && ((Gj = B() + 500), jg()));
      }
      break;
    case 13:
      Rk(function () {
        var b2 = ih(a, 1);
        if (null !== b2) {
          var c2 = R();
          gi(b2, a, 1, c2);
        }
      }),
        il(a, 1);
  }
};
Fc = function (a) {
  if (13 === a.tag) {
    var b = ih(a, 134217728);
    if (null !== b) {
      var c = R();
      gi(b, a, 134217728, c);
    }
    il(a, 134217728);
  }
};
Gc = function (a) {
  if (13 === a.tag) {
    var b = yi(a),
      c = ih(a, b);
    if (null !== c) {
      var d = R();
      gi(c, a, b, d);
    }
    il(a, b);
  }
};
Hc = function () {
  return C;
};
Ic = function (a, b) {
  var c = C;
  try {
    return (C = a), b();
  } finally {
    C = c;
  }
};
yb = function (a, b, c) {
  switch (b) {
    case 'input':
      bb(a, c);
      b = c.name;
      if ('radio' === c.type && null != b) {
        for (c = a; c.parentNode; ) c = c.parentNode;
        c = c.querySelectorAll(
          'input[name=' + JSON.stringify('' + b) + '][type="radio"]'
        );
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case 'textarea':
      ib(a, c);
      break;
    case 'select':
      (b = c.value), null != b && fb(a, !!c.multiple, b, false);
  }
};
Gb = Qk;
Hb = Rk;
var sl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Qk] },
  tl = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: '18.3.1',
    rendererPackageName: 'react-dom',
  };
var ul = {
  bundleType: tl.bundleType,
  version: tl.version,
  rendererPackageName: tl.rendererPackageName,
  rendererConfig: tl.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setErrorHandler: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ua.ReactCurrentDispatcher,
  findHostInstanceByFiber: function (a) {
    a = Zb(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: tl.findFiberByHostInstance || jl,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null,
  reconcilerVersion: '18.3.1-next-f1338f8080-20240426',
};
if ('undefined' !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!vl.isDisabled && vl.supportsFiber)
    try {
      (kc = vl.inject(ul)), (lc = vl);
    } catch (a) {}
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
reactDom_production_min.createPortal = function (a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!nl(b)) throw Error(p(200));
  return cl(a, b, null, c);
};
reactDom_production_min.createRoot = function (a, b) {
  if (!nl(a)) throw Error(p(299));
  var c = false,
    d = '',
    e = kl;
  null !== b &&
    void 0 !== b &&
    (true === b.unstable_strictMode && (c = true),
    void 0 !== b.identifierPrefix && (d = b.identifierPrefix),
    void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = bl(a, 1, false, null, null, c, false, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ll(b);
};
reactDom_production_min.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ('function' === typeof a.render) throw Error(p(188));
    a = Object.keys(a).join(',');
    throw Error(p(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function (a) {
  return Rk(a);
};
reactDom_production_min.hydrate = function (a, b, c) {
  if (!ol(b)) throw Error(p(200));
  return rl(null, a, b, true, c);
};
reactDom_production_min.hydrateRoot = function (a, b, c) {
  if (!nl(a)) throw Error(p(405));
  var d = (null != c && c.hydratedSources) || null,
    e = false,
    f2 = '',
    g = kl;
  null !== c &&
    void 0 !== c &&
    (true === c.unstable_strictMode && (e = true),
    void 0 !== c.identifierPrefix && (f2 = c.identifierPrefix),
    void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = el(b, null, a, 1, null != c ? c : null, e, false, f2, g);
  a[uf] = b.current;
  sf(a);
  if (d)
    for (a = 0; a < d.length; a++)
      (c = d[a]),
        (e = c._getVersion),
        (e = e(c._source)),
        null == b.mutableSourceEagerHydrationData
          ? (b.mutableSourceEagerHydrationData = [c, e])
          : b.mutableSourceEagerHydrationData.push(c, e);
  return new ml(b);
};
reactDom_production_min.render = function (a, b, c) {
  if (!ol(b)) throw Error(p(200));
  return rl(null, a, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function (a) {
  if (!ol(a)) throw Error(p(40));
  return a._reactRootContainer
    ? (Rk(function () {
        rl(null, null, a, false, function () {
          a._reactRootContainer = null;
          a[uf] = null;
        });
      }),
      true)
    : false;
};
reactDom_production_min.unstable_batchedUpdates = Qk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function (
  a,
  b,
  c,
  d
) {
  if (!ol(c)) throw Error(p(200));
  if (null == a || void 0 === a._reactInternals) throw Error(p(38));
  return rl(a, b, c, false, d);
};
reactDom_production_min.version = '18.3.1-next-f1338f8080-20240426';
function checkDCE() {
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
var createRoot;
var m = reactDomExports;
{
  createRoot = m.createRoot;
  m.hydrateRoot;
}
var dist = {};
Object.defineProperty(dist, '__esModule', { value: true });
dist.parse = parse;
dist.serialize = serialize;
const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
const cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
const domainValueRegExp =
  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
const pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
const __toString = Object.prototype.toString;
const NullObject = /* @__PURE__ */ (() => {
  const C2 = function () {};
  C2.prototype = /* @__PURE__ */ Object.create(null);
  return C2;
})();
function parse(str, options) {
  const obj = new NullObject();
  const len = str.length;
  if (len < 2) return obj;
  const dec = options?.decode || decode;
  let index = 0;
  do {
    const eqIdx = str.indexOf('=', index);
    if (eqIdx === -1) break;
    const colonIdx = str.indexOf(';', index);
    const endIdx = colonIdx === -1 ? len : colonIdx;
    if (eqIdx > endIdx) {
      index = str.lastIndexOf(';', eqIdx - 1) + 1;
      continue;
    }
    const keyStartIdx = startIndex(str, index, eqIdx);
    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
    const key = str.slice(keyStartIdx, keyEndIdx);
    if (obj[key] === void 0) {
      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
      let valEndIdx = endIndex(str, endIdx, valStartIdx);
      const value = dec(str.slice(valStartIdx, valEndIdx));
      obj[key] = value;
    }
    index = endIdx + 1;
  } while (index < len);
  return obj;
}
function startIndex(str, index, max) {
  do {
    const code = str.charCodeAt(index);
    if (code !== 32 && code !== 9) return index;
  } while (++index < max);
  return max;
}
function endIndex(str, index, min) {
  while (index > min) {
    const code = str.charCodeAt(--index);
    if (code !== 32 && code !== 9) return index + 1;
  }
  return min;
}
function serialize(name, val, options) {
  const enc = options?.encode || encodeURIComponent;
  if (!cookieNameRegExp.test(name)) {
    throw new TypeError(`argument name is invalid: ${name}`);
  }
  const value = enc(val);
  if (!cookieValueRegExp.test(value)) {
    throw new TypeError(`argument val is invalid: ${val}`);
  }
  let str = name + '=' + value;
  if (!options) return str;
  if (options.maxAge !== void 0) {
    if (!Number.isInteger(options.maxAge)) {
      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
    }
    str += '; Max-Age=' + options.maxAge;
  }
  if (options.domain) {
    if (!domainValueRegExp.test(options.domain)) {
      throw new TypeError(`option domain is invalid: ${options.domain}`);
    }
    str += '; Domain=' + options.domain;
  }
  if (options.path) {
    if (!pathValueRegExp.test(options.path)) {
      throw new TypeError(`option path is invalid: ${options.path}`);
    }
    str += '; Path=' + options.path;
  }
  if (options.expires) {
    if (
      !isDate$1(options.expires) ||
      !Number.isFinite(options.expires.valueOf())
    ) {
      throw new TypeError(`option expires is invalid: ${options.expires}`);
    }
    str += '; Expires=' + options.expires.toUTCString();
  }
  if (options.httpOnly) {
    str += '; HttpOnly';
  }
  if (options.secure) {
    str += '; Secure';
  }
  if (options.partitioned) {
    str += '; Partitioned';
  }
  if (options.priority) {
    const priority =
      typeof options.priority === 'string'
        ? options.priority.toLowerCase()
        : void 0;
    switch (priority) {
      case 'low':
        str += '; Priority=Low';
        break;
      case 'medium':
        str += '; Priority=Medium';
        break;
      case 'high':
        str += '; Priority=High';
        break;
      default:
        throw new TypeError(`option priority is invalid: ${options.priority}`);
    }
  }
  if (options.sameSite) {
    const sameSite =
      typeof options.sameSite === 'string'
        ? options.sameSite.toLowerCase()
        : options.sameSite;
    switch (sameSite) {
      case true:
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
    }
  }
  return str;
}
function decode(str) {
  if (str.indexOf('%') === -1) return str;
  try {
    return decodeURIComponent(str);
  } catch (e) {
    return str;
  }
}
function isDate$1(val) {
  return __toString.call(val) === '[object Date]';
}
/**
 * react-router v7.1.5
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
var PopStateEventType = 'popstate';
function createBrowserHistory(options = {}) {
  function createBrowserLocation(window2, globalHistory) {
    let { pathname, search, hash } = window2.location;
    return createLocation(
      '',
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      (globalHistory.state && globalHistory.state.usr) || null,
      (globalHistory.state && globalHistory.state.key) || 'default'
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === 'string' ? to : createPath(to);
  }
  return getUrlBasedHistory(
    createBrowserLocation,
    createBrowserHref,
    null,
    options
  );
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === 'undefined') {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== 'undefined') console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {}
  }
}
function createKey() {
  return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index,
  };
}
function createLocation(current, to, state = null, key) {
  let location = {
    pathname: typeof current === 'string' ? current : current.pathname,
    search: '',
    hash: '',
    ...(typeof to === 'string' ? parsePath(to) : to),
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: (to && to.key) || key || createKey(),
  };
  return location;
}
function createPath({ pathname = '/', search = '', hash = '' }) {
  if (search && search !== '?')
    pathname += search.charAt(0) === '?' ? search : '?' + search;
  if (hash && hash !== '#')
    pathname += hash.charAt(0) === '#' ? hash : '#' + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf('#');
    if (hashIndex >= 0) {
      parsedPath.hash = path.substring(hashIndex);
      path = path.substring(0, hashIndex);
    }
    let searchIndex = path.indexOf('?');
    if (searchIndex >= 0) {
      parsedPath.search = path.substring(searchIndex);
      path = path.substring(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(
  getLocation,
  createHref2,
  validateLocation,
  options = {}
) {
  let { window: window2 = document.defaultView, v5Compat = false } = options;
  let globalHistory = window2.history;
  let action = 'POP';
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState({ ...globalHistory.state, idx: index }, '');
  }
  function getIndex() {
    let state = globalHistory.state || { idx: null };
    return state.idx;
  }
  function handlePop() {
    action = 'POP';
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({ action, location: history.location, delta });
    }
  }
  function push(to, state) {
    action = 'PUSH';
    let location = createLocation(history.location, to, state);
    index = getIndex() + 1;
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, '', url);
    } catch (error) {
      if (error instanceof DOMException && error.name === 'DataCloneError') {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 1 });
    }
  }
  function replace2(to, state) {
    action = 'REPLACE';
    let location = createLocation(history.location, to, state);
    index = getIndex();
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, '', url);
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 0 });
    }
  }
  function createURL(to) {
    let base =
      window2.location.origin !== 'null'
        ? window2.location.origin
        : window2.location.href;
    let href = typeof to === 'string' ? to : createPath(to);
    href = href.replace(/ $/, '%20');
    invariant(
      base,
      `No window.location.(origin|href) available to create URL for href: ${href}`
    );
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error('A history only accepts one active listener');
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref2(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash,
      };
    },
    push,
    replace: replace2,
    go(n2) {
      return globalHistory.go(n2);
    },
  };
  return history;
}
function matchRoutes(routes, locationArg, basename = '/') {
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location =
    typeof locationArg === 'string' ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || '/', basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(branches[i], decoded, allowPartial);
  }
  return matches;
}
function flattenRoutes(
  routes,
  branches = [],
  parentsMeta = [],
  parentPath = ''
) {
  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || '' : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route,
    };
    if (meta.relativePath.startsWith('/')) {
      invariant(
        meta.relativePath.startsWith(parentPath),
        `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
      );
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        `Index routes must not have child routes. Please remove all child routes from route path "${path}".`
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta,
    });
  };
  routes.forEach((route, index) => {
    if (route.path === '' || !route.path?.includes('?')) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split('/');
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith('?');
  let required = first.replace(/\?$/, '');
  if (rest.length === 0) {
    return isOptional ? [required, ''] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join('/'));
  let result = [];
  result.push(
    ...restExploded.map((subpath) =>
      subpath === '' ? required : [required, subpath].join('/')
    )
  );
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) =>
    path.startsWith('/') && exploded === '' ? '/' : exploded
  );
}
function rankRouteBranches(branches) {
  branches.sort((a, b) =>
    a.score !== b.score
      ? b.score - a.score
      : compareIndexes(
          a.routesMeta.map((meta) => meta.childrenIndex),
          b.routesMeta.map((meta) => meta.childrenIndex)
        )
  );
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s) => s === '*';
function computeScore(path, index) {
  let segments = path.split('/');
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments
    .filter((s) => !isSplat(s))
    .reduce(
      (score, segment) =>
        score +
        (paramRe.test(segment)
          ? dynamicSegmentValue
          : segment === ''
            ? emptySegmentValue
            : staticSegmentValue),
      initialScore
    );
}
function compareIndexes(a, b) {
  let siblings =
    a.length === b.length && a.slice(0, -1).every((n2, i) => n2 === b[i]);
  return siblings
    ? // If two routes are siblings, we should try to match the earlier sibling
      // first. This allows people to have fine-grained control over the matching
      // behavior by simply putting routes with identical paths in the order they
      // want them tried.
      a[a.length - 1] - b[b.length - 1]
    : // Otherwise, it doesn't really make sense to rank non-siblings by index,
      // so they sort equally.
      0;
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
  let { routesMeta } = branch;
  let matchedParams = {};
  let matchedPathname = '/';
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname =
      matchedPathname === '/'
        ? pathname
        : pathname.slice(matchedPathname.length) || '/';
    let match = matchPath(
      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },
      remainingPathname
    );
    let route = meta.route;
    if (
      !match &&
      end &&
      allowPartial &&
      !routesMeta[routesMeta.length - 1].route.index
    ) {
      match = matchPath(
        {
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end: false,
        },
        remainingPathname
      );
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(
        joinPaths([matchedPathname, match.pathnameBase])
      ),
      route,
    });
    if (match.pathnameBase !== '/') {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === 'string') {
    pattern = { path: pattern, caseSensitive: false, end: true };
  }
  let [matcher, compiledParams] = compilePath(
    pattern.path,
    pattern.caseSensitive,
    pattern.end
  );
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, '$1');
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce(
    (memo2, { paramName, isOptional }, index) => {
      if (paramName === '*') {
        let splatValue = captureGroups[index] || '';
        pathnameBase = matchedPathname
          .slice(0, matchedPathname.length - splatValue.length)
          .replace(/(.)\/+$/, '$1');
      }
      const value = captureGroups[index];
      if (isOptional && !value) {
        memo2[paramName] = void 0;
      } else {
        memo2[paramName] = (value || '').replace(/%2F/g, '/');
      }
      return memo2;
    },
    {}
  );
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern,
  };
}
function compilePath(path, caseSensitive = false, end = true) {
  warning(
    path === '*' || !path.endsWith('*') || path.endsWith('/*'),
    `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, '/*')}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, '/*')}".`
  );
  let params = [];
  let regexpSource =
    '^' +
    path
      .replace(/\/*\*?$/, '')
      .replace(/^\/*/, '/')
      .replace(/[\\.*+^${}|()[\]]/g, '\\$&')
      .replace(/\/:([\w-]+)(\?)?/g, (_, paramName, isOptional) => {
        params.push({ paramName, isOptional: isOptional != null });
        return isOptional ? '/?([^\\/]+)?' : '/([^\\/]+)';
      });
  if (path.endsWith('*')) {
    params.push({ paramName: '*' });
    regexpSource +=
      path === '*' || path === '/*' ? '(.*)$' : '(?:\\/(.+)|\\/*)$';
  } else if (end) {
    regexpSource += '\\/*$';
  } else if (path !== '' && path !== '/') {
    regexpSource += '(?:(?=\\/|$))';
  } else;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : 'i');
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value
      .split('/')
      .map((v2) => decodeURIComponent(v2).replace(/\//g, '%2F'))
      .join('/');
  } catch (error) {
    warning(
      false,
      `The URL path "${value}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`
    );
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === '/') return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex2 = basename.endsWith('/')
    ? basename.length - 1
    : basename.length;
  let nextChar = pathname.charAt(startIndex2);
  if (nextChar && nextChar !== '/') {
    return null;
  }
  return pathname.slice(startIndex2) || '/';
}
function resolvePath(to, fromPathname = '/') {
  let {
    pathname: toPathname,
    search = '',
    hash = '',
  } = typeof to === 'string' ? parsePath(to) : to;
  let pathname = toPathname
    ? toPathname.startsWith('/')
      ? toPathname
      : resolvePathname(toPathname, fromPathname)
    : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash),
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, '').split('/');
  let relativeSegments = relativePath.split('/');
  relativeSegments.forEach((segment) => {
    if (segment === '..') {
      if (segments.length > 1) segments.pop();
    } else if (segment !== '.') {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join('/') : '/';
}
function getInvalidPathError(char, field, dest, path) {
  return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(
    path
  )}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
  return matches.filter(
    (match, index) =>
      index === 0 || (match.route.path && match.route.path.length > 0)
  );
}
function getResolveToMatches(matches) {
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches.map((match, idx) =>
    idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase
  );
}
function resolveTo(
  toArg,
  routePathnames,
  locationPathname,
  isPathRelative = false
) {
  let to;
  if (typeof toArg === 'string') {
    to = parsePath(toArg);
  } else {
    to = { ...toArg };
    invariant(
      !to.pathname || !to.pathname.includes('?'),
      getInvalidPathError('?', 'pathname', 'search', to)
    );
    invariant(
      !to.pathname || !to.pathname.includes('#'),
      getInvalidPathError('#', 'pathname', 'hash', to)
    );
    invariant(
      !to.search || !to.search.includes('#'),
      getInvalidPathError('#', 'search', 'hash', to)
    );
  }
  let isEmptyPath = toArg === '' || to.pathname === '';
  let toPathname = isEmptyPath ? '/' : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith('..')) {
      let toSegments = toPathname.split('/');
      while (toSegments[0] === '..') {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join('/');
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : '/';
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash =
    toPathname && toPathname !== '/' && toPathname.endsWith('/');
  let hasCurrentTrailingSlash =
    (isEmptyPath || toPathname === '.') && locationPathname.endsWith('/');
  if (
    !path.pathname.endsWith('/') &&
    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)
  ) {
    path.pathname += '/';
  }
  return path;
}
var joinPaths = (paths) => paths.join('/').replace(/\/\/+/g, '/');
var normalizePathname = (pathname) =>
  pathname.replace(/\/+$/, '').replace(/^\/*/, '/');
var normalizeSearch = (search) =>
  !search || search === '?'
    ? ''
    : search.startsWith('?')
      ? search
      : '?' + search;
var normalizeHash = (hash) =>
  !hash || hash === '#' ? '' : hash.startsWith('#') ? hash : '#' + hash;
function isRouteErrorResponse(error) {
  return (
    error != null &&
    typeof error.status === 'number' &&
    typeof error.statusText === 'string' &&
    typeof error.internal === 'boolean' &&
    'data' in error
  );
}
var validMutationMethodsArr = ['POST', 'PUT', 'PATCH', 'DELETE'];
new Set(validMutationMethodsArr);
var validRequestMethodsArr = ['GET', ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
var DataRouterContext = reactExports.createContext(null);
DataRouterContext.displayName = 'DataRouter';
var DataRouterStateContext = reactExports.createContext(null);
DataRouterStateContext.displayName = 'DataRouterState';
var ViewTransitionContext = reactExports.createContext({
  isTransitioning: false,
});
ViewTransitionContext.displayName = 'ViewTransition';
var FetchersContext = reactExports.createContext(/* @__PURE__ */ new Map());
FetchersContext.displayName = 'Fetchers';
var AwaitContext = reactExports.createContext(null);
AwaitContext.displayName = 'Await';
var NavigationContext = reactExports.createContext(null);
NavigationContext.displayName = 'Navigation';
var LocationContext = reactExports.createContext(null);
LocationContext.displayName = 'Location';
var RouteContext = reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false,
});
RouteContext.displayName = 'Route';
var RouteErrorContext = reactExports.createContext(null);
RouteErrorContext.displayName = 'RouteError';
function useHref(to, { relative } = {}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`
  );
  let { basename, navigator: navigator2 } =
    reactExports.useContext(NavigationContext);
  let { hash, pathname, search } = useResolvedPath(to, { relative });
  let joinedPathname = pathname;
  if (basename !== '/') {
    joinedPathname =
      pathname === '/' ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({ pathname: joinedPathname, search, hash });
}
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`
  );
  return reactExports.useContext(LocationContext).location;
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let { isDataRoute } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`
  );
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let { basename, navigator: navigator2 } =
    reactExports.useContext(NavigationContext);
  let { matches } = reactExports.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(
    (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === 'number') {
        navigator2.go(to);
        return;
      }
      let path = resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname,
        options.relative === 'path'
      );
      if (dataRouterContext == null && basename !== '/') {
        path.pathname =
          path.pathname === '/'
            ? basename
            : joinPaths([basename, path.pathname]);
      }
      (!!options.replace ? navigator2.replace : navigator2.push)(
        path,
        options.state,
        options
      );
    },
    [
      basename,
      navigator2,
      routePathnamesJson,
      locationPathname,
      dataRouterContext,
    ]
  );
  return navigate;
}
var OutletContext = reactExports.createContext(null);
function useOutlet(context) {
  let outlet = reactExports.useContext(RouteContext).outlet;
  if (outlet) {
    return /* @__PURE__ */ reactExports.createElement(
      OutletContext.Provider,
      { value: context },
      outlet
    );
  }
  return outlet;
}
function useResolvedPath(to, { relative } = {}) {
  let { matches } = reactExports.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  return reactExports.useMemo(
    () =>
      resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname,
        relative === 'path'
      ),
    [to, routePathnamesJson, locationPathname, relative]
  );
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`
  );
  let { navigator: navigator2, static: isStatic } =
    reactExports.useContext(NavigationContext);
  let { matches: parentMatches } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : '/';
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : '/';
  let parentRoute = routeMatch && routeMatch.route;
  {
    let parentPath = (parentRoute && parentRoute.path) || '';
    warningOnce(
      parentPathname,
      !parentRoute || parentPath.endsWith('*') || parentPath.endsWith('*?'),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === '/' ? '*' : `${parentPath}/*`}">.`
    );
  }
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    let parsedLocationArg =
      typeof locationArg === 'string' ? parsePath(locationArg) : locationArg;
    invariant(
      parentPathnameBase === '/' ||
        parsedLocationArg.pathname?.startsWith(parentPathnameBase),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`
    );
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || '/';
  let remainingPathname = pathname;
  if (parentPathnameBase !== '/') {
    let parentSegments = parentPathnameBase.replace(/^\//, '').split('/');
    let segments = pathname.replace(/^\//, '').split('/');
    remainingPathname = '/' + segments.slice(parentSegments.length).join('/');
  }
  let matches =
    !isStatic &&
    dataRouterState &&
    dataRouterState.matches &&
    dataRouterState.matches.length > 0
      ? dataRouterState.matches
      : matchRoutes(routes, { pathname: remainingPathname });
  {
    warning(
      parentRoute || matches != null,
      `No routes matched location "${location.pathname}${location.search}${location.hash}" `
    );
    warning(
      matches == null ||
        matches[matches.length - 1].route.element !== void 0 ||
        matches[matches.length - 1].route.Component !== void 0 ||
        matches[matches.length - 1].route.lazy !== void 0,
      `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  }
  let renderedMatches = _renderMatches(
    matches &&
      matches.map((match) =>
        Object.assign({}, match, {
          params: Object.assign({}, parentParams, match.params),
          pathname: joinPaths([
            parentPathnameBase,
            // Re-encode pathnames that were decoded inside matchRoutes
            navigator2.encodeLocation
              ? navigator2.encodeLocation(match.pathname).pathname
              : match.pathname,
          ]),
          pathnameBase:
            match.pathnameBase === '/'
              ? parentPathnameBase
              : joinPaths([
                  parentPathnameBase,
                  // Re-encode pathnames that were decoded inside matchRoutes
                  navigator2.encodeLocation
                    ? navigator2.encodeLocation(match.pathnameBase).pathname
                    : match.pathnameBase,
                ]),
        })
      ),
    parentMatches,
    dataRouterState,
    future
  );
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(
      LocationContext.Provider,
      {
        value: {
          location: {
            pathname: '/',
            search: '',
            hash: '',
            state: null,
            key: 'default',
            ...location,
          },
          navigationType: 'POP',
          /* Pop */
        },
      },
      renderedMatches
    );
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error)
    ? `${error.status} ${error.statusText}`
    : error instanceof Error
      ? error.message
      : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = 'rgba(200,200,200, 0.5)';
  let preStyles = { padding: '0.5rem', backgroundColor: lightgrey };
  let codeStyles = { padding: '2px 4px', backgroundColor: lightgrey };
  let devInfo = null;
  {
    console.error(
      'Error handled by React Router default ErrorBoundary:',
      error
    );
    devInfo = /* @__PURE__ */ reactExports.createElement(
      reactExports.Fragment,
      null,
      /* @__PURE__ */ reactExports.createElement(
        'p',
        null,
        '💿 Hey developer 👋'
      ),
      /* @__PURE__ */ reactExports.createElement(
        'p',
        null,
        'You can provide a way better UX than this when your app throws errors by providing your own ',
        /* @__PURE__ */ reactExports.createElement(
          'code',
          { style: codeStyles },
          'ErrorBoundary'
        ),
        ' or',
        ' ',
        /* @__PURE__ */ reactExports.createElement(
          'code',
          { style: codeStyles },
          'errorElement'
        ),
        ' prop on your route.'
      )
    );
  }
  return /* @__PURE__ */ reactExports.createElement(
    reactExports.Fragment,
    null,
    /* @__PURE__ */ reactExports.createElement(
      'h2',
      null,
      'Unexpected Application Error!'
    ),
    /* @__PURE__ */ reactExports.createElement(
      'h3',
      { style: { fontStyle: 'italic' } },
      message
    ),
    stack
      ? /* @__PURE__ */ reactExports.createElement(
          'pre',
          { style: preStyles },
          stack
        )
      : null,
    devInfo
  );
}
var defaultErrorElement = /* @__PURE__ */ reactExports.createElement(
  DefaultErrorComponent,
  null
);
var RenderErrorBoundary = class extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error,
    };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (
      state.location !== props.location ||
      (state.revalidation !== 'idle' && props.revalidation === 'idle')
    ) {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation,
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation,
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error(
      'React Router caught the following error during render',
      error,
      errorInfo
    );
  }
  render() {
    return this.state.error !== void 0
      ? /* @__PURE__ */ reactExports.createElement(
          RouteContext.Provider,
          { value: this.props.routeContext },
          /* @__PURE__ */ reactExports.createElement(
            RouteErrorContext.Provider,
            {
              value: this.state.error,
              children: this.props.component,
            }
          )
        )
      : this.props.children;
  }
};
function RenderedRoute({ routeContext, match, children }) {
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (
    dataRouterContext &&
    dataRouterContext.static &&
    dataRouterContext.staticContext &&
    (match.route.errorElement || match.route.ErrorBoundary)
  ) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(
    RouteContext.Provider,
    { value: routeContext },
    children
  );
}
function _renderMatches(
  matches,
  parentMatches = [],
  dataRouterState = null,
  future = null
) {
  if (matches == null) {
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if (
      parentMatches.length === 0 &&
      !dataRouterState.initialized &&
      dataRouterState.matches.length > 0
    ) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = dataRouterState?.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex(
      (m2) => m2.route.id && errors?.[m2.route.id] !== void 0
    );
    invariant(
      errorIndex >= 0,
      `Could not find a matching route for errors on route IDs: ${Object.keys(
        errors
      ).join(',')}`
    );
    renderedMatches = renderedMatches.slice(
      0,
      Math.min(renderedMatches.length, errorIndex + 1)
    );
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let { loaderData, errors: errors2 } = dataRouterState;
        let needsToRunLoader =
          match.route.loader &&
          !loaderData.hasOwnProperty(match.route.id) &&
          (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index === 0) {
          warningOnce(
            'route-fallback',
            false,
            'No `HydrateFallback` element provided to render during initial hydration'
          );
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children = hydrateFallbackElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(
          match.route.Component,
          null
        );
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null,
        },
        children,
      });
    };
    return dataRouterState &&
      (match.route.ErrorBoundary || match.route.errorElement || index === 0)
      ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
          location: dataRouterState.location,
          revalidation: dataRouterState.revalidation,
          component: errorElement,
          error,
          children: getChildren(),
          routeContext: { outlet: null, matches: matches2, isDataRoute: true },
        })
      : getChildren();
  }, null);
}
function getDataRouterConsoleError(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError(hookName));
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError(hookName));
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  invariant(route, getDataRouterConsoleError(hookName));
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName);
  let thisRoute = route.matches[route.matches.length - 1];
  invariant(
    thisRoute.route.id,
    `${hookName} can only be used on routes that contain a unique "id"`
  );
  return thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId(
    'useRouteId'
    /* UseRouteId */
  );
}
function useRouteError() {
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(
    'useRouteError'
    /* UseRouteError */
  );
  let routeId = useCurrentRouteId(
    'useRouteError'
    /* UseRouteError */
  );
  if (error !== void 0) {
    return error;
  }
  return state.errors?.[routeId];
}
function useNavigateStable() {
  let { router } = useDataRouterContext(
    'useNavigate'
    /* UseNavigateStable */
  );
  let id2 = useCurrentRouteId(
    'useNavigate'
    /* UseNavigateStable */
  );
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(
    async (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === 'number') {
        router.navigate(to);
      } else {
        await router.navigate(to, { fromRouteId: id2, ...options });
      }
    },
    [router, id2]
  );
  return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
    warning(false, message);
  }
}
reactExports.memo(DataRoutes);
function DataRoutes({ routes, future, state }) {
  return useRoutesImpl(routes, void 0, state, future);
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(
    false,
    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`
  );
}
function Router$1({
  basename: basenameProp = '/',
  children = null,
  location: locationProp,
  navigationType = 'POP',
  navigator: navigator2,
  static: staticProp = false,
}) {
  invariant(
    !useInRouterContext(),
    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`
  );
  let basename = basenameProp.replace(/^\/*/, '/');
  let navigationContext = reactExports.useMemo(
    () => ({
      basename,
      navigator: navigator2,
      static: staticProp,
      future: {},
    }),
    [basename, navigator2, staticProp]
  );
  if (typeof locationProp === 'string') {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = '/',
    search = '',
    hash = '',
    state = null,
    key = 'default',
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key,
      },
      navigationType,
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  warning(
    locationContext != null,
    `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`
  );
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(
    NavigationContext.Provider,
    { value: navigationContext },
    /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
      children,
      value: locationContext,
    })
  );
}
function Routes({ children, location }) {
  return useRoutes(createRoutesFromChildren(children), location);
}
function createRoutesFromChildren(children, parentPath = []) {
  let routes = [];
  reactExports.Children.forEach(children, (element, index) => {
    if (!reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(
        routes,
        createRoutesFromChildren(element.props.children, treePath)
      );
      return;
    }
    invariant(
      element.type === Route,
      `[${typeof element.type === 'string' ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
    );
    invariant(
      !element.props.index || !element.props.children,
      'An index route cannot have child routes.'
    );
    let route = {
      id: element.props.id || treePath.join('-'),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      hydrateFallbackElement: element.props.hydrateFallbackElement,
      HydrateFallback: element.props.HydrateFallback,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary:
        element.props.hasErrorBoundary === true ||
        element.props.ErrorBoundary != null ||
        element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy,
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(
        element.props.children,
        treePath
      );
    }
    routes.push(route);
  });
  return routes;
}
var defaultMethod = 'get';
var defaultEncType = 'application/x-www-form-urlencoded';
function isHtmlElement(object) {
  return object != null && typeof object.tagName === 'string';
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === 'button';
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === 'form';
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === 'input';
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return (
    event.button === 0 && // Ignore everything but left clicks
    (!target || target === '_self') && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event)
  );
}
function createSearchParams(init = '') {
  return new URLSearchParams(
    typeof init === 'string' ||
    Array.isArray(init) ||
    init instanceof URLSearchParams
      ? init
      : Object.keys(init).reduce((memo2, key) => {
          let value = init[key];
          return memo2.concat(
            Array.isArray(value) ? value.map((v2) => [key, v2]) : [[key, value]]
          );
        }, [])
  );
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    defaultSearchParams.forEach((_, key) => {
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    });
  }
  return searchParams;
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null) {
    try {
      new FormData(
        document.createElement('form'),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      );
      _formDataSupportsSubmitter = false;
    } catch (e) {
      _formDataSupportsSubmitter = true;
    }
  }
  return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
  'application/x-www-form-urlencoded',
  'multipart/form-data',
  'text/plain',
]);
function getFormEncType(encType) {
  if (encType != null && !supportedFormEncTypes.has(encType)) {
    warning(
      false,
      `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`
    );
    return null;
  }
  return encType;
}
function getFormSubmissionInfo(target, basename) {
  let method;
  let action;
  let encType;
  let formData;
  let body;
  if (isFormElement(target)) {
    let attr = target.getAttribute('action');
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute('method') || defaultMethod;
    encType = getFormEncType(target.getAttribute('enctype')) || defaultEncType;
    formData = new FormData(target);
  } else if (
    isButtonElement(target) ||
    (isInputElement(target) &&
      (target.type === 'submit' || target.type === 'image'))
  ) {
    let form = target.form;
    if (form == null) {
      throw new Error(
        `Cannot submit a <button> or <input type="submit"> without a <form>`
      );
    }
    let attr = target.getAttribute('formaction') || form.getAttribute('action');
    action = attr ? stripBasename(attr, basename) : null;
    method =
      target.getAttribute('formmethod') ||
      form.getAttribute('method') ||
      defaultMethod;
    encType =
      getFormEncType(target.getAttribute('formenctype')) ||
      getFormEncType(form.getAttribute('enctype')) ||
      defaultEncType;
    formData = new FormData(form, target);
    if (!isFormDataSubmitterSupported()) {
      let { name, type, value } = target;
      if (type === 'image') {
        let prefix = name ? `${name}.` : '';
        formData.append(`${prefix}x`, '0');
        formData.append(`${prefix}y`, '0');
      } else if (name) {
        formData.append(name, value);
      }
    }
  } else if (isHtmlElement(target)) {
    throw new Error(
      `Cannot submit element that is not <form>, <button>, or <input type="submit|image">`
    );
  } else {
    method = defaultMethod;
    action = null;
    encType = defaultEncType;
    body = target;
  }
  if (formData && encType === 'text/plain') {
    body = formData;
    formData = void 0;
  }
  return { action, method: method.toLowerCase(), encType, formData, body };
}
function invariant2(value, message) {
  if (value === false || value === null || typeof value === 'undefined') {
    throw new Error(message);
  }
}
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache) {
    return routeModulesCache[route.id];
  }
  try {
    let routeModule = await import(
      /* @vite-ignore */
      /* webpackIgnore: true */
      route.module
    );
    routeModulesCache[route.id] = routeModule;
    return routeModule;
  } catch (error) {
    console.error(
      `Error loading route module \`${route.module}\`, reloading page...`
    );
    console.error(error);
    if (
      window.__reactRouterContext &&
      window.__reactRouterContext.isSpaMode && // @ts-expect-error
      void 0
    );
    window.location.reload();
    return new Promise(() => {});
  }
}
function isHtmlLinkDescriptor(object) {
  if (object == null) {
    return false;
  }
  if (object.href == null) {
    return (
      object.rel === 'preload' &&
      typeof object.imageSrcSet === 'string' &&
      typeof object.imageSizes === 'string'
    );
  }
  return typeof object.rel === 'string' && typeof object.href === 'string';
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
  let links = await Promise.all(
    matches.map(async (match) => {
      let route = manifest.routes[match.route.id];
      if (route) {
        let mod = await loadRouteModule(route, routeModules);
        return mod.links ? mod.links() : [];
      }
      return [];
    })
  );
  return dedupeLinkDescriptors(
    links
      .flat(1)
      .filter(isHtmlLinkDescriptor)
      .filter((link) => link.rel === 'stylesheet' || link.rel === 'preload')
      .map((link) =>
        link.rel === 'stylesheet'
          ? { ...link, rel: 'prefetch', as: 'style' }
          : { ...link, rel: 'prefetch' }
      )
  );
}
function getNewMatchesForLinks(
  page,
  nextMatches,
  currentMatches,
  manifest,
  location,
  mode
) {
  let isNew = (match, index) => {
    if (!currentMatches[index]) return true;
    return match.route.id !== currentMatches[index].route.id;
  };
  let matchPathChanged = (match, index) => {
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      (currentMatches[index].route.path?.endsWith('*') &&
        currentMatches[index].params['*'] !== match.params['*'])
    );
  };
  if (mode === 'assets') {
    return nextMatches.filter(
      (match, index) => isNew(match, index) || matchPathChanged(match, index)
    );
  }
  if (mode === 'data') {
    return nextMatches.filter((match, index) => {
      let manifestRoute = manifest.routes[match.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return false;
      }
      if (isNew(match, index) || matchPathChanged(match, index)) {
        return true;
      }
      if (match.route.shouldRevalidate) {
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(
            location.pathname + location.search + location.hash,
            window.origin
          ),
          currentParams: currentMatches[0]?.params || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: true,
        });
        if (typeof routeChoice === 'boolean') {
          return routeChoice;
        }
      }
      return true;
    });
  }
  return [];
}
function getModuleLinkHrefs(matches, manifestPatch) {
  return dedupeHrefs(
    matches
      .map((match) => {
        let route = manifestPatch.routes[match.route.id];
        if (!route) return [];
        let hrefs = [route.module];
        if (route.imports) {
          hrefs = hrefs.concat(route.imports);
        }
        return hrefs;
      })
      .flat(1)
  );
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function sortKeys(obj) {
  let sorted = {};
  let keys2 = Object.keys(obj).sort();
  for (let key of keys2) {
    sorted[key] = obj[key];
  }
  return sorted;
}
function dedupeLinkDescriptors(descriptors2, preloads) {
  let set = /* @__PURE__ */ new Set();
  new Set(preloads);
  return descriptors2.reduce((deduped, descriptor) => {
    let key = JSON.stringify(sortKeys(descriptor));
    if (!set.has(key)) {
      set.add(key);
      deduped.push({ key, link: descriptor });
    }
    return deduped;
  }, []);
}
function singleFetchUrl(reqUrl) {
  let url =
    typeof reqUrl === 'string'
      ? new URL(
          reqUrl,
          // This can be called during the SSR flow via PrefetchPageLinksImpl so
          // don't assume window is available
          typeof window === 'undefined'
            ? 'server://singlefetch/'
            : window.location.origin
        )
      : reqUrl;
  if (url.pathname === '/') {
    url.pathname = '_root.data';
  } else {
    url.pathname = `${url.pathname.replace(/\/$/, '')}.data`;
  }
  return url;
}
function useDataRouterContext2() {
  let context = reactExports.useContext(DataRouterContext);
  invariant2(
    context,
    'You must render this element inside a <DataRouterContext.Provider> element'
  );
  return context;
}
function useDataRouterStateContext() {
  let context = reactExports.useContext(DataRouterStateContext);
  invariant2(
    context,
    'You must render this element inside a <DataRouterStateContext.Provider> element'
  );
  return context;
}
var FrameworkContext = reactExports.createContext(void 0);
FrameworkContext.displayName = 'FrameworkContext';
function useFrameworkContext() {
  let context = reactExports.useContext(FrameworkContext);
  invariant2(
    context,
    'You must render this element inside a <HydratedRouter> element'
  );
  return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let frameworkContext = reactExports.useContext(FrameworkContext);
  let [maybePrefetch, setMaybePrefetch] = reactExports.useState(false);
  let [shouldPrefetch, setShouldPrefetch] = reactExports.useState(false);
  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } =
    theirElementProps;
  let ref = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (prefetch === 'render') {
      setShouldPrefetch(true);
    }
    if (prefetch === 'viewport') {
      let callback = (entries) => {
        entries.forEach((entry) => {
          setShouldPrefetch(entry.isIntersecting);
        });
      };
      let observer = new IntersectionObserver(callback, { threshold: 0.5 });
      if (ref.current) observer.observe(ref.current);
      return () => {
        observer.disconnect();
      };
    }
  }, [prefetch]);
  reactExports.useEffect(() => {
    if (maybePrefetch) {
      let id2 = setTimeout(() => {
        setShouldPrefetch(true);
      }, 100);
      return () => {
        clearTimeout(id2);
      };
    }
  }, [maybePrefetch]);
  let setIntent = () => {
    setMaybePrefetch(true);
  };
  let cancelIntent = () => {
    setMaybePrefetch(false);
    setShouldPrefetch(false);
  };
  if (!frameworkContext) {
    return [false, ref, {}];
  }
  if (prefetch !== 'intent') {
    return [shouldPrefetch, ref, {}];
  }
  return [
    shouldPrefetch,
    ref,
    {
      onFocus: composeEventHandlers(onFocus, setIntent),
      onBlur: composeEventHandlers(onBlur, cancelIntent),
      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
      onTouchStart: composeEventHandlers(onTouchStart, setIntent),
    },
  ];
}
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event);
    if (!event.defaultPrevented) {
      ourHandler(event);
    }
  };
}
function PrefetchPageLinks({ page, ...dataLinkProps }) {
  let { router } = useDataRouterContext2();
  let matches = reactExports.useMemo(
    () => matchRoutes(router.routes, page, router.basename),
    [router.routes, page, router.basename]
  );
  if (!matches) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(PrefetchPageLinksImpl, {
    page,
    matches,
    ...dataLinkProps,
  });
}
function useKeyedPrefetchLinks(matches) {
  let { manifest, routeModules } = useFrameworkContext();
  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = reactExports.useState([]);
  reactExports.useEffect(() => {
    let interrupted = false;
    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(
      (links) => {
        if (!interrupted) {
          setKeyedPrefetchLinks(links);
        }
      }
    );
    return () => {
      interrupted = true;
    };
  }, [matches, manifest, routeModules]);
  return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({ page, matches: nextMatches, ...linkProps }) {
  let location = useLocation();
  let { manifest, routeModules } = useFrameworkContext();
  let { loaderData, matches } = useDataRouterStateContext();
  let newMatchesForData = reactExports.useMemo(
    () =>
      getNewMatchesForLinks(
        page,
        nextMatches,
        matches,
        manifest,
        location,
        'data'
      ),
    [page, nextMatches, matches, manifest, location]
  );
  let newMatchesForAssets = reactExports.useMemo(
    () =>
      getNewMatchesForLinks(
        page,
        nextMatches,
        matches,
        manifest,
        location,
        'assets'
      ),
    [page, nextMatches, matches, manifest, location]
  );
  let dataHrefs = reactExports.useMemo(() => {
    if (page === location.pathname + location.search + location.hash) {
      return [];
    }
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    nextMatches.forEach((m2) => {
      let manifestRoute = manifest.routes[m2.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return;
      }
      if (
        !newMatchesForData.some((m22) => m22.route.id === m2.route.id) &&
        m2.route.id in loaderData &&
        routeModules[m2.route.id]?.shouldRevalidate
      ) {
        foundOptOutRoute = true;
      } else if (manifestRoute.hasClientLoader) {
        foundOptOutRoute = true;
      } else {
        routesParams.add(m2.route.id);
      }
    });
    if (routesParams.size === 0) {
      return [];
    }
    let url = singleFetchUrl(page);
    if (foundOptOutRoute && routesParams.size > 0) {
      url.searchParams.set(
        '_routes',
        nextMatches
          .filter((m2) => routesParams.has(m2.route.id))
          .map((m2) => m2.route.id)
          .join(',')
      );
    }
    return [url.pathname + url.search];
  }, [
    loaderData,
    location,
    manifest,
    newMatchesForData,
    nextMatches,
    page,
    routeModules,
  ]);
  let moduleHrefs = reactExports.useMemo(
    () => getModuleLinkHrefs(newMatchesForAssets, manifest),
    [newMatchesForAssets, manifest]
  );
  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
  return /* @__PURE__ */ reactExports.createElement(
    reactExports.Fragment,
    null,
    dataHrefs.map((href) =>
      /* @__PURE__ */ reactExports.createElement('link', {
        key: href,
        rel: 'prefetch',
        as: 'fetch',
        href,
        ...linkProps,
      })
    ),
    moduleHrefs.map((href) =>
      /* @__PURE__ */ reactExports.createElement('link', {
        key: href,
        rel: 'modulepreload',
        href,
        ...linkProps,
      })
    ),
    keyedPrefetchLinks.map(({ key, link }) =>
      // these don't spread `linkProps` because they are full link descriptors
      // already with their own props
      /* @__PURE__ */ reactExports.createElement('link', { key, ...link })
    )
  );
}
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      if (typeof ref === 'function') {
        ref(value);
      } else if (ref != null) {
        ref.current = value;
      }
    });
  };
}
var isBrowser =
  typeof window !== 'undefined' &&
  typeof window.document !== 'undefined' &&
  typeof window.document.createElement !== 'undefined';
try {
  if (isBrowser) {
    window.__reactRouterVersion = '7.1.5';
  }
} catch (e) {}
function BrowserRouter({ basename, children, window: window2 }) {
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true,
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location,
  });
  let setState = reactExports.useCallback(
    (newState) => {
      reactExports.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  reactExports.useLayoutEffect(
    () => history.listen(setState),
    [history, setState]
  );
  return /* @__PURE__ */ reactExports.createElement(Router$1, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
  });
}
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = reactExports.forwardRef(function LinkWithRef(
  {
    onClick,
    discover = 'render',
    prefetch = 'none',
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to,
    preventScrollReset,
    viewTransition,
    ...rest
  },
  forwardedRef
) {
  let { basename } = reactExports.useContext(NavigationContext);
  let isAbsolute = typeof to === 'string' && ABSOLUTE_URL_REGEX2.test(to);
  let absoluteHref;
  let isExternal = false;
  if (typeof to === 'string' && isAbsolute) {
    absoluteHref = to;
    if (isBrowser) {
      try {
        let currentUrl = new URL(window.location.href);
        let targetUrl = to.startsWith('//')
          ? new URL(currentUrl.protocol + to)
          : new URL(to);
        let path = stripBasename(targetUrl.pathname, basename);
        if (targetUrl.origin === currentUrl.origin && path != null) {
          to = path + targetUrl.search + targetUrl.hash;
        } else {
          isExternal = true;
        }
      } catch (e) {
        warning(
          false,
          `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
        );
      }
    }
  }
  let href = useHref(to, { relative });
  let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(
    prefetch,
    rest
  );
  let internalOnClick = useLinkClickHandler(to, {
    replace: replace2,
    state,
    target,
    preventScrollReset,
    relative,
    viewTransition,
  });
  function handleClick(event) {
    if (onClick) onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  let link =
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ reactExports.createElement('a', {
      ...rest,
      ...prefetchHandlers,
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick,
      ref: mergeRefs(forwardedRef, prefetchRef),
      target,
      'data-discover': !isAbsolute && discover === 'render' ? 'true' : void 0,
    });
  return shouldPrefetch && !isAbsolute
    ? /* @__PURE__ */ reactExports.createElement(
        reactExports.Fragment,
        null,
        link,
        /* @__PURE__ */ reactExports.createElement(PrefetchPageLinks, {
          page: href,
        })
      )
    : link;
});
Link.displayName = 'Link';
var NavLink = reactExports.forwardRef(function NavLinkWithRef(
  {
    'aria-current': ariaCurrentProp = 'page',
    caseSensitive = false,
    className: classNameProp = '',
    end = false,
    style: styleProp,
    to,
    viewTransition,
    children,
    ...rest
  },
  ref
) {
  let path = useResolvedPath(to, { relative: rest.relative });
  let location = useLocation();
  let routerState = reactExports.useContext(DataRouterStateContext);
  let { navigator: navigator2, basename } =
    reactExports.useContext(NavigationContext);
  let isTransitioning =
    routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) &&
    viewTransition === true;
  let toPathname = navigator2.encodeLocation
    ? navigator2.encodeLocation(path).pathname
    : path.pathname;
  let locationPathname = location.pathname;
  let nextLocationPathname =
    routerState && routerState.navigation && routerState.navigation.location
      ? routerState.navigation.location.pathname
      : null;
  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    nextLocationPathname = nextLocationPathname
      ? nextLocationPathname.toLowerCase()
      : null;
    toPathname = toPathname.toLowerCase();
  }
  if (nextLocationPathname && basename) {
    nextLocationPathname =
      stripBasename(nextLocationPathname, basename) || nextLocationPathname;
  }
  const endSlashPosition =
    toPathname !== '/' && toPathname.endsWith('/')
      ? toPathname.length - 1
      : toPathname.length;
  let isActive =
    locationPathname === toPathname ||
    (!end &&
      locationPathname.startsWith(toPathname) &&
      locationPathname.charAt(endSlashPosition) === '/');
  let isPending =
    nextLocationPathname != null &&
    (nextLocationPathname === toPathname ||
      (!end &&
        nextLocationPathname.startsWith(toPathname) &&
        nextLocationPathname.charAt(toPathname.length) === '/'));
  let renderProps = {
    isActive,
    isPending,
    isTransitioning,
  };
  let ariaCurrent = isActive ? ariaCurrentProp : void 0;
  let className;
  if (typeof classNameProp === 'function') {
    className = classNameProp(renderProps);
  } else {
    className = [
      classNameProp,
      isActive ? 'active' : null,
      isPending ? 'pending' : null,
      isTransitioning ? 'transitioning' : null,
    ]
      .filter(Boolean)
      .join(' ');
  }
  let style =
    typeof styleProp === 'function' ? styleProp(renderProps) : styleProp;
  return /* @__PURE__ */ reactExports.createElement(
    Link,
    {
      ...rest,
      'aria-current': ariaCurrent,
      className,
      ref,
      style,
      to,
      viewTransition,
    },
    typeof children === 'function' ? children(renderProps) : children
  );
});
NavLink.displayName = 'NavLink';
var Form = reactExports.forwardRef(
  (
    {
      discover = 'render',
      fetcherKey,
      navigate,
      reloadDocument,
      replace: replace2,
      state,
      method = defaultMethod,
      action,
      onSubmit,
      relative,
      preventScrollReset,
      viewTransition,
      ...props
    },
    forwardedRef
  ) => {
    let submit = useSubmit();
    let formAction = useFormAction(action, { relative });
    let formMethod = method.toLowerCase() === 'get' ? 'get' : 'post';
    let isAbsolute =
      typeof action === 'string' && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event) => {
      onSubmit && onSubmit(event);
      if (event.defaultPrevented) return;
      event.preventDefault();
      let submitter = event.nativeEvent.submitter;
      let submitMethod = submitter?.getAttribute('formmethod') || method;
      submit(submitter || event.currentTarget, {
        fetcherKey,
        method: submitMethod,
        navigate,
        replace: replace2,
        state,
        relative,
        preventScrollReset,
        viewTransition,
      });
    };
    return /* @__PURE__ */ reactExports.createElement('form', {
      ref: forwardedRef,
      method: formMethod,
      action: formAction,
      onSubmit: reloadDocument ? onSubmit : submitHandler,
      ...props,
      'data-discover': !isAbsolute && discover === 'render' ? 'true' : void 0,
    });
  }
);
Form.displayName = 'Form';
function getDataRouterConsoleError2(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError2(hookName));
  return ctx;
}
function useLinkClickHandler(
  to,
  {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative,
    viewTransition,
  } = {}
) {
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, { relative });
  return reactExports.useCallback(
    (event) => {
      if (shouldProcessLinkClick(event, target)) {
        event.preventDefault();
        let replace2 =
          replaceProp !== void 0
            ? replaceProp
            : createPath(location) === createPath(path);
        navigate(to, {
          replace: replace2,
          state,
          preventScrollReset,
          relative,
          viewTransition,
        });
      }
    },
    [
      location,
      navigate,
      path,
      replaceProp,
      state,
      target,
      to,
      preventScrollReset,
      relative,
      viewTransition,
    ]
  );
}
function useSearchParams(defaultInit) {
  warning(
    typeof URLSearchParams !== 'undefined',
    `You cannot use the \`useSearchParams\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`
  );
  let defaultSearchParamsRef = reactExports.useRef(
    createSearchParams(defaultInit)
  );
  let hasSetSearchParamsRef = reactExports.useRef(false);
  let location = useLocation();
  let searchParams = reactExports.useMemo(
    () =>
      // Only merge in the defaults if we haven't yet called setSearchParams.
      // Once we call that we want those to take precedence, otherwise you can't
      // remove a param with setSearchParams({}) if it has an initial value
      getSearchParamsForLocation(
        location.search,
        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current
      ),
    [location.search]
  );
  let navigate = useNavigate();
  let setSearchParams = reactExports.useCallback(
    (nextInit, navigateOptions) => {
      const newSearchParams = createSearchParams(
        typeof nextInit === 'function' ? nextInit(searchParams) : nextInit
      );
      hasSetSearchParamsRef.current = true;
      navigate('?' + newSearchParams, navigateOptions);
    },
    [navigate, searchParams]
  );
  return [searchParams, setSearchParams];
}
var fetcherId = 0;
var getUniqueFetcherId = () => `__${String(++fetcherId)}__`;
function useSubmit() {
  let { router } = useDataRouterContext3(
    'useSubmit'
    /* UseSubmit */
  );
  let { basename } = reactExports.useContext(NavigationContext);
  let currentRouteId = useRouteId();
  return reactExports.useCallback(
    async (target, options = {}) => {
      let { action, method, encType, formData, body } = getFormSubmissionInfo(
        target,
        basename
      );
      if (options.navigate === false) {
        let key = options.fetcherKey || getUniqueFetcherId();
        await router.fetch(key, currentRouteId, options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          flushSync: options.flushSync,
        });
      } else {
        await router.navigate(options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          replace: options.replace,
          state: options.state,
          fromRouteId: currentRouteId,
          flushSync: options.flushSync,
          viewTransition: options.viewTransition,
        });
      }
    },
    [router, basename, currentRouteId]
  );
}
function useFormAction(action, { relative } = {}) {
  let { basename } = reactExports.useContext(NavigationContext);
  let routeContext = reactExports.useContext(RouteContext);
  invariant(routeContext, 'useFormAction must be used inside a RouteContext');
  let [match] = routeContext.matches.slice(-1);
  let path = { ...useResolvedPath(action ? action : '.', { relative }) };
  let location = useLocation();
  if (action == null) {
    path.search = location.search;
    let params = new URLSearchParams(path.search);
    let indexValues = params.getAll('index');
    let hasNakedIndexParam = indexValues.some((v2) => v2 === '');
    if (hasNakedIndexParam) {
      params.delete('index');
      indexValues
        .filter((v2) => v2)
        .forEach((v2) => params.append('index', v2));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : '';
    }
  }
  if ((!action || action === '.') && match.route.index) {
    path.search = path.search
      ? path.search.replace(/^\?/, '?index&')
      : '?index';
  }
  if (basename !== '/') {
    path.pathname =
      path.pathname === '/' ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function useViewTransitionState(to, opts = {}) {
  let vtContext = reactExports.useContext(ViewTransitionContext);
  invariant(
    vtContext != null,
    "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
  );
  let { basename } = useDataRouterContext3(
    'useViewTransitionState'
    /* useViewTransitionState */
  );
  let path = useResolvedPath(to, { relative: opts.relative });
  if (!vtContext.isTransitioning) {
    return false;
  }
  let currentPath =
    stripBasename(vtContext.currentLocation.pathname, basename) ||
    vtContext.currentLocation.pathname;
  let nextPath =
    stripBasename(vtContext.nextLocation.pathname, basename) ||
    vtContext.nextLocation.pathname;
  return (
    matchPath(path.pathname, nextPath) != null ||
    matchPath(path.pathname, currentPath) != null
  );
}
new TextEncoder();
var container$8 = 'style_container__ocrqqf0';
var icons = 'style_icons__ocrqqf1';
var icon$1 = 'style_icon__ocrqqf2';
var active = 'style_active__ocrqqf3';
var others = 'style_others__ocrqqf4';
var profileImg = 'style_profileImg__ocrqqf5';
const Calendar = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '32',
    height: '32',
    viewBox: '0 0 32 32',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M9 4V7M23 4V7M4 25V10C4 9.20435 4.31607 8.44129 4.87868 7.87868C5.44129 7.31607 6.20435 7 7 7H25C25.7957 7 26.5587 7.31607 27.1213 7.87868C27.6839 8.44129 28 9.20435 28 10V25M4 25C4 25.7957 4.31607 26.5587 4.87868 27.1213C5.44129 27.6839 6.20435 28 7 28H25C25.7957 28 26.5587 27.6839 27.1213 27.1213C27.6839 26.5587 28 25.7957 28 25M4 25V15C4 14.2044 4.31607 13.4413 4.87868 12.8787C5.44129 12.3161 6.20435 12 7 12H25C25.7957 12 26.5587 12.3161 27.1213 12.8787C27.6839 13.4413 28 14.2044 28 15V25',
      stroke: 'white',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const Mail$1 = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '32',
    height: '32',
    viewBox: '0 0 32 32',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M29 9V23C29 23.7956 28.6839 24.5587 28.1213 25.1213C27.5587 25.6839 26.7957 26 26 26H6C5.20435 26 4.44129 25.6839 3.87868 25.1213C3.31607 24.5587 3 23.7956 3 23V9M29 9C29 8.20435 28.6839 7.44129 28.1213 6.87868C27.5587 6.31607 26.7957 6 26 6H6C5.20435 6 4.44129 6.31607 3.87868 6.87868C3.31607 7.44129 3 8.20435 3 9M29 9V9.324C29.0001 9.83619 28.869 10.3399 28.6192 10.7871C28.3695 11.2342 28.0094 11.61 27.5733 11.8787L17.5733 18.032C17.1003 18.3234 16.5556 18.4777 16 18.4777C15.4444 18.4777 14.8997 18.3234 14.4267 18.032L4.42667 11.88C3.99056 11.6114 3.63049 11.2356 3.38076 10.7884C3.13102 10.3412 2.99994 9.83753 3 9.32533V9',
      stroke: 'white',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const Diary = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '32',
    height: '32',
    viewBox: '0 0 32 32',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M22.4827 5.98266L24.732 3.73199C25.2009 3.26309 25.8369 2.99966 26.5 2.99966C27.1631 2.99966 27.7991 3.26309 28.268 3.73199C28.7369 4.2009 29.0003 4.83687 29.0003 5.49999C29.0003 6.16312 28.7369 6.79909 28.268 7.26799L14.1093 21.4267C13.4044 22.1311 12.5352 22.649 11.58 22.9333L8 24L9.06667 20.42C9.35104 19.4648 9.86885 18.5956 10.5733 17.8907L22.4827 5.98266ZM22.4827 5.98266L26 9.49999M24 18.6667V25C24 25.7956 23.6839 26.5587 23.1213 27.1213C22.5587 27.6839 21.7956 28 21 28H7C6.20435 28 5.44129 27.6839 4.87868 27.1213C4.31607 26.5587 4 25.7956 4 25V11C4 10.2043 4.31607 9.44128 4.87868 8.87867C5.44129 8.31606 6.20435 7.99999 7 7.99999H13.3333',
      stroke: 'white',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const Alarm = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '36',
    height: '36',
    viewBox: '0 0 36 36',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M22.2855 25.623C25.0803 25.2921 27.8263 24.6325 30.4665 23.658C28.2306 21.1812 26.9951 17.9617 27 14.625V13.5C27 11.1131 26.0518 8.82387 24.364 7.13604C22.6761 5.44821 20.3869 4.5 18 4.5C15.613 4.5 13.3239 5.44821 11.636 7.13604C9.94821 8.82387 9 11.1131 9 13.5V14.625C9.00452 17.9619 7.76848 21.1814 5.532 23.658C8.1315 24.618 10.872 25.2855 13.7145 25.623M22.2855 25.623C19.4385 25.9607 16.5615 25.9607 13.7145 25.623M22.2855 25.623C22.5017 26.2978 22.5554 27.0141 22.4424 27.7136C22.3294 28.4131 22.0527 29.076 21.6351 29.6484C21.2174 30.2207 20.6705 30.6864 20.0388 31.0074C19.4071 31.3284 18.7086 31.4958 18 31.4958C17.2914 31.4958 16.5929 31.3284 15.9612 31.0074C15.3295 30.6864 14.7826 30.2207 14.3649 29.6484C13.9473 29.076 13.6706 28.4131 13.5576 27.7136C13.4446 27.0141 13.4983 26.2978 13.7145 25.623',
      stroke: 'white',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const NavigationBar = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const menus = [
    {
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Calendar, {}),
      link: '/',
    },
    {
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Mail$1, {}),
      link: '/mail',
    },
    {
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Diary, {}),
      link: '/diary',
    },
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('nav', {
    className: container$8,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
        className: icons,
        children: menus.map((menu) =>
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            'div',
            {
              className: `${icon$1} ${location.pathname === menu.link ? active : ''}`,
              onClick: () => {
                navigate(menu.link);
              },
              children: menu.icon,
            },
            menu.link
          )
        ),
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: others,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
            src: 'https://image.blip.kr/v1/file/32bf28d0434646cb51561a9bcdfbf46d',
            className: profileImg,
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Alarm, {}),
        ],
      }),
    ],
  });
};
const Layout = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    style: { display: 'flex' },
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(NavigationBar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(Outlet, {}),
      }),
    ],
  });
};
const AppTitle = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '421',
    height: '75',
    viewBox: '0 0 421 75',
    fill: 'none',
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M49.6332 26.6439C48.4493 18.7486 42.3323 13.9127 34.0448 13.9127C22.8961 13.9127 15.5951 22.4989 15.5951 37.5C15.5951 52.8959 22.9947 61.0873 33.9461 61.0873C42.135 61.0873 48.1533 56.5475 49.6332 48.8495L64.6297 48.9482C62.9524 62.1729 51.9024 74.2133 33.7488 74.2133C14.6085 74.2133 0.5 60.7912 0.5 37.5C0.5 14.2088 14.9045 0.786713 33.7488 0.786713C50.2252 0.786713 62.6564 10.2611 64.6297 26.6439H49.6332Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M85.6445 73.2264H69.6614L94.4253 1.77363H113.467L138.132 73.2264H122.248L116.92 56.7449H91.0708L85.6445 73.2264ZM94.8199 45.1979H113.171L104.193 17.8604H103.699L94.8199 45.1979Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M146.222 73.2264V1.77363H174.242C190.521 1.77363 199.795 10.952 199.795 25.0649C199.795 34.8353 195.306 41.9411 187.167 45.3953L202.36 73.2264H185.983L172.368 47.8626H161.021V73.2264H146.222ZM161.021 35.8222H171.48C180.26 35.8222 184.503 32.1707 184.503 25.0649C184.503 17.8604 180.26 13.9127 171.48 13.9127H161.021V35.8222Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M210.056 73.2264V1.77363H238.076C254.355 1.77363 263.629 10.952 263.629 25.0649C263.629 34.8353 259.14 41.9411 251 45.3953L266.194 73.2264H249.816L236.201 47.8626H224.855V73.2264H210.056ZM224.855 35.8222H235.313C244.094 35.8222 248.337 32.1707 248.337 25.0649C248.337 17.8604 244.094 13.9127 235.313 13.9127H224.855V35.8222Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M290.958 1.77363L289.675 51.8103H277.047L275.764 1.77363H290.958ZM283.46 74.1146C278.823 74.1146 275.074 70.3643 275.172 65.8245C275.074 61.2847 278.823 57.6331 283.46 57.6331C287.801 57.6331 291.649 61.2847 291.649 65.8245C291.649 70.3643 287.801 74.1146 283.46 74.1146Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M304.869 73.2264V1.77363H352.819V14.0114H319.668V31.3811H350.352V43.6189H319.668V60.9886H352.917V73.2264H304.869Z',
        fill: 'black',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M364.362 73.2264V1.77363H392.382C408.661 1.77363 417.935 10.952 417.935 25.0649C417.935 34.8353 413.446 41.9411 405.306 45.3953L420.5 73.2264H404.122L390.507 47.8626H379.161V73.2264H364.362ZM379.161 35.8222H389.619C398.4 35.8222 402.642 32.1707 402.642 25.0649C402.642 17.8604 398.4 13.9127 389.619 13.9127H379.161V35.8222Z',
        fill: 'black',
      }),
    ],
  });
};
const Google = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '25',
    height: '25',
    viewBox: '0 0 25 25',
    fill: 'none',
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M22.3055 10.2548H21.5V10.2133H12.5V14.2133H18.1515C17.327 16.5418 15.1115 18.2133 12.5 18.2133C9.1865 18.2133 6.5 15.5268 6.5 12.2133C6.5 8.89979 9.1865 6.21329 12.5 6.21329C14.0295 6.21329 15.421 6.79029 16.4805 7.73279L19.309 4.90429C17.523 3.23979 15.134 2.21329 12.5 2.21329C6.9775 2.21329 2.5 6.69079 2.5 12.2133C2.5 17.7358 6.9775 22.2133 12.5 22.2133C18.0225 22.2133 22.5 17.7358 22.5 12.2133C22.5 11.5428 22.431 10.8883 22.3055 10.2548Z',
        fill: '#FFC107',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M3.65302 7.55879L6.93851 9.96829C7.82752 7.76729 9.98052 6.21329 12.5 6.21329C14.0295 6.21329 15.421 6.79029 16.4805 7.73279L19.309 4.90429C17.523 3.23979 15.134 2.21329 12.5 2.21329C8.65902 2.21329 5.32802 4.38179 3.65302 7.55879Z',
        fill: '#FF3D00',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M12.5 22.2133C15.083 22.2133 17.43 21.2248 19.2045 19.6173L16.1095 16.9983C15.1055 17.7588 13.8575 18.2133 12.5 18.2133C9.89897 18.2133 7.69047 16.5548 6.85847 14.2403L3.59747 16.7528C5.25247 19.9913 8.61347 22.2133 12.5 22.2133Z',
        fill: '#4CAF50',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        d: 'M22.3055 10.2548H21.5V10.2133H12.5V14.2133H18.1515C17.7555 15.3318 17.036 16.2963 16.108 16.9988L16.1095 16.9978L19.2045 19.6168C18.9855 19.8158 22.5 17.2133 22.5 12.2133C22.5 11.5428 22.431 10.8883 22.3055 10.2548Z',
        fill: '#1976D2',
      }),
    ],
  });
};
var container$7 = 'style_container__ipve631';
var center$1 = 'style_center__ipve632';
var explain = 'style_explain__ipve633';
var loginButton = 'style_loginButton__ipve634';
var loginText$1 = 'style_loginText__ipve635';
var shape$1 = 'style_shape__ipve636';
var Asterisk$1 = 'style_Asterisk__ipve637 style_shape__ipve636';
var Cube$1 = 'style_Cube__ipve638 style_shape__ipve636';
var Sphere$1 = 'style_Sphere__ipve639 style_shape__ipve636';
var MobiusStrip$1 = 'style_MobiusStrip__ipve63a style_shape__ipve636';
const Arrow$1 = ({ direction = 'left', size = 24 }) => {
  let rotation = 0;
  switch (direction) {
    case 'right':
      rotation = 180;
      break;
    case 'up':
      rotation = 90;
      break;
    case 'down':
      rotation = -90;
      break;
    case 'left':
    default:
      rotation = 0;
      break;
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: size,
    height: size,
    viewBox: '0 0 24 25',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    style: {
      transform: `rotate(${rotation}deg)`,
      transformOrigin: 'center',
    },
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M15.75 20L8.25 12.5L15.75 5',
      stroke: '#121213',
      strokeWidth: '1.5',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const LandingAsterisk =
  '' + new URL('LandingAsterisk-CBagl9BJ.png', import.meta.url).href;
const LandingCube =
  '' + new URL('LandingCube-DF3RTAr7.png', import.meta.url).href;
const LandingSphere =
  '' + new URL('LandingSphere-BUsUd4wf.png', import.meta.url).href;
const LandingMobiusStrip =
  '' + new URL('LandingMobiusStrip-B8Jih3F9.png', import.meta.url).href;
var Subscribable = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set();
    this.subscribe = this.subscribe.bind(this);
  }
  subscribe(listener) {
    this.listeners.add(listener);
    this.onSubscribe();
    return () => {
      this.listeners.delete(listener);
      this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {}
  onUnsubscribe() {}
};
var isServer = typeof window === 'undefined' || 'Deno' in globalThis;
function noop$2() {}
function functionalUpdate(updater, input2) {
  return typeof updater === 'function' ? updater(input2) : updater;
}
function isValidTimeout(value) {
  return typeof value === 'number' && value >= 0 && value !== Infinity;
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function resolveStaleTime(staleTime, query) {
  return typeof staleTime === 'function' ? staleTime(query) : staleTime;
}
function resolveEnabled(enabled, query) {
  return typeof enabled === 'function' ? enabled(query) : enabled;
}
function matchQuery(filters, query) {
  const {
    type = 'all',
    exact,
    fetchStatus,
    predicate,
    queryKey,
    stale,
  } = filters;
  if (queryKey) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {
        return false;
      }
    } else if (!partialMatchKey(query.queryKey, queryKey)) {
      return false;
    }
  }
  if (type !== 'all') {
    const isActive = query.isActive();
    if (type === 'active' && !isActive) {
      return false;
    }
    if (type === 'inactive' && isActive) {
      return false;
    }
  }
  if (typeof stale === 'boolean' && query.isStale() !== stale) {
    return false;
  }
  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {
    return false;
  }
  if (predicate && !predicate(query)) {
    return false;
  }
  return true;
}
function matchMutation(filters, mutation) {
  const { exact, status, predicate, mutationKey } = filters;
  if (mutationKey) {
    if (!mutation.options.mutationKey) {
      return false;
    }
    if (exact) {
      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {
        return false;
      }
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {
      return false;
    }
  }
  if (status && mutation.state.status !== status) {
    return false;
  }
  if (predicate && !predicate(mutation)) {
    return false;
  }
  return true;
}
function hashQueryKeyByOptions(queryKey, options) {
  const hashFn = options?.queryKeyHashFn || hashKey;
  return hashFn(queryKey);
}
function hashKey(queryKey) {
  return JSON.stringify(queryKey, (_, val) =>
    isPlainObject$1(val)
      ? Object.keys(val)
          .sort()
          .reduce((result, key) => {
            result[key] = val[key];
            return result;
          }, {})
      : val
  );
}
function partialMatchKey(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (a && b && typeof a === 'object' && typeof b === 'object') {
    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));
  }
  return false;
}
function replaceEqualDeep(a, b) {
  if (a === b) {
    return a;
  }
  const array = isPlainArray(a) && isPlainArray(b);
  if (array || (isPlainObject$1(a) && isPlainObject$1(b))) {
    const aItems = array ? a : Object.keys(a);
    const aSize = aItems.length;
    const bItems = array ? b : Object.keys(b);
    const bSize = bItems.length;
    const copy = array ? [] : {};
    let equalItems = 0;
    for (let i = 0; i < bSize; i++) {
      const key = array ? i : bItems[i];
      if (
        ((!array && aItems.includes(key)) || array) &&
        a[key] === void 0 &&
        b[key] === void 0
      ) {
        copy[key] = void 0;
        equalItems++;
      } else {
        copy[key] = replaceEqualDeep(a[key], b[key]);
        if (copy[key] === a[key] && a[key] !== void 0) {
          equalItems++;
        }
      }
    }
    return aSize === bSize && equalItems === aSize ? a : copy;
  }
  return b;
}
function shallowEqualObjects(a, b) {
  if (!b || Object.keys(a).length !== Object.keys(b).length) {
    return false;
  }
  for (const key in a) {
    if (a[key] !== b[key]) {
      return false;
    }
  }
  return true;
}
function isPlainArray(value) {
  return Array.isArray(value) && value.length === Object.keys(value).length;
}
function isPlainObject$1(o) {
  if (!hasObjectPrototype(o)) {
    return false;
  }
  const ctor = o.constructor;
  if (ctor === void 0) {
    return true;
  }
  const prot = ctor.prototype;
  if (!hasObjectPrototype(prot)) {
    return false;
  }
  if (!prot.hasOwnProperty('isPrototypeOf')) {
    return false;
  }
  if (Object.getPrototypeOf(o) !== Object.prototype) {
    return false;
  }
  return true;
}
function hasObjectPrototype(o) {
  return Object.prototype.toString.call(o) === '[object Object]';
}
function sleep(timeout) {
  return new Promise((resolve) => {
    setTimeout(resolve, timeout);
  });
}
function replaceData(prevData, data, options) {
  if (typeof options.structuralSharing === 'function') {
    return options.structuralSharing(prevData, data);
  } else if (options.structuralSharing !== false) {
    return replaceEqualDeep(prevData, data);
  }
  return data;
}
function addToEnd(items, item, max = 0) {
  const newItems = [...items, item];
  return max && newItems.length > max ? newItems.slice(1) : newItems;
}
function addToStart(items, item, max = 0) {
  const newItems = [item, ...items];
  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;
}
var skipToken = Symbol();
function ensureQueryFn(options, fetchOptions) {
  if (!options.queryFn && fetchOptions?.initialPromise) {
    return () => fetchOptions.initialPromise;
  }
  if (!options.queryFn || options.queryFn === skipToken) {
    return () =>
      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));
  }
  return options.queryFn;
}
var FocusManager = class extends Subscribable {
  #focused;
  #cleanup;
  #setup;
  constructor() {
    super();
    this.#setup = (onFocus) => {
      if (!isServer && window.addEventListener) {
        const listener = () => onFocus();
        window.addEventListener('visibilitychange', listener, false);
        return () => {
          window.removeEventListener('visibilitychange', listener);
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.#cleanup) {
      this.setEventListener(this.#setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#cleanup?.();
      this.#cleanup = void 0;
    }
  }
  setEventListener(setup) {
    this.#setup = setup;
    this.#cleanup?.();
    this.#cleanup = setup((focused) => {
      if (typeof focused === 'boolean') {
        this.setFocused(focused);
      } else {
        this.onFocus();
      }
    });
  }
  setFocused(focused) {
    const changed = this.#focused !== focused;
    if (changed) {
      this.#focused = focused;
      this.onFocus();
    }
  }
  onFocus() {
    const isFocused = this.isFocused();
    this.listeners.forEach((listener) => {
      listener(isFocused);
    });
  }
  isFocused() {
    if (typeof this.#focused === 'boolean') {
      return this.#focused;
    }
    return globalThis.document?.visibilityState !== 'hidden';
  }
};
var focusManager = new FocusManager();
var OnlineManager = class extends Subscribable {
  #online = true;
  #cleanup;
  #setup;
  constructor() {
    super();
    this.#setup = (onOnline) => {
      if (!isServer && window.addEventListener) {
        const onlineListener = () => onOnline(true);
        const offlineListener = () => onOnline(false);
        window.addEventListener('online', onlineListener, false);
        window.addEventListener('offline', offlineListener, false);
        return () => {
          window.removeEventListener('online', onlineListener);
          window.removeEventListener('offline', offlineListener);
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.#cleanup) {
      this.setEventListener(this.#setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#cleanup?.();
      this.#cleanup = void 0;
    }
  }
  setEventListener(setup) {
    this.#setup = setup;
    this.#cleanup?.();
    this.#cleanup = setup(this.setOnline.bind(this));
  }
  setOnline(online) {
    const changed = this.#online !== online;
    if (changed) {
      this.#online = online;
      this.listeners.forEach((listener) => {
        listener(online);
      });
    }
  }
  isOnline() {
    return this.#online;
  }
};
var onlineManager = new OnlineManager();
function pendingThenable() {
  let resolve;
  let reject;
  const thenable = new Promise((_resolve, _reject) => {
    resolve = _resolve;
    reject = _reject;
  });
  thenable.status = 'pending';
  thenable.catch(() => {});
  function finalize(data) {
    Object.assign(thenable, data);
    delete thenable.resolve;
    delete thenable.reject;
  }
  thenable.resolve = (value) => {
    finalize({
      status: 'fulfilled',
      value,
    });
    resolve(value);
  };
  thenable.reject = (reason) => {
    finalize({
      status: 'rejected',
      reason,
    });
    reject(reason);
  };
  return thenable;
}
function defaultRetryDelay(failureCount) {
  return Math.min(1e3 * 2 ** failureCount, 3e4);
}
function canFetch(networkMode) {
  return (networkMode ?? 'online') === 'online'
    ? onlineManager.isOnline()
    : true;
}
var CancelledError = class extends Error {
  constructor(options) {
    super('CancelledError');
    this.revert = options?.revert;
    this.silent = options?.silent;
  }
};
function isCancelledError(value) {
  return value instanceof CancelledError;
}
function createRetryer(config) {
  let isRetryCancelled = false;
  let failureCount = 0;
  let isResolved = false;
  let continueFn;
  const thenable = pendingThenable();
  const cancel = (cancelOptions) => {
    if (!isResolved) {
      reject(new CancelledError(cancelOptions));
      config.abort?.();
    }
  };
  const cancelRetry = () => {
    isRetryCancelled = true;
  };
  const continueRetry = () => {
    isRetryCancelled = false;
  };
  const canContinue = () =>
    focusManager.isFocused() &&
    (config.networkMode === 'always' || onlineManager.isOnline()) &&
    config.canRun();
  const canStart = () => canFetch(config.networkMode) && config.canRun();
  const resolve = (value) => {
    if (!isResolved) {
      isResolved = true;
      config.onSuccess?.(value);
      continueFn?.();
      thenable.resolve(value);
    }
  };
  const reject = (value) => {
    if (!isResolved) {
      isResolved = true;
      config.onError?.(value);
      continueFn?.();
      thenable.reject(value);
    }
  };
  const pause = () => {
    return new Promise((continueResolve) => {
      continueFn = (value) => {
        if (isResolved || canContinue()) {
          continueResolve(value);
        }
      };
      config.onPause?.();
    }).then(() => {
      continueFn = void 0;
      if (!isResolved) {
        config.onContinue?.();
      }
    });
  };
  const run = () => {
    if (isResolved) {
      return;
    }
    let promiseOrValue;
    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;
    try {
      promiseOrValue = initialPromise ?? config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    }
    Promise.resolve(promiseOrValue)
      .then(resolve)
      .catch((error) => {
        if (isResolved) {
          return;
        }
        const retry = config.retry ?? (isServer ? 0 : 3);
        const retryDelay = config.retryDelay ?? defaultRetryDelay;
        const delay =
          typeof retryDelay === 'function'
            ? retryDelay(failureCount, error)
            : retryDelay;
        const shouldRetry =
          retry === true ||
          (typeof retry === 'number' && failureCount < retry) ||
          (typeof retry === 'function' && retry(failureCount, error));
        if (isRetryCancelled || !shouldRetry) {
          reject(error);
          return;
        }
        failureCount++;
        config.onFail?.(failureCount, error);
        sleep(delay)
          .then(() => {
            return canContinue() ? void 0 : pause();
          })
          .then(() => {
            if (isRetryCancelled) {
              reject(error);
            } else {
              run();
            }
          });
      });
  };
  return {
    promise: thenable,
    cancel,
    continue: () => {
      continueFn?.();
      return thenable;
    },
    cancelRetry,
    continueRetry,
    canStart,
    start: () => {
      if (canStart()) {
        run();
      } else {
        pause().then(run);
      }
      return thenable;
    },
  };
}
function createNotifyManager() {
  let queue = [];
  let transactions = 0;
  let notifyFn = (callback) => {
    callback();
  };
  let batchNotifyFn = (callback) => {
    callback();
  };
  let scheduleFn = (cb2) => setTimeout(cb2, 0);
  const schedule = (callback) => {
    if (transactions) {
      queue.push(callback);
    } else {
      scheduleFn(() => {
        notifyFn(callback);
      });
    }
  };
  const flush = () => {
    const originalQueue = queue;
    queue = [];
    if (originalQueue.length) {
      scheduleFn(() => {
        batchNotifyFn(() => {
          originalQueue.forEach((callback) => {
            notifyFn(callback);
          });
        });
      });
    }
  };
  return {
    batch: (callback) => {
      let result;
      transactions++;
      try {
        result = callback();
      } finally {
        transactions--;
        if (!transactions) {
          flush();
        }
      }
      return result;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (callback) => {
      return (...args) => {
        schedule(() => {
          callback(...args);
        });
      };
    },
    schedule,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (fn) => {
      notifyFn = fn;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (fn) => {
      batchNotifyFn = fn;
    },
    setScheduler: (fn) => {
      scheduleFn = fn;
    },
  };
}
var notifyManager = createNotifyManager();
var Removable = class {
  #gcTimeout;
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout();
    if (isValidTimeout(this.gcTime)) {
      this.#gcTimeout = setTimeout(() => {
        this.optionalRemove();
      }, this.gcTime);
    }
  }
  updateGcTime(newGcTime) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    if (this.#gcTimeout) {
      clearTimeout(this.#gcTimeout);
      this.#gcTimeout = void 0;
    }
  }
};
var Query = class extends Removable {
  #initialState;
  #revertState;
  #cache;
  #client;
  #retryer;
  #defaultOptions;
  #abortSignalConsumed;
  constructor(config) {
    super();
    this.#abortSignalConsumed = false;
    this.#defaultOptions = config.defaultOptions;
    this.setOptions(config.options);
    this.observers = [];
    this.#client = config.client;
    this.#cache = this.#client.getQueryCache();
    this.queryKey = config.queryKey;
    this.queryHash = config.queryHash;
    this.#initialState = getDefaultState$1(this.options);
    this.state = config.state ?? this.#initialState;
    this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    return this.#retryer?.promise;
  }
  setOptions(options) {
    this.options = { ...this.#defaultOptions, ...options };
    this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    if (!this.observers.length && this.state.fetchStatus === 'idle') {
      this.#cache.remove(this);
    }
  }
  setData(newData, options) {
    const data = replaceData(this.state.data, newData, this.options);
    this.#dispatch({
      data,
      type: 'success',
      dataUpdatedAt: options?.updatedAt,
      manual: options?.manual,
    });
    return data;
  }
  setState(state, setStateOptions) {
    this.#dispatch({ type: 'setState', state, setStateOptions });
  }
  cancel(options) {
    const promise = this.#retryer?.promise;
    this.#retryer?.cancel(options);
    return promise ? promise.then(noop$2).catch(noop$2) : Promise.resolve();
  }
  destroy() {
    super.destroy();
    this.cancel({ silent: true });
  }
  reset() {
    this.destroy();
    this.setState(this.#initialState);
  }
  isActive() {
    return this.observers.some(
      (observer) => resolveEnabled(observer.options.enabled, this) !== false
    );
  }
  isDisabled() {
    if (this.getObserversCount() > 0) {
      return !this.isActive();
    }
    return (
      this.options.queryFn === skipToken ||
      this.state.dataUpdateCount + this.state.errorUpdateCount === 0
    );
  }
  isStale() {
    if (this.state.isInvalidated) {
      return true;
    }
    if (this.getObserversCount() > 0) {
      return this.observers.some(
        (observer) => observer.getCurrentResult().isStale
      );
    }
    return this.state.data === void 0;
  }
  isStaleByTime(staleTime = 0) {
    return (
      this.state.isInvalidated ||
      this.state.data === void 0 ||
      !timeUntilStale(this.state.dataUpdatedAt, staleTime)
    );
  }
  onFocus() {
    const observer = this.observers.find((x2) => x2.shouldFetchOnWindowFocus());
    observer?.refetch({ cancelRefetch: false });
    this.#retryer?.continue();
  }
  onOnline() {
    const observer = this.observers.find((x2) => x2.shouldFetchOnReconnect());
    observer?.refetch({ cancelRefetch: false });
    this.#retryer?.continue();
  }
  addObserver(observer) {
    if (!this.observers.includes(observer)) {
      this.observers.push(observer);
      this.clearGcTimeout();
      this.#cache.notify({ type: 'observerAdded', query: this, observer });
    }
  }
  removeObserver(observer) {
    if (this.observers.includes(observer)) {
      this.observers = this.observers.filter((x2) => x2 !== observer);
      if (!this.observers.length) {
        if (this.#retryer) {
          if (this.#abortSignalConsumed) {
            this.#retryer.cancel({ revert: true });
          } else {
            this.#retryer.cancelRetry();
          }
        }
        this.scheduleGc();
      }
      this.#cache.notify({ type: 'observerRemoved', query: this, observer });
    }
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    if (!this.state.isInvalidated) {
      this.#dispatch({ type: 'invalidate' });
    }
  }
  fetch(options, fetchOptions) {
    if (this.state.fetchStatus !== 'idle') {
      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {
        this.cancel({ silent: true });
      } else if (this.#retryer) {
        this.#retryer.continueRetry();
        return this.#retryer.promise;
      }
    }
    if (options) {
      this.setOptions(options);
    }
    if (!this.options.queryFn) {
      const observer = this.observers.find((x2) => x2.options.queryFn);
      if (observer) {
        this.setOptions(observer.options);
      }
    }
    const abortController = new AbortController();
    const addSignalProperty = (object) => {
      Object.defineProperty(object, 'signal', {
        enumerable: true,
        get: () => {
          this.#abortSignalConsumed = true;
          return abortController.signal;
        },
      });
    };
    const fetchFn = () => {
      const queryFn = ensureQueryFn(this.options, fetchOptions);
      const queryFnContext = {
        client: this.#client,
        queryKey: this.queryKey,
        meta: this.meta,
      };
      addSignalProperty(queryFnContext);
      this.#abortSignalConsumed = false;
      if (this.options.persister) {
        return this.options.persister(queryFn, queryFnContext, this);
      }
      return queryFn(queryFnContext);
    };
    const context = {
      fetchOptions,
      options: this.options,
      queryKey: this.queryKey,
      client: this.#client,
      state: this.state,
      fetchFn,
    };
    addSignalProperty(context);
    this.options.behavior?.onFetch(context, this);
    this.#revertState = this.state;
    if (
      this.state.fetchStatus === 'idle' ||
      this.state.fetchMeta !== context.fetchOptions?.meta
    ) {
      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta });
    }
    const onError = (error) => {
      if (!(isCancelledError(error) && error.silent)) {
        this.#dispatch({
          type: 'error',
          error,
        });
      }
      if (!isCancelledError(error)) {
        this.#cache.config.onError?.(error, this);
        this.#cache.config.onSettled?.(this.state.data, error, this);
      }
      this.scheduleGc();
    };
    this.#retryer = createRetryer({
      initialPromise: fetchOptions?.initialPromise,
      fn: context.fetchFn,
      abort: abortController.abort.bind(abortController),
      onSuccess: (data) => {
        if (data === void 0) {
          onError(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        try {
          this.setData(data);
        } catch (error) {
          onError(error);
          return;
        }
        this.#cache.config.onSuccess?.(data, this);
        this.#cache.config.onSettled?.(data, this.state.error, this);
        this.scheduleGc();
      },
      onError,
      onFail: (failureCount, error) => {
        this.#dispatch({ type: 'failed', failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: 'pause' });
      },
      onContinue: () => {
        this.#dispatch({ type: 'continue' });
      },
      retry: context.options.retry,
      retryDelay: context.options.retryDelay,
      networkMode: context.options.networkMode,
      canRun: () => true,
    });
    return this.#retryer.start();
  }
  #dispatch(action) {
    const reducer = (state) => {
      switch (action.type) {
        case 'failed':
          return {
            ...state,
            fetchFailureCount: action.failureCount,
            fetchFailureReason: action.error,
          };
        case 'pause':
          return {
            ...state,
            fetchStatus: 'paused',
          };
        case 'continue':
          return {
            ...state,
            fetchStatus: 'fetching',
          };
        case 'fetch':
          return {
            ...state,
            ...fetchState(state.data, this.options),
            fetchMeta: action.meta ?? null,
          };
        case 'success':
          return {
            ...state,
            data: action.data,
            dataUpdateCount: state.dataUpdateCount + 1,
            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),
            error: null,
            isInvalidated: false,
            status: 'success',
            ...(!action.manual && {
              fetchStatus: 'idle',
              fetchFailureCount: 0,
              fetchFailureReason: null,
            }),
          };
        case 'error':
          const error = action.error;
          if (isCancelledError(error) && error.revert && this.#revertState) {
            return { ...this.#revertState, fetchStatus: 'idle' };
          }
          return {
            ...state,
            error,
            errorUpdateCount: state.errorUpdateCount + 1,
            errorUpdatedAt: Date.now(),
            fetchFailureCount: state.fetchFailureCount + 1,
            fetchFailureReason: error,
            fetchStatus: 'idle',
            status: 'error',
          };
        case 'invalidate':
          return {
            ...state,
            isInvalidated: true,
          };
        case 'setState':
          return {
            ...state,
            ...action.state,
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.observers.forEach((observer) => {
        observer.onQueryUpdate();
      });
      this.#cache.notify({ query: this, type: 'updated', action });
    });
  }
};
function fetchState(data, options) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',
    ...(data === void 0 && {
      error: null,
      status: 'pending',
    }),
  };
}
function getDefaultState$1(options) {
  const data =
    typeof options.initialData === 'function'
      ? options.initialData()
      : options.initialData;
  const hasData = data !== void 0;
  const initialDataUpdatedAt = hasData
    ? typeof options.initialDataUpdatedAt === 'function'
      ? options.initialDataUpdatedAt()
      : options.initialDataUpdatedAt
    : 0;
  return {
    data,
    dataUpdateCount: 0,
    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: false,
    status: hasData ? 'success' : 'pending',
    fetchStatus: 'idle',
  };
}
var QueryCache = class extends Subscribable {
  constructor(config = {}) {
    super();
    this.config = config;
    this.#queries = /* @__PURE__ */ new Map();
  }
  #queries;
  build(client, options, state) {
    const queryKey = options.queryKey;
    const queryHash =
      options.queryHash ?? hashQueryKeyByOptions(queryKey, options);
    let query = this.get(queryHash);
    if (!query) {
      query = new Query({
        client,
        queryKey,
        queryHash,
        options: client.defaultQueryOptions(options),
        state,
        defaultOptions: client.getQueryDefaults(queryKey),
      });
      this.add(query);
    }
    return query;
  }
  add(query) {
    if (!this.#queries.has(query.queryHash)) {
      this.#queries.set(query.queryHash, query);
      this.notify({
        type: 'added',
        query,
      });
    }
  }
  remove(query) {
    const queryInMap = this.#queries.get(query.queryHash);
    if (queryInMap) {
      query.destroy();
      if (queryInMap === query) {
        this.#queries.delete(query.queryHash);
      }
      this.notify({ type: 'removed', query });
    }
  }
  clear() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        this.remove(query);
      });
    });
  }
  get(queryHash) {
    return this.#queries.get(queryHash);
  }
  getAll() {
    return [...this.#queries.values()];
  }
  find(filters) {
    const defaultedFilters = { exact: true, ...filters };
    return this.getAll().find((query) => matchQuery(defaultedFilters, query));
  }
  findAll(filters = {}) {
    const queries = this.getAll();
    return Object.keys(filters).length > 0
      ? queries.filter((query) => matchQuery(filters, query))
      : queries;
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  onFocus() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onFocus();
      });
    });
  }
  onOnline() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onOnline();
      });
    });
  }
};
var Mutation = class extends Removable {
  #observers;
  #mutationCache;
  #retryer;
  constructor(config) {
    super();
    this.mutationId = config.mutationId;
    this.#mutationCache = config.mutationCache;
    this.#observers = [];
    this.state = config.state || getDefaultState();
    this.setOptions(config.options);
    this.scheduleGc();
  }
  setOptions(options) {
    this.options = options;
    this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(observer) {
    if (!this.#observers.includes(observer)) {
      this.#observers.push(observer);
      this.clearGcTimeout();
      this.#mutationCache.notify({
        type: 'observerAdded',
        mutation: this,
        observer,
      });
    }
  }
  removeObserver(observer) {
    this.#observers = this.#observers.filter((x2) => x2 !== observer);
    this.scheduleGc();
    this.#mutationCache.notify({
      type: 'observerRemoved',
      mutation: this,
      observer,
    });
  }
  optionalRemove() {
    if (!this.#observers.length) {
      if (this.state.status === 'pending') {
        this.scheduleGc();
      } else {
        this.#mutationCache.remove(this);
      }
    }
  }
  continue() {
    return (
      this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
      this.execute(this.state.variables)
    );
  }
  async execute(variables) {
    this.#retryer = createRetryer({
      fn: () => {
        if (!this.options.mutationFn) {
          return Promise.reject(new Error('No mutationFn found'));
        }
        return this.options.mutationFn(variables);
      },
      onFail: (failureCount, error) => {
        this.#dispatch({ type: 'failed', failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: 'pause' });
      },
      onContinue: () => {
        this.#dispatch({ type: 'continue' });
      },
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => this.#mutationCache.canRun(this),
    });
    const restored = this.state.status === 'pending';
    const isPaused = !this.#retryer.canStart();
    try {
      if (!restored) {
        this.#dispatch({ type: 'pending', variables, isPaused });
        await this.#mutationCache.config.onMutate?.(variables, this);
        const context = await this.options.onMutate?.(variables);
        if (context !== this.state.context) {
          this.#dispatch({
            type: 'pending',
            context,
            variables,
            isPaused,
          });
        }
      }
      const data = await this.#retryer.start();
      await this.#mutationCache.config.onSuccess?.(
        data,
        variables,
        this.state.context,
        this
      );
      await this.options.onSuccess?.(data, variables, this.state.context);
      await this.#mutationCache.config.onSettled?.(
        data,
        null,
        this.state.variables,
        this.state.context,
        this
      );
      await this.options.onSettled?.(data, null, variables, this.state.context);
      this.#dispatch({ type: 'success', data });
      return data;
    } catch (error) {
      try {
        await this.#mutationCache.config.onError?.(
          error,
          variables,
          this.state.context,
          this
        );
        await this.options.onError?.(error, variables, this.state.context);
        await this.#mutationCache.config.onSettled?.(
          void 0,
          error,
          this.state.variables,
          this.state.context,
          this
        );
        await this.options.onSettled?.(
          void 0,
          error,
          variables,
          this.state.context
        );
        throw error;
      } finally {
        this.#dispatch({ type: 'error', error });
      }
    } finally {
      this.#mutationCache.runNext(this);
    }
  }
  #dispatch(action) {
    const reducer = (state) => {
      switch (action.type) {
        case 'failed':
          return {
            ...state,
            failureCount: action.failureCount,
            failureReason: action.error,
          };
        case 'pause':
          return {
            ...state,
            isPaused: true,
          };
        case 'continue':
          return {
            ...state,
            isPaused: false,
          };
        case 'pending':
          return {
            ...state,
            context: action.context,
            data: void 0,
            failureCount: 0,
            failureReason: null,
            error: null,
            isPaused: action.isPaused,
            status: 'pending',
            variables: action.variables,
            submittedAt: Date.now(),
          };
        case 'success':
          return {
            ...state,
            data: action.data,
            failureCount: 0,
            failureReason: null,
            error: null,
            status: 'success',
            isPaused: false,
          };
        case 'error':
          return {
            ...state,
            data: void 0,
            error: action.error,
            failureCount: state.failureCount + 1,
            failureReason: action.error,
            isPaused: false,
            status: 'error',
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.#observers.forEach((observer) => {
        observer.onMutationUpdate(action);
      });
      this.#mutationCache.notify({
        mutation: this,
        type: 'updated',
        action,
      });
    });
  }
};
function getDefaultState() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: false,
    status: 'idle',
    variables: void 0,
    submittedAt: 0,
  };
}
var MutationCache = class extends Subscribable {
  constructor(config = {}) {
    super();
    this.config = config;
    this.#mutations = /* @__PURE__ */ new Set();
    this.#scopes = /* @__PURE__ */ new Map();
    this.#mutationId = 0;
  }
  #mutations;
  #scopes;
  #mutationId;
  build(client, options, state) {
    const mutation = new Mutation({
      mutationCache: this,
      mutationId: ++this.#mutationId,
      options: client.defaultMutationOptions(options),
      state,
    });
    this.add(mutation);
    return mutation;
  }
  add(mutation) {
    this.#mutations.add(mutation);
    const scope = scopeFor(mutation);
    if (typeof scope === 'string') {
      const scopedMutations = this.#scopes.get(scope);
      if (scopedMutations) {
        scopedMutations.push(mutation);
      } else {
        this.#scopes.set(scope, [mutation]);
      }
    }
    this.notify({ type: 'added', mutation });
  }
  remove(mutation) {
    if (this.#mutations.delete(mutation)) {
      const scope = scopeFor(mutation);
      if (typeof scope === 'string') {
        const scopedMutations = this.#scopes.get(scope);
        if (scopedMutations) {
          if (scopedMutations.length > 1) {
            const index = scopedMutations.indexOf(mutation);
            if (index !== -1) {
              scopedMutations.splice(index, 1);
            }
          } else if (scopedMutations[0] === mutation) {
            this.#scopes.delete(scope);
          }
        }
      }
    }
    this.notify({ type: 'removed', mutation });
  }
  canRun(mutation) {
    const scope = scopeFor(mutation);
    if (typeof scope === 'string') {
      const mutationsWithSameScope = this.#scopes.get(scope);
      const firstPendingMutation = mutationsWithSameScope?.find(
        (m2) => m2.state.status === 'pending'
      );
      return !firstPendingMutation || firstPendingMutation === mutation;
    } else {
      return true;
    }
  }
  runNext(mutation) {
    const scope = scopeFor(mutation);
    if (typeof scope === 'string') {
      const foundMutation = this.#scopes
        .get(scope)
        ?.find((m2) => m2 !== mutation && m2.state.isPaused);
      return foundMutation?.continue() ?? Promise.resolve();
    } else {
      return Promise.resolve();
    }
  }
  clear() {
    notifyManager.batch(() => {
      this.#mutations.forEach((mutation) => {
        this.notify({ type: 'removed', mutation });
      });
      this.#mutations.clear();
      this.#scopes.clear();
    });
  }
  getAll() {
    return Array.from(this.#mutations);
  }
  find(filters) {
    const defaultedFilters = { exact: true, ...filters };
    return this.getAll().find((mutation) =>
      matchMutation(defaultedFilters, mutation)
    );
  }
  findAll(filters = {}) {
    return this.getAll().filter((mutation) => matchMutation(filters, mutation));
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  resumePausedMutations() {
    const pausedMutations = this.getAll().filter((x2) => x2.state.isPaused);
    return notifyManager.batch(() =>
      Promise.all(
        pausedMutations.map((mutation) => mutation.continue().catch(noop$2))
      )
    );
  }
};
function scopeFor(mutation) {
  return mutation.options.scope?.id;
}
function infiniteQueryBehavior(pages) {
  return {
    onFetch: (context, query) => {
      const options = context.options;
      const direction = context.fetchOptions?.meta?.fetchMore?.direction;
      const oldPages = context.state.data?.pages || [];
      const oldPageParams = context.state.data?.pageParams || [];
      let result = { pages: [], pageParams: [] };
      let currentPage = 0;
      const fetchFn = async () => {
        let cancelled = false;
        const addSignalProperty = (object) => {
          Object.defineProperty(object, 'signal', {
            enumerable: true,
            get: () => {
              if (context.signal.aborted) {
                cancelled = true;
              } else {
                context.signal.addEventListener('abort', () => {
                  cancelled = true;
                });
              }
              return context.signal;
            },
          });
        };
        const queryFn = ensureQueryFn(context.options, context.fetchOptions);
        const fetchPage = async (data, param, previous) => {
          if (cancelled) {
            return Promise.reject();
          }
          if (param == null && data.pages.length) {
            return Promise.resolve(data);
          }
          const queryFnContext = {
            client: context.client,
            queryKey: context.queryKey,
            pageParam: param,
            direction: previous ? 'backward' : 'forward',
            meta: context.options.meta,
          };
          addSignalProperty(queryFnContext);
          const page = await queryFn(queryFnContext);
          const { maxPages } = context.options;
          const addTo = previous ? addToStart : addToEnd;
          return {
            pages: addTo(data.pages, page, maxPages),
            pageParams: addTo(data.pageParams, param, maxPages),
          };
        };
        if (direction && oldPages.length) {
          const previous = direction === 'backward';
          const pageParamFn = previous
            ? getPreviousPageParam
            : getNextPageParam;
          const oldData = {
            pages: oldPages,
            pageParams: oldPageParams,
          };
          const param = pageParamFn(options, oldData);
          result = await fetchPage(oldData, param, previous);
        } else {
          const remainingPages = pages ?? oldPages.length;
          do {
            const param =
              currentPage === 0
                ? (oldPageParams[0] ?? options.initialPageParam)
                : getNextPageParam(options, result);
            if (currentPage > 0 && param == null) {
              break;
            }
            result = await fetchPage(result, param);
            currentPage++;
          } while (currentPage < remainingPages);
        }
        return result;
      };
      if (context.options.persister) {
        context.fetchFn = () => {
          return context.options.persister?.(
            fetchFn,
            {
              client: context.client,
              queryKey: context.queryKey,
              meta: context.options.meta,
              signal: context.signal,
            },
            query
          );
        };
      } else {
        context.fetchFn = fetchFn;
      }
    },
  };
}
function getNextPageParam(options, { pages, pageParams }) {
  const lastIndex = pages.length - 1;
  return pages.length > 0
    ? options.getNextPageParam(
        pages[lastIndex],
        pages,
        pageParams[lastIndex],
        pageParams
      )
    : void 0;
}
function getPreviousPageParam(options, { pages, pageParams }) {
  return pages.length > 0
    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)
    : void 0;
}
var QueryClient = class {
  #queryCache;
  #mutationCache;
  #defaultOptions;
  #queryDefaults;
  #mutationDefaults;
  #mountCount;
  #unsubscribeFocus;
  #unsubscribeOnline;
  constructor(config = {}) {
    this.#queryCache = config.queryCache || new QueryCache();
    this.#mutationCache = config.mutationCache || new MutationCache();
    this.#defaultOptions = config.defaultOptions || {};
    this.#queryDefaults = /* @__PURE__ */ new Map();
    this.#mutationDefaults = /* @__PURE__ */ new Map();
    this.#mountCount = 0;
  }
  mount() {
    this.#mountCount++;
    if (this.#mountCount !== 1) return;
    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {
      if (focused) {
        await this.resumePausedMutations();
        this.#queryCache.onFocus();
      }
    });
    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {
      if (online) {
        await this.resumePausedMutations();
        this.#queryCache.onOnline();
      }
    });
  }
  unmount() {
    this.#mountCount--;
    if (this.#mountCount !== 0) return;
    this.#unsubscribeFocus?.();
    this.#unsubscribeFocus = void 0;
    this.#unsubscribeOnline?.();
    this.#unsubscribeOnline = void 0;
  }
  isFetching(filters) {
    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })
      .length;
  }
  isMutating(filters) {
    return this.#mutationCache.findAll({ ...filters, status: 'pending' })
      .length;
  }
  getQueryData(queryKey) {
    const options = this.defaultQueryOptions({ queryKey });
    return this.#queryCache.get(options.queryHash)?.state.data;
  }
  ensureQueryData(options) {
    const defaultedOptions = this.defaultQueryOptions(options);
    const query = this.#queryCache.build(this, defaultedOptions);
    const cachedData = query.state.data;
    if (cachedData === void 0) {
      return this.fetchQuery(options);
    }
    if (
      options.revalidateIfStale &&
      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))
    ) {
      void this.prefetchQuery(defaultedOptions);
    }
    return Promise.resolve(cachedData);
  }
  getQueriesData(filters) {
    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {
      const data = state.data;
      return [queryKey, data];
    });
  }
  setQueryData(queryKey, updater, options) {
    const defaultedOptions = this.defaultQueryOptions({ queryKey });
    const query = this.#queryCache.get(defaultedOptions.queryHash);
    const prevData = query?.state.data;
    const data = functionalUpdate(updater, prevData);
    if (data === void 0) {
      return void 0;
    }
    return this.#queryCache
      .build(this, defaultedOptions)
      .setData(data, { ...options, manual: true });
  }
  setQueriesData(filters, updater, options) {
    return notifyManager.batch(() =>
      this.#queryCache
        .findAll(filters)
        .map(({ queryKey }) => [
          queryKey,
          this.setQueryData(queryKey, updater, options),
        ])
    );
  }
  getQueryState(queryKey) {
    const options = this.defaultQueryOptions({ queryKey });
    return this.#queryCache.get(options.queryHash)?.state;
  }
  removeQueries(filters) {
    const queryCache = this.#queryCache;
    notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        queryCache.remove(query);
      });
    });
  }
  resetQueries(filters, options) {
    const queryCache = this.#queryCache;
    const refetchFilters = {
      type: 'active',
      ...filters,
    };
    return notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        query.reset();
      });
      return this.refetchQueries(refetchFilters, options);
    });
  }
  cancelQueries(filters, cancelOptions = {}) {
    const defaultedCancelOptions = { revert: true, ...cancelOptions };
    const promises = notifyManager.batch(() =>
      this.#queryCache
        .findAll(filters)
        .map((query) => query.cancel(defaultedCancelOptions))
    );
    return Promise.all(promises).then(noop$2).catch(noop$2);
  }
  invalidateQueries(filters, options = {}) {
    return notifyManager.batch(() => {
      this.#queryCache.findAll(filters).forEach((query) => {
        query.invalidate();
      });
      if (filters?.refetchType === 'none') {
        return Promise.resolve();
      }
      const refetchFilters = {
        ...filters,
        type: filters?.refetchType ?? filters?.type ?? 'active',
      };
      return this.refetchQueries(refetchFilters, options);
    });
  }
  refetchQueries(filters, options = {}) {
    const fetchOptions = {
      ...options,
      cancelRefetch: options.cancelRefetch ?? true,
    };
    const promises = notifyManager.batch(() =>
      this.#queryCache
        .findAll(filters)
        .filter((query) => !query.isDisabled())
        .map((query) => {
          let promise = query.fetch(void 0, fetchOptions);
          if (!fetchOptions.throwOnError) {
            promise = promise.catch(noop$2);
          }
          return query.state.fetchStatus === 'paused'
            ? Promise.resolve()
            : promise;
        })
    );
    return Promise.all(promises).then(noop$2);
  }
  fetchQuery(options) {
    const defaultedOptions = this.defaultQueryOptions(options);
    if (defaultedOptions.retry === void 0) {
      defaultedOptions.retry = false;
    }
    const query = this.#queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(
      resolveStaleTime(defaultedOptions.staleTime, query)
    )
      ? query.fetch(defaultedOptions)
      : Promise.resolve(query.state.data);
  }
  prefetchQuery(options) {
    return this.fetchQuery(options).then(noop$2).catch(noop$2);
  }
  fetchInfiniteQuery(options) {
    options.behavior = infiniteQueryBehavior(options.pages);
    return this.fetchQuery(options);
  }
  prefetchInfiniteQuery(options) {
    return this.fetchInfiniteQuery(options).then(noop$2).catch(noop$2);
  }
  ensureInfiniteQueryData(options) {
    options.behavior = infiniteQueryBehavior(options.pages);
    return this.ensureQueryData(options);
  }
  resumePausedMutations() {
    if (onlineManager.isOnline()) {
      return this.#mutationCache.resumePausedMutations();
    }
    return Promise.resolve();
  }
  getQueryCache() {
    return this.#queryCache;
  }
  getMutationCache() {
    return this.#mutationCache;
  }
  getDefaultOptions() {
    return this.#defaultOptions;
  }
  setDefaultOptions(options) {
    this.#defaultOptions = options;
  }
  setQueryDefaults(queryKey, options) {
    this.#queryDefaults.set(hashKey(queryKey), {
      queryKey,
      defaultOptions: options,
    });
  }
  getQueryDefaults(queryKey) {
    const defaults2 = [...this.#queryDefaults.values()];
    const result = {};
    defaults2.forEach((queryDefault) => {
      if (partialMatchKey(queryKey, queryDefault.queryKey)) {
        Object.assign(result, queryDefault.defaultOptions);
      }
    });
    return result;
  }
  setMutationDefaults(mutationKey, options) {
    this.#mutationDefaults.set(hashKey(mutationKey), {
      mutationKey,
      defaultOptions: options,
    });
  }
  getMutationDefaults(mutationKey) {
    const defaults2 = [...this.#mutationDefaults.values()];
    let result = {};
    defaults2.forEach((queryDefault) => {
      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {
        result = { ...result, ...queryDefault.defaultOptions };
      }
    });
    return result;
  }
  defaultQueryOptions(options) {
    if (options._defaulted) {
      return options;
    }
    const defaultedOptions = {
      ...this.#defaultOptions.queries,
      ...this.getQueryDefaults(options.queryKey),
      ...options,
      _defaulted: true,
    };
    if (!defaultedOptions.queryHash) {
      defaultedOptions.queryHash = hashQueryKeyByOptions(
        defaultedOptions.queryKey,
        defaultedOptions
      );
    }
    if (defaultedOptions.refetchOnReconnect === void 0) {
      defaultedOptions.refetchOnReconnect =
        defaultedOptions.networkMode !== 'always';
    }
    if (defaultedOptions.throwOnError === void 0) {
      defaultedOptions.throwOnError = !!defaultedOptions.suspense;
    }
    if (!defaultedOptions.networkMode && defaultedOptions.persister) {
      defaultedOptions.networkMode = 'offlineFirst';
    }
    if (defaultedOptions.queryFn === skipToken) {
      defaultedOptions.enabled = false;
    }
    return defaultedOptions;
  }
  defaultMutationOptions(options) {
    if (options?._defaulted) {
      return options;
    }
    return {
      ...this.#defaultOptions.mutations,
      ...(options?.mutationKey &&
        this.getMutationDefaults(options.mutationKey)),
      ...options,
      _defaulted: true,
    };
  }
  clear() {
    this.#queryCache.clear();
    this.#mutationCache.clear();
  }
};
var MutationObserver$1 = class MutationObserver2 extends Subscribable {
  #client;
  #currentResult = void 0;
  #currentMutation;
  #mutateOptions;
  constructor(client, options) {
    super();
    this.#client = client;
    this.setOptions(options);
    this.bindMethods();
    this.#updateResult();
  }
  bindMethods() {
    this.mutate = this.mutate.bind(this);
    this.reset = this.reset.bind(this);
  }
  setOptions(options) {
    const prevOptions = this.options;
    this.options = this.#client.defaultMutationOptions(options);
    if (!shallowEqualObjects(this.options, prevOptions)) {
      this.#client.getMutationCache().notify({
        type: 'observerOptionsUpdated',
        mutation: this.#currentMutation,
        observer: this,
      });
    }
    if (
      prevOptions?.mutationKey &&
      this.options.mutationKey &&
      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)
    ) {
      this.reset();
    } else if (this.#currentMutation?.state.status === 'pending') {
      this.#currentMutation.setOptions(this.options);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#currentMutation?.removeObserver(this);
    }
  }
  onMutationUpdate(action) {
    this.#updateResult();
    this.#notify(action);
  }
  getCurrentResult() {
    return this.#currentResult;
  }
  reset() {
    this.#currentMutation?.removeObserver(this);
    this.#currentMutation = void 0;
    this.#updateResult();
    this.#notify();
  }
  mutate(variables, options) {
    this.#mutateOptions = options;
    this.#currentMutation?.removeObserver(this);
    this.#currentMutation = this.#client
      .getMutationCache()
      .build(this.#client, this.options);
    this.#currentMutation.addObserver(this);
    return this.#currentMutation.execute(variables);
  }
  #updateResult() {
    const state = this.#currentMutation?.state ?? getDefaultState();
    this.#currentResult = {
      ...state,
      isPending: state.status === 'pending',
      isSuccess: state.status === 'success',
      isError: state.status === 'error',
      isIdle: state.status === 'idle',
      mutate: this.mutate,
      reset: this.reset,
    };
  }
  #notify(action) {
    notifyManager.batch(() => {
      if (this.#mutateOptions && this.hasListeners()) {
        const variables = this.#currentResult.variables;
        const context = this.#currentResult.context;
        if (action?.type === 'success') {
          this.#mutateOptions.onSuccess?.(action.data, variables, context);
          this.#mutateOptions.onSettled?.(
            action.data,
            null,
            variables,
            context
          );
        } else if (action?.type === 'error') {
          this.#mutateOptions.onError?.(action.error, variables, context);
          this.#mutateOptions.onSettled?.(
            void 0,
            action.error,
            variables,
            context
          );
        }
      }
      this.listeners.forEach((listener) => {
        listener(this.#currentResult);
      });
    });
  }
};
var QueryClientContext = reactExports.createContext(void 0);
var useQueryClient = (queryClient) => {
  const client = reactExports.useContext(QueryClientContext);
  if (!client) {
    throw new Error('No QueryClient set, use QueryClientProvider to set one');
  }
  return client;
};
var QueryClientProvider = ({ client, children }) => {
  reactExports.useEffect(() => {
    client.mount();
    return () => {
      client.unmount();
    };
  }, [client]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(QueryClientContext.Provider, {
    value: client,
    children,
  });
};
function shouldThrowError(throwError, params) {
  if (typeof throwError === 'function') {
    return throwError(...params);
  }
  return !!throwError;
}
function noop$1() {}
function queryOptions(options) {
  return options;
}
function useMutation(options, queryClient) {
  const client = useQueryClient();
  const [observer] = reactExports.useState(
    () => new MutationObserver$1(client, options)
  );
  reactExports.useEffect(() => {
    observer.setOptions(options);
  }, [observer, options]);
  const result = reactExports.useSyncExternalStore(
    reactExports.useCallback(
      (onStoreChange) =>
        observer.subscribe(notifyManager.batchCalls(onStoreChange)),
      [observer]
    ),
    () => observer.getCurrentResult(),
    () => observer.getCurrentResult()
  );
  const mutate = reactExports.useCallback(
    (variables, mutateOptions) => {
      observer.mutate(variables, mutateOptions).catch(noop$1);
    },
    [observer]
  );
  if (
    result.error &&
    shouldThrowError(observer.options.throwOnError, [result.error])
  ) {
    throw result.error;
  }
  return { ...result, mutate, mutateAsync: result.mutate };
}
function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}
const { toString } = Object.prototype;
const { getPrototypeOf } = Object;
const kindOf = /* @__PURE__ */ ((cache) => (thing) => {
  const str = toString.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
const typeOfTest = (type) => (thing) => typeof thing === type;
const { isArray: isArray$4 } = Array;
const isUndefined = typeOfTest('undefined');
function isBuffer$3(val) {
  return (
    val !== null &&
    !isUndefined(val) &&
    val.constructor !== null &&
    !isUndefined(val.constructor) &&
    isFunction$3(val.constructor.isBuffer) &&
    val.constructor.isBuffer(val)
  );
}
const isArrayBuffer = kindOfTest('ArrayBuffer');
function isArrayBufferView(val) {
  let result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}
const isString = typeOfTest('string');
const isFunction$3 = typeOfTest('function');
const isNumber = typeOfTest('number');
const isObject$3 = (thing) => thing !== null && typeof thing === 'object';
const isBoolean = (thing) => thing === true || thing === false;
const isPlainObject = (val) => {
  if (kindOf(val) !== 'object') {
    return false;
  }
  const prototype2 = getPrototypeOf(val);
  return (
    (prototype2 === null ||
      prototype2 === Object.prototype ||
      Object.getPrototypeOf(prototype2) === null) &&
    !(Symbol.toStringTag in val) &&
    !(Symbol.iterator in val)
  );
};
const isDate = kindOfTest('Date');
const isFile = kindOfTest('File');
const isBlob = kindOfTest('Blob');
const isFileList = kindOfTest('FileList');
const isStream = (val) => isObject$3(val) && isFunction$3(val.pipe);
const isFormData = (thing) => {
  let kind;
  return (
    thing &&
    ((typeof FormData === 'function' && thing instanceof FormData) ||
      (isFunction$3(thing.append) &&
        ((kind = kindOf(thing)) === 'formdata' || // detect form-data instance
          (kind === 'object' &&
            isFunction$3(thing.toString) &&
            thing.toString() === '[object FormData]'))))
  );
};
const isURLSearchParams = kindOfTest('URLSearchParams');
const [isReadableStream, isRequest, isResponse, isHeaders] = [
  'ReadableStream',
  'Request',
  'Response',
  'Headers',
].map(kindOfTest);
const trim = (str) =>
  str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
function forEach(obj, fn, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === 'undefined') {
    return;
  }
  let i;
  let l2;
  if (typeof obj !== 'object') {
    obj = [obj];
  }
  if (isArray$4(obj)) {
    for (i = 0, l2 = obj.length; i < l2; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    const keys2 = allOwnKeys
      ? Object.getOwnPropertyNames(obj)
      : Object.keys(obj);
    const len = keys2.length;
    let key;
    for (i = 0; i < len; i++) {
      key = keys2[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  key = key.toLowerCase();
  const keys2 = Object.keys(obj);
  let i = keys2.length;
  let _key;
  while (i-- > 0) {
    _key = keys2[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
const _global = (() => {
  if (typeof globalThis !== 'undefined') return globalThis;
  return typeof self !== 'undefined'
    ? self
    : typeof window !== 'undefined'
      ? window
      : global;
})();
const isContextDefined = (context) =>
  !isUndefined(context) && context !== _global;
function merge() {
  const { caseless } = (isContextDefined(this) && this) || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = (caseless && findKey(result, key)) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray$4(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };
  for (let i = 0, l2 = arguments.length; i < l2; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}
const extend = (a, b, thisArg, { allOwnKeys } = {}) => {
  forEach(
    b,
    (val, key) => {
      if (thisArg && isFunction$3(val)) {
        a[key] = bind(val, thisArg);
      } else {
        a[key] = val;
      }
    },
    { allOwnKeys }
  );
  return a;
};
const stripBOM = (content2) => {
  if (content2.charCodeAt(0) === 65279) {
    content2 = content2.slice(1);
  }
  return content2;
};
const inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(
    superConstructor.prototype,
    descriptors2
  );
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, 'super', {
    value: superConstructor.prototype,
  });
  props && Object.assign(constructor.prototype, props);
};
const toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if (
        (!propFilter || propFilter(prop, sourceObj, destObj)) &&
        !merged[prop]
      ) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
  } while (
    sourceObj &&
    (!filter2 || filter2(sourceObj, destObj)) &&
    sourceObj !== Object.prototype
  );
  return destObj;
};
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
const toArray = (thing) => {
  if (!thing) return null;
  if (isArray$4(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};
const isTypedArray$3 = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[Symbol.iterator];
  const iterator = generator.call(obj);
  let result;
  while ((result = iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};
const isHTMLForm = kindOfTest('HTMLFormElement');
const toCamelCase = (str) => {
  return str
    .toLowerCase()
    .replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m2, p1, p2) {
      return p1.toUpperCase() + p2;
    });
};
const hasOwnProperty$9 = (
  ({ hasOwnProperty: hasOwnProperty2 }) =>
  (obj, prop) =>
    hasOwnProperty2.call(obj, prop)
)(Object.prototype);
const isRegExp = kindOfTest('RegExp');
const reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (
      isFunction$3(obj) &&
      ['arguments', 'caller', 'callee'].indexOf(name) !== -1
    ) {
      return false;
    }
    const value = obj[name];
    if (!isFunction$3(value)) return;
    descriptor.enumerable = false;
    if ('writable' in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      };
    }
  });
};
const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray$4(arrayOrString)
    ? define(arrayOrString)
    : define(String(arrayOrString).split(delimiter));
  return obj;
};
const noop = () => {};
const toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite((value = +value))
    ? value
    : defaultValue;
};
const ALPHA = 'abcdefghijklmnopqrstuvwxyz';
const DIGIT = '0123456789';
const ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT,
};
const generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = '';
  const { length } = alphabet;
  while (size--) {
    str += alphabet[(Math.random() * length) | 0];
  }
  return str;
};
function isSpecCompliantForm(thing) {
  return !!(
    thing &&
    isFunction$3(thing.append) &&
    thing[Symbol.toStringTag] === 'FormData' &&
    thing[Symbol.iterator]
  );
}
const toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i) => {
    if (isObject$3(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (!('toJSON' in source)) {
        stack[i] = source;
        const target = isArray$4(source) ? [] : {};
        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
const isAsyncFn = kindOfTest('AsyncFunction');
const isThenable = (thing) =>
  thing &&
  (isObject$3(thing) || isFunction$3(thing)) &&
  isFunction$3(thing.then) &&
  isFunction$3(thing.catch);
const _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported
    ? ((token, callbacks) => {
        _global.addEventListener(
          'message',
          ({ source, data }) => {
            if (source === _global && data === token) {
              callbacks.length && callbacks.shift()();
            }
          },
          false
        );
        return (cb2) => {
          callbacks.push(cb2);
          _global.postMessage(token, '*');
        };
      })(`axios@${Math.random()}`, [])
    : (cb2) => setTimeout(cb2);
})(typeof setImmediate === 'function', isFunction$3(_global.postMessage));
const asap =
  typeof queueMicrotask !== 'undefined'
    ? queueMicrotask.bind(_global)
    : (typeof process !== 'undefined' && process.nextTick) || _setImmediate;
const utils$1 = {
  isArray: isArray$4,
  isArrayBuffer,
  isBuffer: isBuffer$3,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject: isObject$3,
  isPlainObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction: isFunction$3,
  isStream,
  isURLSearchParams,
  isTypedArray: isTypedArray$3,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty: hasOwnProperty$9,
  hasOwnProp: hasOwnProperty$9,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  ALPHABET,
  generateString,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap,
};
function AxiosError$1(message, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils$1.inherits(AxiosError$1, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils$1.toJSONObject(this.config),
      code: this.code,
      status: this.status,
    };
  },
});
const prototype$1 = AxiosError$1.prototype;
const descriptors = {};
[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED',
  'ERR_NOT_SUPPORT',
  'ERR_INVALID_URL',
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError$1, descriptors);
Object.defineProperty(prototype$1, 'isAxiosError', { value: true });
AxiosError$1.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype$1);
  utils$1.toFlatObject(
    error,
    axiosError,
    function filter2(obj) {
      return obj !== Error.prototype;
    },
    (prop) => {
      return prop !== 'isAxiosError';
    }
  );
  AxiosError$1.call(axiosError, error.message, code, config, request, response);
  axiosError.cause = error;
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
const httpAdapter = null;
function isVisitable(thing) {
  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);
}
function removeBrackets(key) {
  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots) {
  if (!path) return key;
  return path
    .concat(key)
    .map(function each(token, i) {
      token = removeBrackets(token);
      return !dots && i ? '[' + token + ']' : token;
    })
    .join(dots ? '.' : '');
}
function isFlatArray(arr) {
  return utils$1.isArray(arr) && !arr.some(isVisitable);
}
const predicates = utils$1.toFlatObject(
  utils$1,
  {},
  null,
  function filter(prop) {
    return /^is[A-Z]/.test(prop);
  }
);
function toFormData$1(obj, formData, options) {
  if (!utils$1.isObject(obj)) {
    throw new TypeError('target must be an object');
  }
  formData = formData || new FormData();
  options = utils$1.toFlatObject(
    options,
    {
      metaTokens: true,
      dots: false,
      indexes: false,
    },
    false,
    function defined(option, source) {
      return !utils$1.isUndefined(source[option]);
    }
  );
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || (typeof Blob !== 'undefined' && Blob);
  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);
  if (!utils$1.isFunction(visitor)) {
    throw new TypeError('visitor must be a function');
  }
  function convertValue(value) {
    if (value === null) return '';
    if (utils$1.isDate(value)) {
      return value.toISOString();
    }
    if (!useBlob && utils$1.isBlob(value)) {
      throw new AxiosError$1('Blob is not supported. Use a Buffer instead.');
    }
    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {
      return useBlob && typeof Blob === 'function'
        ? new Blob([value])
        : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value === 'object') {
      if (utils$1.endsWith(key, '{}')) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (
        (utils$1.isArray(value) && isFlatArray(value)) ||
        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) &&
          (arr = utils$1.toArray(value)))
      ) {
        key = removeBrackets(key);
        arr.forEach(function each(el2, index) {
          !(utils$1.isUndefined(el2) || el2 === null) &&
            formData.append(
              // eslint-disable-next-line no-nested-ternary
              indexes === true
                ? renderKey([key], index, dots)
                : indexes === null
                  ? key
                  : key + '[]',
              convertValue(el2)
            );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable,
  });
  function build(value, path) {
    if (utils$1.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error('Circular reference detected in ' + path.join('.'));
    }
    stack.push(value);
    utils$1.forEach(value, function each(el2, key) {
      const result =
        !(utils$1.isUndefined(el2) || el2 === null) &&
        visitor.call(
          formData,
          el2,
          utils$1.isString(key) ? key.trim() : key,
          path,
          exposedHelpers
        );
      if (result === true) {
        build(el2, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils$1.isObject(obj)) {
    throw new TypeError('data must be an object');
  }
  build(obj);
  return formData;
}
function encode$1(str) {
  const charMap = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\0',
  };
  return encodeURIComponent(str).replace(
    /[!'()~]|%20|%00/g,
    function replacer(match) {
      return charMap[match];
    }
  );
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData$1(params, this, options);
}
const prototype = AxiosURLSearchParams.prototype;
prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype.toString = function toString2(encoder) {
  const _encode = encoder
    ? function (value) {
        return encoder.call(this, value, encode$1);
      }
    : encode$1;
  return this._pairs
    .map(function each(pair) {
      return _encode(pair[0]) + '=' + _encode(pair[1]);
    }, '')
    .join('&');
};
function encode(val) {
  return encodeURIComponent(val)
    .replace(/%3A/gi, ':')
    .replace(/%24/g, '$')
    .replace(/%2C/gi, ',')
    .replace(/%20/g, '+')
    .replace(/%5B/gi, '[')
    .replace(/%5D/gi, ']');
}
function buildURL(url, params, options) {
  if (!params) {
    return url;
  }
  const _encode = (options && options.encode) || encode;
  if (utils$1.isFunction(options)) {
    options = {
      serialize: options,
    };
  }
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils$1.isURLSearchParams(params)
      ? params.toString()
      : new AxiosURLSearchParams(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }
  return url;
}
class InterceptorManager {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null,
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id2) {
    if (this.handlers[id2]) {
      this.handlers[id2] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils$1.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
}
const transitionalDefaults = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false,
};
const URLSearchParams$1 =
  typeof URLSearchParams !== 'undefined'
    ? URLSearchParams
    : AxiosURLSearchParams;
const FormData$1 = typeof FormData !== 'undefined' ? FormData : null;
const Blob$1 = typeof Blob !== 'undefined' ? Blob : null;
const platform$1 = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams$1,
    FormData: FormData$1,
    Blob: Blob$1,
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data'],
};
const hasBrowserEnv =
  typeof window !== 'undefined' && typeof document !== 'undefined';
const _navigator = (typeof navigator === 'object' && navigator) || void 0;
const hasStandardBrowserEnv =
  hasBrowserEnv &&
  (!_navigator ||
    ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);
const hasStandardBrowserWebWorkerEnv = (() => {
  return (
    typeof WorkerGlobalScope !== 'undefined' && // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts === 'function'
  );
})();
const origin = (hasBrowserEnv && window.location.href) || 'http://localhost';
const utils = /* @__PURE__ */ Object.freeze(
  /* @__PURE__ */ Object.defineProperty(
    {
      __proto__: null,
      hasBrowserEnv,
      hasStandardBrowserEnv,
      hasStandardBrowserWebWorkerEnv,
      navigator: _navigator,
      origin,
    },
    Symbol.toStringTag,
    { value: 'Module' }
  )
);
const platform = {
  ...utils,
  ...platform$1,
};
function toURLEncodedForm(data, options) {
  return toFormData$1(
    data,
    new platform.classes.URLSearchParams(),
    Object.assign(
      {
        visitor: function (value, key, path, helpers) {
          if (platform.isNode && utils$1.isBuffer(value)) {
            this.append(key, value.toString('base64'));
            return false;
          }
          return helpers.defaultVisitor.apply(this, arguments);
        },
      },
      options
    )
  );
}
function parsePropPath(name) {
  return utils$1.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
    return match[0] === '[]' ? '' : match[1] || match[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys2 = Object.keys(arr);
  let i;
  const len = keys2.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys2[i];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];
    if (name === '__proto__') return true;
    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && utils$1.isArray(target) ? target.length : name;
    if (isLast) {
      if (utils$1.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !utils$1.isObject(target[name])) {
      target[name] = [];
    }
    const result = buildPath(path, value, target[name], index);
    if (result && utils$1.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {
    const obj = {};
    utils$1.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
function stringifySafely(rawValue, parser, encoder) {
  if (utils$1.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils$1.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
const defaults = {
  transitional: transitionalDefaults,
  adapter: ['xhr', 'http', 'fetch'],
  transformRequest: [
    function transformRequest(data, headers) {
      const contentType = headers.getContentType() || '';
      const hasJSONContentType = contentType.indexOf('application/json') > -1;
      const isObjectPayload = utils$1.isObject(data);
      if (isObjectPayload && utils$1.isHTMLForm(data)) {
        data = new FormData(data);
      }
      const isFormData2 = utils$1.isFormData(data);
      if (isFormData2) {
        return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
      }
      if (
        utils$1.isArrayBuffer(data) ||
        utils$1.isBuffer(data) ||
        utils$1.isStream(data) ||
        utils$1.isFile(data) ||
        utils$1.isBlob(data) ||
        utils$1.isReadableStream(data)
      ) {
        return data;
      }
      if (utils$1.isArrayBufferView(data)) {
        return data.buffer;
      }
      if (utils$1.isURLSearchParams(data)) {
        headers.setContentType(
          'application/x-www-form-urlencoded;charset=utf-8',
          false
        );
        return data.toString();
      }
      let isFileList2;
      if (isObjectPayload) {
        if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
          return toURLEncodedForm(data, this.formSerializer).toString();
        }
        if (
          (isFileList2 = utils$1.isFileList(data)) ||
          contentType.indexOf('multipart/form-data') > -1
        ) {
          const _FormData = this.env && this.env.FormData;
          return toFormData$1(
            isFileList2 ? { 'files[]': data } : data,
            _FormData && new _FormData(),
            this.formSerializer
          );
        }
      }
      if (isObjectPayload || hasJSONContentType) {
        headers.setContentType('application/json', false);
        return stringifySafely(data);
      }
      return data;
    },
  ],
  transformResponse: [
    function transformResponse(data) {
      const transitional2 = this.transitional || defaults.transitional;
      const forcedJSONParsing =
        transitional2 && transitional2.forcedJSONParsing;
      const JSONRequested = this.responseType === 'json';
      if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {
        return data;
      }
      if (
        data &&
        utils$1.isString(data) &&
        ((forcedJSONParsing && !this.responseType) || JSONRequested)
      ) {
        const silentJSONParsing =
          transitional2 && transitional2.silentJSONParsing;
        const strictJSONParsing = !silentJSONParsing && JSONRequested;
        try {
          return JSON.parse(data);
        } catch (e) {
          if (strictJSONParsing) {
            if (e.name === 'SyntaxError') {
              throw AxiosError$1.from(
                e,
                AxiosError$1.ERR_BAD_RESPONSE,
                this,
                null,
                this.response
              );
            }
            throw e;
          }
        }
      }
      return data;
    },
  ],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform.classes.FormData,
    Blob: platform.classes.Blob,
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': void 0,
    },
  },
};
utils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {
  defaults.headers[method] = {};
});
const ignoreDuplicateOf = utils$1.toObjectSet([
  'age',
  'authorization',
  'content-length',
  'content-type',
  'etag',
  'expires',
  'from',
  'host',
  'if-modified-since',
  'if-unmodified-since',
  'last-modified',
  'location',
  'max-forwards',
  'proxy-authorization',
  'referer',
  'retry-after',
  'user-agent',
]);
const parseHeaders = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i;
  rawHeaders &&
    rawHeaders.split('\n').forEach(function parser(line) {
      i = line.indexOf(':');
      key = line.substring(0, i).trim().toLowerCase();
      val = line.substring(i + 1).trim();
      if (!key || (parsed[key] && ignoreDuplicateOf[key])) {
        return;
      }
      if (key === 'set-cookie') {
        if (parsed[key]) {
          parsed[key].push(val);
        } else {
          parsed[key] = [val];
        }
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    });
  return parsed;
};
const $internals = Symbol('internals');
function normalizeHeader(header2) {
  return header2 && String(header2).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;
  while ((match = tokensRE.exec(str))) {
    tokens[match[1]] = match[2];
  }
  return tokens;
}
const isValidHeaderName = (str) =>
  /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(
  context,
  value,
  header2,
  filter2,
  isHeaderNameFilter
) {
  if (utils$1.isFunction(filter2)) {
    return filter2.call(this, value, header2);
  }
  if (isHeaderNameFilter) {
    value = header2;
  }
  if (!utils$1.isString(value)) return;
  if (utils$1.isString(filter2)) {
    return value.indexOf(filter2) !== -1;
  }
  if (utils$1.isRegExp(filter2)) {
    return filter2.test(value);
  }
}
function formatHeader(header2) {
  return header2
    .trim()
    .toLowerCase()
    .replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
      return char.toUpperCase() + str;
    });
}
function buildAccessors(obj, header2) {
  const accessorName = utils$1.toCamelCase(' ' + header2);
  ['get', 'set', 'has'].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function (arg1, arg2, arg3) {
        return this[methodName].call(this, header2, arg1, arg2, arg3);
      },
      configurable: true,
    });
  });
}
let AxiosHeaders$1 = class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header2, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error('header name must be a non-empty string');
      }
      const key = utils$1.findKey(self2, lHeader);
      if (
        !key ||
        self2[key] === void 0 ||
        _rewrite === true ||
        (_rewrite === void 0 && self2[key] !== false)
      ) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) =>
      utils$1.forEach(headers, (_value, _header) =>
        setHeader(_value, _header, _rewrite)
      );
    if (utils$1.isPlainObject(header2) || header2 instanceof this.constructor) {
      setHeaders(header2, valueOrRewrite);
    } else if (
      utils$1.isString(header2) &&
      (header2 = header2.trim()) &&
      !isValidHeaderName(header2)
    ) {
      setHeaders(parseHeaders(header2), valueOrRewrite);
    } else if (utils$1.isHeaders(header2)) {
      for (const [key, value] of header2.entries()) {
        setHeader(value, key, rewrite);
      }
    } else {
      header2 != null && setHeader(valueOrRewrite, header2, rewrite);
    }
    return this;
  }
  get(header2, parser) {
    header2 = normalizeHeader(header2);
    if (header2) {
      const key = utils$1.findKey(this, header2);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils$1.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils$1.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError('parser must be boolean|regexp|function');
      }
    }
  }
  has(header2, matcher) {
    header2 = normalizeHeader(header2);
    if (header2) {
      const key = utils$1.findKey(this, header2);
      return !!(
        key &&
        this[key] !== void 0 &&
        (!matcher || matchHeaderValue(this, this[key], key, matcher))
      );
    }
    return false;
  }
  delete(header2, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils$1.findKey(self2, _header);
        if (
          key &&
          (!matcher || matchHeaderValue(self2, self2[key], key, matcher))
        ) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils$1.isArray(header2)) {
      header2.forEach(deleteHeader);
    } else {
      deleteHeader(header2);
    }
    return deleted;
  }
  clear(matcher) {
    const keys2 = Object.keys(this);
    let i = keys2.length;
    let deleted = false;
    while (i--) {
      const key = keys2[i];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format) {
    const self2 = this;
    const headers = {};
    utils$1.forEach(this, (value, header2) => {
      const key = utils$1.findKey(headers, header2);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header2];
        return;
      }
      const normalized = format
        ? formatHeader(header2)
        : String(header2).trim();
      if (normalized !== header2) {
        delete self2[header2];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils$1.forEach(this, (value, header2) => {
      value != null &&
        value !== false &&
        (obj[header2] =
          asStrings && utils$1.isArray(value) ? value.join(', ') : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON())
      .map(([header2, value]) => header2 + ': ' + value)
      .join('\n');
  }
  get [Symbol.toStringTag]() {
    return 'AxiosHeaders';
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header2) {
    const internals =
      (this[$internals] =
      this[$internals] =
        {
          accessors: {},
        });
    const accessors = internals.accessors;
    const prototype2 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype2, _header);
        accessors[lHeader] = true;
      }
    }
    utils$1.isArray(header2)
      ? header2.forEach(defineAccessor)
      : defineAccessor(header2);
    return this;
  }
};
AxiosHeaders$1.accessor([
  'Content-Type',
  'Content-Length',
  'Accept',
  'Accept-Encoding',
  'User-Agent',
  'Authorization',
]);
utils$1.reduceDescriptors(AxiosHeaders$1.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    },
  };
});
utils$1.freezeMethods(AxiosHeaders$1);
function transformData(fns, response) {
  const config = this || defaults;
  const context = response || config;
  const headers = AxiosHeaders$1.from(context.headers);
  let data = context.data;
  utils$1.forEach(fns, function transform(fn) {
    data = fn.call(
      config,
      data,
      headers.normalize(),
      response ? response.status : void 0
    );
  });
  headers.normalize();
  return data;
}
function isCancel$1(value) {
  return !!(value && value.__CANCEL__);
}
function CanceledError$1(message, config, request) {
  AxiosError$1.call(
    this,
    message == null ? 'canceled' : message,
    AxiosError$1.ERR_CANCELED,
    config,
    request
  );
  this.name = 'CanceledError';
}
utils$1.inherits(CanceledError$1, AxiosError$1, {
  __CANCEL__: true,
});
function settle(resolve, reject, response) {
  const validateStatus2 = response.config.validateStatus;
  if (
    !response.status ||
    !validateStatus2 ||
    validateStatus2(response.status)
  ) {
    resolve(response);
  } else {
    reject(
      new AxiosError$1(
        'Request failed with status code ' + response.status,
        [AxiosError$1.ERR_BAD_REQUEST, AxiosError$1.ERR_BAD_RESPONSE][
          Math.floor(response.status / 100) - 4
        ],
        response.config,
        response.request,
        response
      )
    );
  }
}
function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return (match && match[1]) || '';
}
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;
  min = min !== void 0 ? min : 1e3;
  return function push(chunkLength) {
    const now = Date.now();
    const startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now;
    let i = tail;
    let bytesCount = 0;
    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now - firstSampleTS < min) {
      return;
    }
    const passed = startedAt && now - startedAt;
    return passed ? Math.round((bytesCount * 1e3) / passed) : void 0;
  };
}
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke = (args, now = Date.now()) => {
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn.apply(null, args);
  };
  const throttled = (...args) => {
    const now = Date.now();
    const passed = now - timestamp;
    if (passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke(lastArgs);
  return [throttled, flush];
}
const progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer(50, 250);
  return throttle((e) => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e,
      lengthComputable: total != null,
      [isDownloadStream ? 'download' : 'upload']: true,
    };
    listener(data);
  }, freq);
};
const progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [
    (loaded) =>
      throttled[0]({
        lengthComputable,
        total,
        loaded,
      }),
    throttled[1],
  ];
};
const asyncDecorator =
  (fn) =>
  (...args) =>
    utils$1.asap(() => fn(...args));
const isURLSameOrigin = platform.hasStandardBrowserEnv
  ? /* @__PURE__ */ ((origin2, isMSIE) => (url) => {
      url = new URL(url, platform.origin);
      return (
        origin2.protocol === url.protocol &&
        origin2.host === url.host &&
        (isMSIE || origin2.port === url.port)
      );
    })(
      new URL(platform.origin),
      platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)
    )
  : () => true;
const cookies = platform.hasStandardBrowserEnv
  ? // Standard browser envs support document.cookie
    {
      write(name, value, expires, path, domain, secure) {
        const cookie = [name + '=' + encodeURIComponent(value)];
        utils$1.isNumber(expires) &&
          cookie.push('expires=' + new Date(expires).toGMTString());
        utils$1.isString(path) && cookie.push('path=' + path);
        utils$1.isString(domain) && cookie.push('domain=' + domain);
        secure === true && cookie.push('secure');
        document.cookie = cookie.join('; ');
      },
      read(name) {
        const match = document.cookie.match(
          new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
        );
        return match ? decodeURIComponent(match[3]) : null;
      },
      remove(name) {
        this.write(name, '', Date.now() - 864e5);
      },
    }
  : // Non-standard browser env (web workers, react-native) lack needed support.
    {
      write() {},
      read() {
        return null;
      },
      remove() {},
    };
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}
function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
}
function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}
const headersToObject = (thing) =>
  thing instanceof AxiosHeaders$1 ? { ...thing } : thing;
function mergeConfig$1(config1, config2) {
  config2 = config2 || {};
  const config = {};
  function getMergedValue(target, source, prop, caseless) {
    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {
      return utils$1.merge.call({ caseless }, target, source);
    } else if (utils$1.isPlainObject(source)) {
      return utils$1.merge({}, source);
    } else if (utils$1.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a, b, prop, caseless) {
    if (!utils$1.isUndefined(b)) {
      return getMergedValue(a, b, prop, caseless);
    } else if (!utils$1.isUndefined(a)) {
      return getMergedValue(void 0, a, prop, caseless);
    }
  }
  function valueFromConfig2(a, b) {
    if (!utils$1.isUndefined(b)) {
      return getMergedValue(void 0, b);
    }
  }
  function defaultToConfig2(a, b) {
    if (!utils$1.isUndefined(b)) {
      return getMergedValue(void 0, b);
    } else if (!utils$1.isUndefined(a)) {
      return getMergedValue(void 0, a);
    }
  }
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(void 0, a);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b, prop) =>
      mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true),
  };
  utils$1.forEach(
    Object.keys(Object.assign({}, config1, config2)),
    function computeConfigValue(prop) {
      const merge2 = mergeMap[prop] || mergeDeepProperties;
      const configValue = merge2(config1[prop], config2[prop], prop);
      (utils$1.isUndefined(configValue) && merge2 !== mergeDirectKeys) ||
        (config[prop] = configValue);
    }
  );
  return config;
}
const resolveConfig = (config) => {
  const newConfig = mergeConfig$1({}, config);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } =
    newConfig;
  newConfig.headers = headers = AxiosHeaders$1.from(headers);
  newConfig.url = buildURL(
    buildFullPath(newConfig.baseURL, newConfig.url),
    config.params,
    config.paramsSerializer
  );
  if (auth) {
    headers.set(
      'Authorization',
      'Basic ' +
        btoa(
          (auth.username || '') +
            ':' +
            (auth.password ? unescape(encodeURIComponent(auth.password)) : '')
        )
    );
  }
  let contentType;
  if (utils$1.isFormData(data)) {
    if (
      platform.hasStandardBrowserEnv ||
      platform.hasStandardBrowserWebWorkerEnv
    ) {
      headers.setContentType(void 0);
    } else if ((contentType = headers.getContentType()) !== false) {
      const [type, ...tokens] = contentType
        ? contentType
            .split(';')
            .map((token) => token.trim())
            .filter(Boolean)
        : [];
      headers.setContentType(
        [type || 'multipart/form-data', ...tokens].join('; ')
      );
    }
  }
  if (platform.hasStandardBrowserEnv) {
    withXSRFToken &&
      utils$1.isFunction(withXSRFToken) &&
      (withXSRFToken = withXSRFToken(newConfig));
    if (
      withXSRFToken ||
      (withXSRFToken !== false && isURLSameOrigin(newConfig.url))
    ) {
      const xsrfValue =
        xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};
const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';
const xhrAdapter =
  isXHRAdapterSupported &&
  function (config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      const _config = resolveConfig(config);
      let requestData = _config.data;
      const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();
      let { responseType, onUploadProgress, onDownloadProgress } = _config;
      let onCanceled;
      let uploadThrottled, downloadThrottled;
      let flushUpload, flushDownload;
      function done() {
        flushUpload && flushUpload();
        flushDownload && flushDownload();
        _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
        _config.signal &&
          _config.signal.removeEventListener('abort', onCanceled);
      }
      let request = new XMLHttpRequest();
      request.open(_config.method.toUpperCase(), _config.url, true);
      request.timeout = _config.timeout;
      function onloadend() {
        if (!request) {
          return;
        }
        const responseHeaders = AxiosHeaders$1.from(
          'getAllResponseHeaders' in request && request.getAllResponseHeaders()
        );
        const responseData =
          !responseType || responseType === 'text' || responseType === 'json'
            ? request.responseText
            : request.response;
        const response = {
          data: responseData,
          status: request.status,
          statusText: request.statusText,
          headers: responseHeaders,
          config,
          request,
        };
        settle(
          function _resolve(value) {
            resolve(value);
            done();
          },
          function _reject(err) {
            reject(err);
            done();
          },
          response
        );
        request = null;
      }
      if ('onloadend' in request) {
        request.onloadend = onloadend;
      } else {
        request.onreadystatechange = function handleLoad() {
          if (!request || request.readyState !== 4) {
            return;
          }
          if (
            request.status === 0 &&
            !(request.responseURL && request.responseURL.indexOf('file:') === 0)
          ) {
            return;
          }
          setTimeout(onloadend);
        };
      }
      request.onabort = function handleAbort() {
        if (!request) {
          return;
        }
        reject(
          new AxiosError$1(
            'Request aborted',
            AxiosError$1.ECONNABORTED,
            config,
            request
          )
        );
        request = null;
      };
      request.onerror = function handleError() {
        reject(
          new AxiosError$1(
            'Network Error',
            AxiosError$1.ERR_NETWORK,
            config,
            request
          )
        );
        request = null;
      };
      request.ontimeout = function handleTimeout() {
        let timeoutErrorMessage = _config.timeout
          ? 'timeout of ' + _config.timeout + 'ms exceeded'
          : 'timeout exceeded';
        const transitional2 = _config.transitional || transitionalDefaults;
        if (_config.timeoutErrorMessage) {
          timeoutErrorMessage = _config.timeoutErrorMessage;
        }
        reject(
          new AxiosError$1(
            timeoutErrorMessage,
            transitional2.clarifyTimeoutError
              ? AxiosError$1.ETIMEDOUT
              : AxiosError$1.ECONNABORTED,
            config,
            request
          )
        );
        request = null;
      };
      requestData === void 0 && requestHeaders.setContentType(null);
      if ('setRequestHeader' in request) {
        utils$1.forEach(
          requestHeaders.toJSON(),
          function setRequestHeader(val, key) {
            request.setRequestHeader(key, val);
          }
        );
      }
      if (!utils$1.isUndefined(_config.withCredentials)) {
        request.withCredentials = !!_config.withCredentials;
      }
      if (responseType && responseType !== 'json') {
        request.responseType = _config.responseType;
      }
      if (onDownloadProgress) {
        [downloadThrottled, flushDownload] = progressEventReducer(
          onDownloadProgress,
          true
        );
        request.addEventListener('progress', downloadThrottled);
      }
      if (onUploadProgress && request.upload) {
        [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
        request.upload.addEventListener('progress', uploadThrottled);
        request.upload.addEventListener('loadend', flushUpload);
      }
      if (_config.cancelToken || _config.signal) {
        onCanceled = (cancel) => {
          if (!request) {
            return;
          }
          reject(
            !cancel || cancel.type
              ? new CanceledError$1(null, config, request)
              : cancel
          );
          request.abort();
          request = null;
        };
        _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
        if (_config.signal) {
          _config.signal.aborted
            ? onCanceled()
            : _config.signal.addEventListener('abort', onCanceled);
        }
      }
      const protocol = parseProtocol(_config.url);
      if (protocol && platform.protocols.indexOf(protocol) === -1) {
        reject(
          new AxiosError$1(
            'Unsupported protocol ' + protocol + ':',
            AxiosError$1.ERR_BAD_REQUEST,
            config
          )
        );
        return;
      }
      request.send(requestData || null);
    });
  };
const composeSignals = (signals, timeout) => {
  const { length } = (signals = signals ? signals.filter(Boolean) : []);
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function (reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(
          err instanceof AxiosError$1
            ? err
            : new CanceledError$1(err instanceof Error ? err.message : err)
        );
      }
    };
    let timer =
      timeout &&
      setTimeout(() => {
        timer = null;
        onabort(
          new AxiosError$1(
            `timeout ${timeout} of ms exceeded`,
            AxiosError$1.ETIMEDOUT
          )
        );
      }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe
            ? signal2.unsubscribe(onabort)
            : signal2.removeEventListener('abort', onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener('abort', onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils$1.asap(unsubscribe);
    return signal;
  }
};
const streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;
  if (len < chunkSize) {
    yield chunk;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
};
const readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
};
const readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }
  const reader = stream.getReader();
  try {
    for (;;) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
const trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator = readBytes(stream, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  };
  return new ReadableStream(
    {
      async pull(controller) {
        try {
          const { done: done2, value } = await iterator.next();
          if (done2) {
            _onFinish();
            controller.close();
            return;
          }
          let len = value.byteLength;
          if (onProgress) {
            let loadedBytes = (bytes += len);
            onProgress(loadedBytes);
          }
          controller.enqueue(new Uint8Array(value));
        } catch (err) {
          _onFinish(err);
          throw err;
        }
      },
      cancel(reason) {
        _onFinish(reason);
        return iterator.return();
      },
    },
    {
      highWaterMark: 2,
    }
  );
};
const isFetchSupported =
  typeof fetch === 'function' &&
  typeof Request === 'function' &&
  typeof Response === 'function';
const isReadableStreamSupported =
  isFetchSupported && typeof ReadableStream === 'function';
const encodeText =
  isFetchSupported &&
  (typeof TextEncoder === 'function'
    ? /* @__PURE__ */ (
        (encoder) => (str) =>
          encoder.encode(str)
      )(new TextEncoder())
    : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
const test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e) {
    return false;
  }
};
const supportsRequestStream =
  isReadableStreamSupported &&
  test(() => {
    let duplexAccessed = false;
    const hasContentType = new Request(platform.origin, {
      body: new ReadableStream(),
      method: 'POST',
      get duplex() {
        duplexAccessed = true;
        return 'half';
      },
    }).headers.has('Content-Type');
    return duplexAccessed && !hasContentType;
  });
const DEFAULT_CHUNK_SIZE = 64 * 1024;
const supportsResponseStream =
  isReadableStreamSupported &&
  test(() => utils$1.isReadableStream(new Response('').body));
const resolvers = {
  stream: supportsResponseStream && ((res) => res.body),
};
isFetchSupported &&
  ((res) => {
    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach((type) => {
      !resolvers[type] &&
        (resolvers[type] = utils$1.isFunction(res[type])
          ? (res2) => res2[type]()
          : (_, config) => {
              throw new AxiosError$1(
                `Response type '${type}' is not supported`,
                AxiosError$1.ERR_NOT_SUPPORT,
                config
              );
            });
    });
  })(new Response());
const getBodyLength = async (body) => {
  if (body == null) {
    return 0;
  }
  if (utils$1.isBlob(body)) {
    return body.size;
  }
  if (utils$1.isSpecCompliantForm(body)) {
    const _request = new Request(platform.origin, {
      method: 'POST',
      body,
    });
    return (await _request.arrayBuffer()).byteLength;
  }
  if (utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {
    return body.byteLength;
  }
  if (utils$1.isURLSearchParams(body)) {
    body = body + '';
  }
  if (utils$1.isString(body)) {
    return (await encodeText(body)).byteLength;
  }
};
const resolveBodyLength = async (headers, body) => {
  const length = utils$1.toFiniteNumber(headers.getContentLength());
  return length == null ? getBodyLength(body) : length;
};
const fetchAdapter =
  isFetchSupported &&
  (async (config) => {
    let {
      url,
      method,
      data,
      signal,
      cancelToken,
      timeout,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = 'same-origin',
      fetchOptions,
    } = resolveConfig(config);
    responseType = responseType ? (responseType + '').toLowerCase() : 'text';
    let composedSignal = composeSignals(
      [signal, cancelToken && cancelToken.toAbortSignal()],
      timeout
    );
    let request;
    const unsubscribe =
      composedSignal &&
      composedSignal.unsubscribe &&
      (() => {
        composedSignal.unsubscribe();
      });
    let requestContentLength;
    try {
      if (
        onUploadProgress &&
        supportsRequestStream &&
        method !== 'get' &&
        method !== 'head' &&
        (requestContentLength = await resolveBodyLength(headers, data)) !== 0
      ) {
        let _request = new Request(url, {
          method: 'POST',
          body: data,
          duplex: 'half',
        });
        let contentTypeHeader;
        if (
          utils$1.isFormData(data) &&
          (contentTypeHeader = _request.headers.get('content-type'))
        ) {
          headers.setContentType(contentTypeHeader);
        }
        if (_request.body) {
          const [onProgress, flush] = progressEventDecorator(
            requestContentLength,
            progressEventReducer(asyncDecorator(onUploadProgress))
          );
          data = trackStream(
            _request.body,
            DEFAULT_CHUNK_SIZE,
            onProgress,
            flush
          );
        }
      }
      if (!utils$1.isString(withCredentials)) {
        withCredentials = withCredentials ? 'include' : 'omit';
      }
      const isCredentialsSupported = 'credentials' in Request.prototype;
      request = new Request(url, {
        ...fetchOptions,
        signal: composedSignal,
        method: method.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data,
        duplex: 'half',
        credentials: isCredentialsSupported ? withCredentials : void 0,
      });
      let response = await fetch(request);
      const isStreamResponse =
        supportsResponseStream &&
        (responseType === 'stream' || responseType === 'response');
      if (
        supportsResponseStream &&
        (onDownloadProgress || (isStreamResponse && unsubscribe))
      ) {
        const options = {};
        ['status', 'statusText', 'headers'].forEach((prop) => {
          options[prop] = response[prop];
        });
        const responseContentLength = utils$1.toFiniteNumber(
          response.headers.get('content-length')
        );
        const [onProgress, flush] =
          (onDownloadProgress &&
            progressEventDecorator(
              responseContentLength,
              progressEventReducer(asyncDecorator(onDownloadProgress), true)
            )) ||
          [];
        response = new Response(
          trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
            flush && flush();
            unsubscribe && unsubscribe();
          }),
          options
        );
      }
      responseType = responseType || 'text';
      let responseData = await resolvers[
        utils$1.findKey(resolvers, responseType) || 'text'
      ](response, config);
      !isStreamResponse && unsubscribe && unsubscribe();
      return await new Promise((resolve, reject) => {
        settle(resolve, reject, {
          data: responseData,
          headers: AxiosHeaders$1.from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request,
        });
      });
    } catch (err) {
      unsubscribe && unsubscribe();
      if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {
        throw Object.assign(
          new AxiosError$1(
            'Network Error',
            AxiosError$1.ERR_NETWORK,
            config,
            request
          ),
          {
            cause: err.cause || err,
          }
        );
      }
      throw AxiosError$1.from(err, err && err.code, config, request);
    }
  });
const knownAdapters = {
  http: httpAdapter,
  xhr: xhrAdapter,
  fetch: fetchAdapter,
};
utils$1.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, 'name', { value });
    } catch (e) {}
    Object.defineProperty(fn, 'adapterName', { value });
  }
});
const renderReason = (reason) => `- ${reason}`;
const isResolvedHandle = (adapter) =>
  utils$1.isFunction(adapter) || adapter === null || adapter === false;
const adapters = {
  getAdapter: (adapters2) => {
    adapters2 = utils$1.isArray(adapters2) ? adapters2 : [adapters2];
    const { length } = adapters2;
    let nameOrAdapter;
    let adapter;
    const rejectedReasons = {};
    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters2[i];
      let id2;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id2 = String(nameOrAdapter)).toLowerCase()];
        if (adapter === void 0) {
          throw new AxiosError$1(`Unknown adapter '${id2}'`);
        }
      }
      if (adapter) {
        break;
      }
      rejectedReasons[id2 || '#' + i] = adapter;
    }
    if (!adapter) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id2, state]) =>
          `adapter ${id2} ` +
          (state === false
            ? 'is not supported by the environment'
            : 'is not available in the build')
      );
      let s = length
        ? reasons.length > 1
          ? 'since :\n' + reasons.map(renderReason).join('\n')
          : ' ' + renderReason(reasons[0])
        : 'as no adapter specified';
      throw new AxiosError$1(
        `There is no suitable adapter to dispatch the request ` + s,
        'ERR_NOT_SUPPORT'
      );
    }
    return adapter;
  },
  adapters: knownAdapters,
};
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new CanceledError$1(null, config);
  }
}
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = AxiosHeaders$1.from(config.headers);
  config.data = transformData.call(config, config.transformRequest);
  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
    config.headers.setContentType('application/x-www-form-urlencoded', false);
  }
  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);
  return adapter(config).then(
    function onAdapterResolution(response) {
      throwIfCancellationRequested(config);
      response.data = transformData.call(
        config,
        config.transformResponse,
        response
      );
      response.headers = AxiosHeaders$1.from(response.headers);
      return response;
    },
    function onAdapterRejection(reason) {
      if (!isCancel$1(reason)) {
        throwIfCancellationRequested(config);
        if (reason && reason.response) {
          reason.response.data = transformData.call(
            config,
            config.transformResponse,
            reason.response
          );
          reason.response.headers = AxiosHeaders$1.from(
            reason.response.headers
          );
        }
      }
      return Promise.reject(reason);
    }
  );
}
const VERSION$1 = '1.7.9';
const validators$1 = {};
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(
  (type, i) => {
    validators$1[type] = function validator2(thing) {
      return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
    };
  }
);
const deprecatedWarnings = {};
validators$1.transitional = function transitional(
  validator2,
  version,
  message
) {
  function formatMessage(opt, desc) {
    return (
      '[Axios v' +
      VERSION$1 +
      "] Transitional option '" +
      opt +
      "'" +
      desc +
      (message ? '. ' + message : '')
    );
  }
  return (value, opt, opts) => {
    if (validator2 === false) {
      throw new AxiosError$1(
        formatMessage(
          opt,
          ' has been removed' + (version ? ' in ' + version : '')
        ),
        AxiosError$1.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' +
            version +
            ' and will be removed in the near future'
        )
      );
    }
    return validator2 ? validator2(value, opt, opts) : true;
  };
};
validators$1.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new AxiosError$1(
      'options must be an object',
      AxiosError$1.ERR_BAD_OPTION_VALUE
    );
  }
  const keys2 = Object.keys(options);
  let i = keys2.length;
  while (i-- > 0) {
    const opt = keys2[i];
    const validator2 = schema[opt];
    if (validator2) {
      const value = options[opt];
      const result = value === void 0 || validator2(value, opt, options);
      if (result !== true) {
        throw new AxiosError$1(
          'option ' + opt + ' must be ' + result,
          AxiosError$1.ERR_BAD_OPTION_VALUE
        );
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError$1(
        'Unknown option ' + opt,
        AxiosError$1.ERR_BAD_OPTION
      );
    }
  }
}
const validator = {
  assertOptions,
  validators: validators$1,
};
const validators = validator.validators;
let Axios$1 = class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager(),
      response: new InterceptorManager(),
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};
        Error.captureStackTrace
          ? Error.captureStackTrace(dummy)
          : (dummy = new Error());
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, '') : '';
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (
            stack &&
            !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ''))
          ) {
            err.stack += '\n' + stack;
          }
        } catch (e) {}
      }
      throw err;
    }
  }
  _request(configOrUrl, config) {
    if (typeof configOrUrl === 'string') {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }
    config = mergeConfig$1(this.defaults, config);
    const { transitional: transitional2, paramsSerializer, headers } = config;
    if (transitional2 !== void 0) {
      validator.assertOptions(
        transitional2,
        {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean),
        },
        false
      );
    }
    if (paramsSerializer != null) {
      if (utils$1.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer,
        };
      } else {
        validator.assertOptions(
          paramsSerializer,
          {
            encode: validators.function,
            serialize: validators.function,
          },
          true
        );
      }
    }
    validator.assertOptions(
      config,
      {
        baseUrl: validators.spelling('baseURL'),
        withXsrfToken: validators.spelling('withXSRFToken'),
      },
      true
    );
    config.method = (
      config.method ||
      this.defaults.method ||
      'get'
    ).toLowerCase();
    let contextHeaders =
      headers && utils$1.merge(headers.common, headers[config.method]);
    headers &&
      utils$1.forEach(
        ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
        (method) => {
          delete headers[method];
        }
      );
    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(
      function unshiftRequestInterceptors(interceptor) {
        if (
          typeof interceptor.runWhen === 'function' &&
          interceptor.runWhen(config) === false
        ) {
          return;
        }
        synchronousRequestInterceptors =
          synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(
          interceptor.fulfilled,
          interceptor.rejected
        );
      }
    );
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(
      function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(
          interceptor.fulfilled,
          interceptor.rejected
        );
      }
    );
    let promise;
    let i = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), void 0];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;
      promise = Promise.resolve(config);
      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    i = 0;
    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i = 0;
    len = responseInterceptorChain.length;
    while (i < len) {
      promise = promise.then(
        responseInterceptorChain[i++],
        responseInterceptorChain[i++]
      );
    }
    return promise;
  }
  getUri(config) {
    config = mergeConfig$1(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
};
utils$1.forEach(
  ['delete', 'get', 'head', 'options'],
  function forEachMethodNoData(method) {
    Axios$1.prototype[method] = function (url, config) {
      return this.request(
        mergeConfig$1(config || {}, {
          method,
          url,
          data: (config || {}).data,
        })
      );
    };
  }
);
utils$1.forEach(
  ['post', 'put', 'patch'],
  function forEachMethodWithData(method) {
    function generateHTTPMethod(isForm) {
      return function httpMethod(url, data, config) {
        return this.request(
          mergeConfig$1(config || {}, {
            method,
            headers: isForm
              ? {
                  'Content-Type': 'multipart/form-data',
                }
              : {},
            url,
            data,
          })
        );
      };
    }
    Axios$1.prototype[method] = generateHTTPMethod();
    Axios$1.prototype[method + 'Form'] = generateHTTPMethod(true);
  }
);
let CancelToken$1 = class CancelToken {
  constructor(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token = this;
    this.promise.then((cancel) => {
      if (!token._listeners) return;
      let i = token._listeners.length;
      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config, request) {
      if (token.reason) {
        return;
      }
      token.reason = new CanceledError$1(message, config, request);
      resolvePromise(token.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel,
    };
  }
};
function spread$1(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}
function isAxiosError$1(payload) {
  return utils$1.isObject(payload) && payload.isAxiosError === true;
}
const HttpStatusCode$1 = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};
Object.entries(HttpStatusCode$1).forEach(([key, value]) => {
  HttpStatusCode$1[value] = key;
});
function createInstance(defaultConfig) {
  const context = new Axios$1(defaultConfig);
  const instance = bind(Axios$1.prototype.request, context);
  utils$1.extend(instance, Axios$1.prototype, context, { allOwnKeys: true });
  utils$1.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig$1(defaultConfig, instanceConfig));
  };
  return instance;
}
const axios = createInstance(defaults);
axios.Axios = Axios$1;
axios.CanceledError = CanceledError$1;
axios.CancelToken = CancelToken$1;
axios.isCancel = isCancel$1;
axios.VERSION = VERSION$1;
axios.toFormData = toFormData$1;
axios.AxiosError = AxiosError$1;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread$1;
axios.isAxiosError = isAxiosError$1;
axios.mergeConfig = mergeConfig$1;
axios.AxiosHeaders = AxiosHeaders$1;
axios.formToJSON = (thing) =>
  formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters.getAdapter;
axios.HttpStatusCode = HttpStatusCode$1;
axios.default = axios;
const {
  Axios: Axios2,
  AxiosError,
  CanceledError,
  isCancel,
  CancelToken: CancelToken2,
  VERSION,
  all: all2,
  Cancel: Cancel$1,
  isAxiosError,
  spread,
  toFormData,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode,
  formToJSON,
  getAdapter,
  mergeConfig,
} = axios;
class Storage {
  static isWindowAvailable() {
    return typeof window !== 'undefined';
  }
  static getItem(key) {
    if (this.isWindowAvailable()) {
      return localStorage.getItem(key);
    }
    return null;
  }
  static setItem(key, value) {
    if (!this.isWindowAvailable()) return;
    localStorage.setItem(key, value);
  }
  static delItem(key) {
    if (!this.isWindowAvailable()) return;
    localStorage.removeItem(key);
  }
  static clear() {
    if (this.isWindowAvailable()) localStorage.clear();
  }
}
const TOKEN = {
  ACCESS: 'accessToken',
  REFRESH: 'refreshToken',
};
const authorization = () => ({
  headers: {
    accessToken: Storage.getItem(TOKEN.ACCESS),
  },
});
const refreshToken = () => ({
  token: Storage.getItem(TOKEN.REFRESH),
});
const customAxios = axios.create({
  baseURL: 'http://211.112.175.88:9999',
  timeout: 1e4,
});
const refresh = async () => {
  const { data } = await customAxios.post('/auth/reissue', refreshToken());
  Storage.setItem(TOKEN.ACCESS, data.accessToken);
  return data.accessToken;
};
customAxios.interceptors.response.use(
  (response) => response,
  async (error) => {
    const request = error.config;
    request.retryCount = request.retryCount || 0 + 1;
    if (request.retryCount > 3) {
      return Promise.reject(error);
    }
    if (!request.sent) {
      request.sent = true;
      request.headers.Authorization = await refresh();
      return customAxios(request);
    }
    return Promise.reject(error);
  }
);
const getLoginLink = async () => {
  const { data } = await customAxios.get('/auth', authorization());
  return data;
};
const postLogin = async (code) => {
  const { data } = await customAxios.post('/auth/signIn', { token: code });
  return data;
};
const authKeys = {
  loginLink: 'auth.query.loginLink',
};
const authQuery = {
  loginLink: () =>
    queryOptions({
      queryKey: [authKeys.loginLink],
      queryFn: getLoginLink,
    }),
};
const Login = () => {
  const queryClient = useQueryClient();
  const handleLogin = async () => {
    try {
      const url = await queryClient.fetchQuery(authQuery.loginLink());
      if (url) {
        window.location.href = url;
      } else {
        console.error('로그인 링크를 찾을 수 없습니다.');
      }
    } catch (error) {
      console.error('에러 발생:', error);
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('main', {
    className: container$7,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingAsterisk,
        className: `${shape$1} ${Asterisk$1}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingCube,
        className: `${shape$1} ${Cube$1}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingSphere,
        className: `${shape$1} ${Sphere$1}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingMobiusStrip,
        className: `${shape$1} ${MobiusStrip$1}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: center$1,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(AppTitle, {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
            className: explain,
            children: '오늘의 작은 계획이 내일의 큰 꿈으로,',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: loginButton,
            onClick: handleLogin,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Google, {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                className: loginText$1,
                children: '구글 로그인',
              }),
            ],
          }),
        ],
      }),
    ],
  });
};
var MiniCalendarContainer = 'style_MiniCalendarContainer__1jkby2l0';
var MiniCalendarHeader = 'style_MiniCalendarHeader__1jkby2l1';
var MiniCalendarTitle = 'style_MiniCalendarTitle__1jkby2l2';
var MiniCalendarGrid = 'style_MiniCalendarGrid__1jkby2l3';
var MiniCalendarWeek = 'style_MiniCalendarWeek__1jkby2l4';
var MiniCalendarDay = 'style_MiniCalendarDay__1jkby2l5';
var MiniCalendarSelectedDay = 'style_MiniCalendarSelectedDay__1jkby2l6';
var MiniCalendarEmptyDay = 'style_MiniCalendarEmptyDay__1jkby2l7';
const WEEKDAYS = ['일', '월', '화', '수', '목', '금', '토'];
const MiniCalendar = () => {
  const [currentDate, setCurrentDate] = reactExports.useState(
    /* @__PURE__ */ new Date()
  );
  const [selectedDate, setSelectedDate] = reactExports.useState(
    /* @__PURE__ */ new Date().getDate()
  );
  const { startWeek, daysInMonth, prevEndOfMonth } =
    reactExports.useMemo(() => {
      const year = currentDate.getFullYear();
      const month = currentDate.getMonth();
      const startOfMonth = new Date(year, month, 1);
      const endOfMonth = new Date(year, month + 1, 0);
      const prevEndOfMonth2 = new Date(year, month, 0);
      return {
        startWeek: startOfMonth.getDay(),
        daysInMonth: endOfMonth.getDate(),
        prevEndOfMonth: prevEndOfMonth2.getDate(),
      };
    }, [currentDate]);
  const handlePrevMonth = () => {
    setCurrentDate(
      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)
    );
    setSelectedDate(null);
  };
  const handleNextMonth = () => {
    setCurrentDate(
      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)
    );
    setSelectedDate(null);
  };
  const handleDateClick = (day) => {
    setSelectedDate(day);
  };
  const renderDays = reactExports.useMemo(() => {
    const days = [];
    for (let i = startWeek - 1; i >= 0; i--) {
      const isSunday = (startWeek - i - 1) % 7 === 0;
      days.push(
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          'div',
          {
            className: MiniCalendarEmptyDay,
            style: {
              color:
                isSunday && selectedDate !== prevEndOfMonth - i
                  ? 'red'
                  : void 0,
            },
            children: prevEndOfMonth - i,
          },
          `prev-${i}`
        )
      );
    }
    for (let i = 1; i <= daysInMonth; i++) {
      const isSunday = (startWeek + i - 1) % 7 === 0;
      days.push(
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          'div',
          {
            className: `${MiniCalendarDay} ${selectedDate === i ? MiniCalendarSelectedDay : ''}`,
            style: {
              color: isSunday && selectedDate !== i ? 'red' : void 0,
            },
            onClick: () => handleDateClick(i),
            children: i,
          },
          `day-${i}`
        )
      );
    }
    const remainingDays = 7 - ((startWeek + daysInMonth) % 7 || 7);
    for (let i = 1; i <= remainingDays; i++) {
      const isSunday = (startWeek + daysInMonth + i - 1) % 7 === 0;
      days.push(
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          'div',
          {
            className: MiniCalendarEmptyDay,
            style: { color: isSunday && selectedDate !== i ? 'red' : void 0 },
            children: i,
          },
          `next-${i}`
        )
      );
    }
    return days;
  }, [startWeek, daysInMonth, prevEndOfMonth, selectedDate]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: MiniCalendarContainer,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: MiniCalendarHeader,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
            onClick: handlePrevMonth,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow$1, {
              direction: 'left',
            }),
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: MiniCalendarTitle,
            children: [
              currentDate.getFullYear(),
              '년 ',
              currentDate.getMonth() + 1,
              '월',
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
            onClick: handleNextMonth,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow$1, {
              direction: 'right',
            }),
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: MiniCalendarGrid,
        children: [
          WEEKDAYS.map((day, index) =>
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              'div',
              {
                className: MiniCalendarWeek,
                style: { color: index === 0 ? 'red' : void 0 },
                children: day,
              },
              `week-${index}`
            )
          ),
          renderDays,
        ],
      }),
    ],
  });
};
function toPrimitive(t2, r2) {
  if ('object' != typeof t2 || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r2);
    if ('object' != typeof i) return i;
    throw new TypeError('@@toPrimitive must return a primitive value.');
  }
  return ('string' === r2 ? String : Number)(t2);
}
function toPropertyKey(t2) {
  var i = toPrimitive(t2, 'string');
  return 'symbol' == typeof i ? i : String(i);
}
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true,
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(e, r2) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r2 &&
      (o = o.filter(function (r3) {
        return Object.getOwnPropertyDescriptor(e, r3).enumerable;
      })),
      t2.push.apply(t2, o);
  }
  return t2;
}
function _objectSpread2(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2
      ? ownKeys(Object(t2), true).forEach(function (r3) {
          _defineProperty(e, r3, t2[r3]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2))
        : ownKeys(Object(t2)).forEach(function (r3) {
            Object.defineProperty(
              e,
              r3,
              Object.getOwnPropertyDescriptor(t2, r3)
            );
          });
  }
  return e;
}
function mapValues(input2, fn) {
  var result = {};
  for (var _key in input2) {
    result[_key] = fn(input2[_key], _key);
  }
  return result;
}
var shouldApplyCompound = (compoundCheck, selections, defaultVariants) => {
  for (var key of Object.keys(compoundCheck)) {
    var _selections$key;
    if (
      compoundCheck[key] !==
      ((_selections$key = selections[key]) !== null &&
      _selections$key !== void 0
        ? _selections$key
        : defaultVariants[key])
    ) {
      return false;
    }
  }
  return true;
};
var createRuntimeFn = (config) => {
  var runtimeFn = (options) => {
    var className = config.defaultClassName;
    var selections = _objectSpread2(
      _objectSpread2({}, config.defaultVariants),
      options
    );
    for (var variantName in selections) {
      var _selections$variantNa;
      var variantSelection =
        (_selections$variantNa = selections[variantName]) !== null &&
        _selections$variantNa !== void 0
          ? _selections$variantNa
          : config.defaultVariants[variantName];
      if (variantSelection != null) {
        var selection = variantSelection;
        if (typeof selection === 'boolean') {
          selection = selection === true ? 'true' : 'false';
        }
        var selectionClassName =
          // @ts-expect-error
          config.variantClassNames[variantName][selection];
        if (selectionClassName) {
          className += ' ' + selectionClassName;
        }
      }
    }
    for (var [compoundCheck, compoundClassName] of config.compoundVariants) {
      if (
        shouldApplyCompound(compoundCheck, selections, config.defaultVariants)
      ) {
        className += ' ' + compoundClassName;
      }
    }
    return className;
  };
  runtimeFn.variants = () => Object.keys(config.variantClassNames);
  runtimeFn.classNames = {
    get base() {
      return config.defaultClassName.split(' ')[0];
    },
    get variants() {
      return mapValues(config.variantClassNames, (classNames) =>
        mapValues(classNames, (className) => className.split(' ')[0])
      );
    },
  };
  return runtimeFn;
};
var DisplayContainer = 'style_DisplayContainer__sx0ef0';
var DisplayObject = 'style_DisplayObject__sx0ef1';
var DisplayTitle = 'style_DisplayTitle__sx0ef2';
var DisplayBtnLayout = createRuntimeFn({
  defaultClassName: 'style_DisplayBtnLayout__sx0ef3',
  variantClassNames: {
    isActive: { true: 'style_DisplayBtnLayout_isActive_true__sx0ef4' },
  },
  defaultVariants: {},
  compoundVariants: [],
});
var DisplayBtnObject = 'style_DisplayBtnObject__sx0ef5';
const Display = () => {
  const [scheduleSelected, setScheduleSelected] = reactExports.useState(false);
  const [todoSelected, setTodoSelected] = reactExports.useState(false);
  const toggleScheduleSelected = () => {
    setScheduleSelected((prevSelected) => !prevSelected);
  };
  const toggleTodoSelected = () => {
    setTodoSelected((prevSelected) => !prevSelected);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: DisplayContainer,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: DisplayObject,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: DisplayTitle,
            children: '일정 표시',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: DisplayBtnLayout({ isActive: scheduleSelected }),
            onClick: toggleScheduleSelected,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
              className: DisplayBtnObject,
            }),
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: DisplayObject,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: DisplayTitle,
            children: '할 일 표시',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: DisplayBtnLayout({ isActive: todoSelected }),
            onClick: toggleTodoSelected,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
              className: DisplayBtnObject,
            }),
          }),
        ],
      }),
    ],
  });
};
const BtnToDoNormal = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '20',
    height: '21',
    viewBox: '0 0 20 21',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('circle', {
      cx: '10',
      cy: '10.5',
      r: '9.5',
      fill: 'white',
      stroke: '#D8D8D8',
    }),
  });
};
const BtnToDoChecked = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('svg', {
    width: '20',
    height: '21',
    viewBox: '0 0 20 21',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('circle', {
        cx: '10',
        cy: '10.5',
        r: '10',
        fill: '#2E5EFC',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        'fill-rule': 'evenodd',
        'clip-rule': 'evenodd',
        d: 'M14.6484 6.12604C15.0111 6.3558 15.1092 6.82145 14.8673 7.16609L9.60421 14.666C9.47301 14.853 9.2605 14.9742 9.02513 14.9963C8.78976 15.0185 8.55634 14.9392 8.3891 14.7803L5.23123 11.7804C4.92292 11.4875 4.92292 11.0126 5.23123 10.7197C5.53954 10.4268 6.0394 10.4268 6.3477 10.7197L8.82463 13.0728L13.5536 6.33405C13.7954 5.98941 14.2856 5.89628 14.6484 6.12604Z',
        fill: 'white',
      }),
    ],
  });
};
var ToDoListContainer = 'style_ToDoListContainer__1du7col0';
var ToDoListHeader = 'style_ToDoListHeader__1du7col1';
var ToDoListTitle = 'style_ToDoListTitle__1du7col2';
var ToDoListSetDate = 'style_ToDoListSetDate__1du7col3';
var ToDoListDateTitle = 'style_ToDoListDateTitle__1du7col4';
var ToDoListMain = 'style_ToDoListMain__1du7col5';
var ToDoListItem = 'style_ToDoListItem__1du7col6';
var ToDoListItemText = 'style_ToDoListItemText__1du7col7';
const ToDoList = () => {
  const [todoItems, setTodoItems] = reactExports.useState([
    { id: 1, text: '미래랑 산책가기', checked: false },
    { id: 2, text: '하니 산책시키기', checked: true },
    { id: 3, text: '베이스 치기', checked: false },
  ]);
  const handleToggle = (id2) => {
    setTodoItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id2 ? { ...item, checked: !item.checked } : item
      )
    );
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: ToDoListContainer,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: ToDoListHeader,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: ToDoListTitle,
            children: '해야할 것',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: ToDoListSetDate,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow$1, {
                direction: 'left',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: ToDoListDateTitle,
                children: '2025.01.07',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow$1, {
                direction: 'right',
              }),
            ],
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
        className: ToDoListMain,
        children: todoItems.map((item) =>
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            'div',
            {
              className: ToDoListItem,
              onClick: () => handleToggle(item.id),
              children: [
                item.checked
                  ? /* @__PURE__ */ jsxRuntimeExports.jsx(BtnToDoChecked, {})
                  : /* @__PURE__ */ jsxRuntimeExports.jsx(BtnToDoNormal, {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx('span', {
                  className: ToDoListItemText,
                  children: item.text,
                }),
              ],
            },
            item.id
          )
        ),
      }),
    ],
  });
};
var CategoryContainer = 'style_CategoryContainer__hsk9xr0';
var CategoryHeader = 'style_CategoryHeader__hsk9xr1';
var CategoryTitle = 'style_CategoryTitle__hsk9xr2';
var CategoryPlusBtn = 'style_CategoryPlusBtn__hsk9xr3';
var CategoryItemContainer = 'style_CategoryItemContainer__hsk9xr4';
var CategoryItem = 'style_CategoryItem__hsk9xr5';
var CategoryItemTitle = 'style_CategoryItemTitle__hsk9xr6';
var BtnCategoryItemStatic = 'style_BtnCategoryItemStatic__hsk9xr7';
const BtnCategoryPlus = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '25',
    viewBox: '0 0 24 25',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    style: {},
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      'fill-rule': 'evenodd',
      'clip-rule': 'evenodd',
      d: 'M12 4.25C12.4142 4.25 12.75 4.58579 12.75 5V11.75H19.5C19.9142 11.75 20.25 12.0858 20.25 12.5C20.25 12.9142 19.9142 13.25 19.5 13.25H12.75V20C12.75 20.4142 12.4142 20.75 12 20.75C11.5858 20.75 11.25 20.4142 11.25 20V13.25H4.5C4.08579 13.25 3.75 12.9142 3.75 12.5C3.75 12.0858 4.08579 11.75 4.5 11.75H11.25V5C11.25 4.58579 11.5858 4.25 12 4.25Z',
      fill: '#5A5A5A',
    }),
  });
};
var __default__ = {
  blue: { 500: 'var(--blue-500__1v69wpc5)' },
  gray: { 50: 'var(--gray-50__1v69wpca)' },
  white: 'var(--white__1v69wpcm)',
};
const BtnCategoryItem = ({ initialBgColor = '#587EFD' }) => {
  const [isClicked, setIsClicked] = reactExports.useState(false);
  const handleClick = () => {
    setIsClicked(!isClicked);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '25',
    viewBox: '0 0 24 25',
    fill: 'none',
    onClick: handleClick,
    style: { cursor: 'pointer' },
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('rect', {
        x: '0.5',
        y: '1',
        width: '23',
        height: '23',
        rx: '3.5',
        fill: isClicked ? __default__.gray[50] : initialBgColor,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('rect', {
        x: '0.5',
        y: '1',
        width: '23',
        height: '23',
        rx: '3.5',
        stroke: __default__.gray[50],
      }),
      !isClicked &&
        /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
          fillRule: 'evenodd',
          clipRule: 'evenodd',
          d: 'M16.6484 7.62604C17.0111 7.8558 17.1092 8.32145 16.8673 8.66609L11.6042 16.166C11.473 16.353 11.2605 16.4742 11.0251 16.4963C10.7898 16.5185 10.5563 16.4392 10.3891 16.2803L7.23123 13.2804C6.92292 12.9875 6.92292 12.5126 7.23123 12.2197C7.53954 11.9268 8.0394 11.9268 8.3477 12.2197L10.8246 14.5728L15.5536 7.83405C15.7954 7.48941 16.2856 7.39628 16.6484 7.62604Z',
          fill: 'white',
        }),
    ],
  });
};
const Category = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: CategoryContainer,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: CategoryHeader,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: CategoryTitle,
            children: '카테고리',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: CategoryPlusBtn,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              BtnCategoryPlus,
              {}
            ),
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: CategoryItemContainer,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: CategoryItem,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(BtnCategoryItem, {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: CategoryItemTitle,
                children: '나의 일정',
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: CategoryItem,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(BtnCategoryItem, {
                initialBgColor: '#15A665',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: CategoryItemTitle,
                children: '게임',
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: CategoryItem,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(BtnCategoryItem, {
                initialBgColor: '#F4B224',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: CategoryItemTitle,
                children: '카테고리',
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: CategoryItem,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
                className: BtnCategoryItemStatic,
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: CategoryItemTitle,
                children: '대한민국 공휴일',
              }),
            ],
          }),
        ],
      }),
    ],
  });
};
var container$6 = 'style_container__10pysng0';
const SideBar = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('aside', {
    className: container$6,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(MiniCalendar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Display, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(ToDoList, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Category, {}),
    ],
  });
};
const Home = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('main', {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(SideBar, {}),
  });
};
var timeInputContainer = 'style_timeInputContainer__7lwpa20';
var timeInput = 'style_timeInput__7lwpa21';
const TimePicker = ({ time, onChange }) => {
  const inputRefs = [
    reactExports.useRef(null),
    reactExports.useRef(null),
    reactExports.useRef(null),
    reactExports.useRef(null),
  ];
  const handleTimeChange = (value, index) => {
    const newValue = value.slice(-1);
    const newTime = [...time];
    if (index === 0 && parseInt(newValue) > 2) return;
    if (index === 1 && parseInt(time[0] + newValue) > 23) return;
    if (index === 2 && parseInt(newValue) > 5) return;
    if (index === 3 && parseInt(newValue) > 9) return;
    newTime[index] = newValue;
    onChange(newTime);
    if (newValue !== '' && index < 3) {
      inputRefs[index + 1].current?.focus();
    }
  };
  const handleKeyDown = (e, index) => {
    if (e.key === 'Backspace' && time[index] === '' && index > 0) {
      inputRefs[index - 1].current?.focus();
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: timeInputContainer,
    children: [
      [0, 1].map((index) =>
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          'input',
          {
            ref: inputRefs[index],
            type: 'number',
            value: time[index],
            onChange: (e) => handleTimeChange(e.target.value, index),
            onKeyDown: (e) => handleKeyDown(e, index),
            className: timeInput,
            placeholder: '0',
          },
          index
        )
      ),
      ':',
      [2, 3].map((index) =>
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          'input',
          {
            ref: inputRefs[index],
            type: 'number',
            value: time[index],
            onChange: (e) => handleTimeChange(e.target.value, index),
            onKeyDown: (e) => handleKeyDown(e, index),
            className: timeInput,
            placeholder: '0',
          },
          index
        )
      ),
    ],
  });
};
var container$5 = 'style_container__1m688sj1';
var center = 'style_center__1m688sj2';
var skipButton = 'style_skipButton__1m688sj3';
var title = 'style_title__1m688sj4';
var subTitle$1 = 'style_subTitle__1m688sj5';
var nextButton = 'style_nextButton__1m688sj6';
var shape = 'style_shape__1m688sj7';
var Asterisk = 'style_Asterisk__1m688sj8 style_shape__1m688sj7';
var Cube = 'style_Cube__1m688sj9 style_shape__1m688sj7';
var Sphere = 'style_Sphere__1m688sja style_shape__1m688sj7';
var MobiusStrip = 'style_MobiusStrip__1m688sjb style_shape__1m688sj7';
const Arrow = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '18',
    height: '18',
    viewBox: '0 0 18 18',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'heroicons-mini/arrow-right',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector (Stroke)',
        'fill-rule': 'evenodd',
        'clip-rule': 'evenodd',
        d: 'M2.70001 9.00002C2.70001 8.62723 3.00222 8.32502 3.37501 8.32502L12.9491 8.32502L9.20716 4.76159C8.93844 4.5032 8.93006 4.0759 9.18845 3.80718C9.44684 3.53845 9.87414 3.53008 10.1429 3.78846L15.0929 8.51346C15.2252 8.64072 15.3 8.81641 15.3 9.00002C15.3 9.18363 15.2252 9.35932 15.0929 9.48659L10.1429 14.2116C9.87414 14.47 9.44684 14.4616 9.18845 14.1929C8.93006 13.9242 8.93844 13.4968 9.20716 13.2385L12.9491 9.67502L3.37501 9.67502C3.00222 9.67502 2.70001 9.37282 2.70001 9.00002Z',
        fill: '#323131',
      }),
    }),
  });
};
const Survey = () => {
  const [time, setTime] = reactExports.useState(['', '', '', '']);
  const isTimeValid = reactExports.useMemo(() => {
    return (
      time.every((value) => value !== '') &&
      parseInt(time[0] + time[1]) <= 23 &&
      parseInt(time[2] + time[3]) <= 59
    );
  }, [time]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('main', {
    className: container$5,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingAsterisk,
        className: `${shape} ${Asterisk}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingCube,
        className: `${shape} ${Cube}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingSphere,
        className: `${shape} ${Sphere}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx('img', {
        src: LandingMobiusStrip,
        className: `${shape} ${MobiusStrip}`,
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: center,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: skipButton,
            children: [
              '건너뛰기',
              /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow, {}),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: title,
            children: '당일 일정 요약 알림을 받는 시간대는 언제가 편하신가요?',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: subTitle$1,
            children:
              '* 등록된 시간은 사용자 설정에서 언제든지 변경할 수 있습니다.',
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(TimePicker, {
            time,
            onChange: setTime,
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
            className: nextButton,
            disabled: !isTimeValid,
            children: '확정하고 시작하기',
          }),
        ],
      }),
    ],
  });
};
var container$4 = 'style_container__12jv73l0';
var loginText = 'style_loginText__12jv73l1';
const useLoginMutation = () => {
  const navigate = useNavigate();
  return useMutation({
    mutationFn: postLogin,
    onSuccess: ({ accessToken, refreshToken: refreshToken2 }) => {
      Storage.setItem(TOKEN.ACCESS, accessToken);
      Storage.setItem(TOKEN.REFRESH, refreshToken2);
      navigate('/');
    },
  });
};
const OAuth = () => {
  const [searchParams] = useSearchParams();
  const code = searchParams.get('code') || '';
  const { mutate } = useLoginMutation();
  reactExports.useEffect(() => {
    mutate(code);
  }, [code, mutate]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('main', {
      className: container$4,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
        className: loginText,
        children: '로그인 중...',
      }),
    }),
  });
};
var container$3 = 'style_container__kkj0s52';
var emailText = 'style_emailText__kkj0s53';
var categories = 'style_categories__kkj0s54';
var category = 'style_category__kkj0s55';
var selected = 'style_selected__kkj0s56';
var categoryText = 'style_categoryText__kkj0s57';
var arrowBox = 'style_arrowBox__kkj0s58';
var opened = 'style_opened__kkj0s59';
var closed = 'style_closed__kkj0s5a';
var subCategories = 'style_subCategories__kkj0s5b';
const Business = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M20.2501 14.15V18.4C20.2501 19.494 19.4631 20.436 18.3781 20.58C16.2911 20.857 14.1621 21 12.0001 21C9.83806 21 7.70906 20.857 5.62206 20.58C4.53706 20.436 3.75006 19.494 3.75006 18.4V14.15M20.2501 14.15C20.4875 13.9436 20.6775 13.6883 20.807 13.4016C20.9364 13.1149 21.0023 12.8036 21.0001 12.489V8.706C21.0001 7.625 20.2321 6.691 19.1631 6.531C18.0304 6.36142 16.892 6.23234 15.7501 6.144M20.2501 14.15C20.0561 14.315 19.8301 14.445 19.5771 14.53C17.1333 15.3408 14.5748 15.7528 12.0001 15.75C9.35206 15.75 6.80506 15.321 4.42306 14.53C4.17631 14.4479 3.94778 14.3189 3.75006 14.15M3.75006 14.15C3.5126 13.9436 3.32262 13.6883 3.19315 13.4016C3.06369 13.1149 2.99782 12.8036 3.00006 12.489V8.706C3.00006 7.625 3.76806 6.691 4.83706 6.531C5.96975 6.36142 7.10814 6.23233 8.25006 6.144M15.7501 6.144V5.25C15.7501 4.65326 15.513 4.08097 15.091 3.65901C14.6691 3.23705 14.0968 3 13.5001 3H10.5001C9.90332 3 9.33102 3.23705 8.90907 3.65901C8.48711 4.08097 8.25006 4.65326 8.25006 5.25V6.144M15.7501 6.144C13.2538 5.95108 10.7463 5.95108 8.25006 6.144M12.0001 12.75H12.0081V12.758H12.0001V12.75Z',
        stroke: '#2E5EFC',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Recieved = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M21.75 6.75V17.25C21.75 17.8467 21.5129 18.419 21.091 18.841C20.669 19.2629 20.0967 19.5 19.5 19.5H4.5C3.90326 19.5 3.33097 19.2629 2.90901 18.841C2.48705 18.419 2.25 17.8467 2.25 17.25V6.75M21.75 6.75C21.75 6.15326 21.5129 5.58097 21.091 5.15901C20.669 4.73705 20.0967 4.5 19.5 4.5H4.5C3.90326 4.5 3.33097 4.73705 2.90901 5.15901C2.48705 5.58097 2.25 6.15326 2.25 6.75M21.75 6.75V6.993C21.75 7.37715 21.6517 7.75491 21.4644 8.0903C21.2771 8.42569 21.0071 8.70754 20.68 8.909L13.18 13.524C12.8252 13.7425 12.4167 13.8582 12 13.8582C11.5833 13.8582 11.1748 13.7425 10.82 13.524L3.32 8.91C2.99292 8.70854 2.72287 8.42669 2.53557 8.0913C2.34827 7.75591 2.24996 7.37815 2.25 6.994V6.75',
        stroke: '#2E5EFC',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Save = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M19.5 14.25V11.625C19.5 10.7299 19.1444 9.87145 18.5115 9.23851C17.8786 8.60558 17.0201 8.25 16.125 8.25H14.625C14.3266 8.25 14.0405 8.13147 13.8295 7.9205C13.6185 7.70952 13.5 7.42337 13.5 7.125V5.625C13.5 4.72989 13.1444 3.87145 12.5115 3.23851C11.8785 2.60558 11.0201 2.25 10.125 2.25H8.25M10.5 2.25H5.625C5.004 2.25 4.5 2.754 4.5 3.375V20.625C4.5 21.246 5.004 21.75 5.625 21.75H18.375C18.996 21.75 19.5 21.246 19.5 20.625V11.25C19.5 8.86305 18.5518 6.57387 16.864 4.88604C15.1761 3.19821 12.8869 2.25 10.5 2.25Z',
        stroke: '#2E5EFC',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Sent = ({ fill }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M6.00004 12L3.26904 3.125C9.80191 5.025 15.9624 8.02646 21.485 12C15.9627 15.9735 9.80257 18.9749 3.27004 20.875L6.00004 12ZM6.00004 12H13.5',
        stroke: fill,
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Spam = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M12 9V12.75M21 12C21 13.1819 20.7672 14.3522 20.3149 15.4442C19.8626 16.5361 19.1997 17.5282 18.364 18.364C17.5282 19.1997 16.5361 19.8626 15.4442 20.3149C14.3522 20.7672 13.1819 21 12 21C10.8181 21 9.64778 20.7672 8.55585 20.3149C7.46392 19.8626 6.47177 19.1997 5.63604 18.364C4.80031 17.5282 4.13738 16.5361 3.68508 15.4442C3.23279 14.3522 3 13.1819 3 12C3 9.61305 3.94821 7.32387 5.63604 5.63604C7.32387 3.94821 9.61305 3 12 3C14.3869 3 16.6761 3.94821 18.364 5.63604C20.0518 7.32387 21 9.61305 21 12ZM12 15.75H12.008V15.758H12V15.75Z',
        stroke: '#2E5EFC',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Trash = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('g', {
      id: 'Frame',
      children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
        id: 'Vector',
        d: 'M14.74 9.00003L14.394 18M9.606 18L9.26 9.00003M19.228 5.79003C19.57 5.84203 19.91 5.89703 20.25 5.95603M19.228 5.79003L18.16 19.673C18.1164 20.2383 17.8611 20.7662 17.445 21.1513C17.029 21.5364 16.4829 21.7502 15.916 21.75H8.084C7.5171 21.7502 6.97102 21.5364 6.55498 21.1513C6.13894 20.7662 5.88359 20.2383 5.84 19.673L4.772 5.79003M19.228 5.79003C18.0739 5.61555 16.9138 5.48313 15.75 5.39303M4.772 5.79003C4.43 5.84103 4.09 5.89603 3.75 5.95503M4.772 5.79003C5.92613 5.61555 7.08623 5.48313 8.25 5.39303M15.75 5.39303V4.47703C15.75 3.29703 14.84 2.31303 13.66 2.27603C12.5536 2.24067 11.4464 2.24067 10.34 2.27603C9.16 2.31303 8.25 3.29803 8.25 4.47703V5.39303M15.75 5.39303C13.2537 5.20011 10.7463 5.20011 8.25 5.39303',
        stroke: '#2E5EFC',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
};
const Cancel = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M6 18L18 6M6 6L18 18',
      stroke: '#787878',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const Image = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M2.25 15.75L7.409 10.591C7.61793 10.3821 7.86597 10.2163 8.13896 10.1033C8.41194 9.99018 8.70452 9.93198 9 9.93198C9.29548 9.93198 9.58806 9.99018 9.86104 10.1033C10.134 10.2163 10.3821 10.3821 10.591 10.591L15.75 15.75M14.25 14.25L15.659 12.841C15.8679 12.6321 16.116 12.4663 16.389 12.3533C16.6619 12.2402 16.9545 12.182 17.25 12.182C17.5455 12.182 17.8381 12.2402 18.111 12.3533C18.384 12.4663 18.6321 12.6321 18.841 12.841L21.75 15.75M3.75 19.5H20.25C20.6478 19.5 21.0294 19.342 21.3107 19.0607C21.592 18.7794 21.75 18.3978 21.75 18V6C21.75 5.60218 21.592 5.22064 21.3107 4.93934C21.0294 4.65804 20.6478 4.5 20.25 4.5H3.75C3.35218 4.5 2.97064 4.65804 2.68934 4.93934C2.40804 5.22064 2.25 5.60218 2.25 6V18C2.25 18.3978 2.40804 18.7794 2.68934 19.0607C2.97064 19.342 3.35218 19.5 3.75 19.5ZM14.25 8.25H14.258V8.258H14.25V8.25ZM14.625 8.25C14.625 8.34946 14.5855 8.44484 14.5152 8.51517C14.4448 8.58549 14.3495 8.625 14.25 8.625C14.1505 8.625 14.0552 8.58549 13.9848 8.51517C13.9145 8.44484 13.875 8.34946 13.875 8.25C13.875 8.15054 13.9145 8.05516 13.9848 7.98484C14.0552 7.91451 14.1505 7.875 14.25 7.875C14.3495 7.875 14.4448 7.91451 14.5152 7.98484C14.5855 8.05516 14.625 8.15054 14.625 8.25Z',
      stroke: 'black',
      strokeWidth: '1.5',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const File = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M18.375 12.739L10.682 20.432C9.83811 21.2759 8.69351 21.75 7.50003 21.75C6.30655 21.75 5.16195 21.2759 4.31803 20.432C3.47411 19.5881 3 18.4435 3 17.25C3 16.0565 3.47411 14.9119 4.31803 14.068L15.258 3.12801C15.5367 2.84948 15.8675 2.62856 16.2315 2.47787C16.5956 2.32718 16.9857 2.24966 17.3797 2.24976C17.7737 2.24985 18.1639 2.32754 18.5278 2.47841C18.8918 2.62927 19.2225 2.85035 19.501 3.12901C19.7796 3.40768 20.0005 3.73847 20.1512 4.10252C20.3019 4.46656 20.3794 4.85672 20.3793 5.25072C20.3792 5.64472 20.3015 6.03484 20.1506 6.39881C19.9998 6.76278 19.7787 7.09348 19.5 7.37201L8.55203 18.32C8.26801 18.5923 7.88839 18.7411 7.49497 18.7361C7.10156 18.7311 6.72585 18.5717 6.44883 18.2924C6.1718 18.013 6.01564 17.6359 6.01399 17.2425C6.01234 16.849 6.16535 16.4707 6.44003 16.189L14.25 8.37901M8.56103 18.31L8.55103 18.32',
      stroke: 'black',
      strokeWidth: '1.5',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
};
const STORAGE_KEY_SELECTED_MENU = 'selectedMenu';
const STORAGE_KEY_IS_OPENED = 'menuIsOpened';
const useMenuState = () => {
  const [selectedMenu, setSelectedMenu] = reactExports.useState('받은 메일함');
  const [isOpened, setIsOpened] = reactExports.useState(false);
  reactExports.useEffect(() => {
    const storedMenu = localStorage.getItem(STORAGE_KEY_SELECTED_MENU);
    const storedIsOpened = localStorage.getItem(STORAGE_KEY_IS_OPENED);
    if (storedMenu) {
      setSelectedMenu(storedMenu);
    }
    if (storedIsOpened) {
      setIsOpened(storedIsOpened === 'true');
    }
  }, []);
  const selectMenu = (label2) => {
    setSelectedMenu(label2);
    localStorage.setItem(STORAGE_KEY_SELECTED_MENU, label2);
  };
  const toggleOpened = () => {
    setIsOpened((prev) => {
      const next = !prev;
      localStorage.setItem(STORAGE_KEY_IS_OPENED, String(next));
      return next;
    });
  };
  return {
    selectedMenu,
    selectMenu,
    isOpened,
    toggleOpened,
    setIsOpened: (value) => {
      localStorage.setItem(STORAGE_KEY_IS_OPENED, String(value));
      setIsOpened(value);
    },
  };
};
const MENU_TITLES = {
  RECIEVED: '받은 메일함',
  BUSINESS: '업무',
  SPAM: '스팸',
  SAVE: '임시 보관함',
  SENT: '보낸 메일함',
  TRASH: '휴지통',
};
const Sidebar = () => {
  const { selectedMenu, selectMenu, isOpened, toggleOpened } = useMenuState();
  const sidebarMenu = [
    {
      title: MENU_TITLES.SAVE,
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Save, {}),
    },
    {
      title: MENU_TITLES.SENT,
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Sent, {
        fill: __default__.blue[500],
      }),
    },
    {
      title: MENU_TITLES.TRASH,
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Trash, {}),
    },
  ];
  const subMenu = [
    {
      title: MENU_TITLES.BUSINESS,
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Business, {}),
    },
    {
      title: MENU_TITLES.SPAM,
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Spam, {}),
    },
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('aside', {
    className: container$3,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
        className: emailText,
        children: 'chltjdgns1009@gmail.com',
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: categories,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: `${category} ${selectedMenu === MENU_TITLES.RECIEVED ? selected : ''}`,
            onClick: () => selectMenu(MENU_TITLES.RECIEVED),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Recieved, {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                className: categoryText,
                children: MENU_TITLES.RECIEVED,
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: `${arrowBox} ${isOpened ? opened : closed}`,
                onClick: (e) => {
                  e.stopPropagation();
                  toggleOpened();
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(Arrow$1, {
                  size: 20,
                  direction: 'right',
                }),
              }),
            ],
          }),
          isOpened &&
            /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
              className: subCategories,
              children: subMenu.map((menu) =>
                /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  'div',
                  {
                    className: `${category} ${menu.title === selectedMenu ? selected : ''}`,
                    onClick: () => selectMenu(menu.title),
                    children: [
                      menu.icon,
                      /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                        className: categoryText,
                        children: menu.title,
                      }),
                    ],
                  },
                  menu.title
                )
              ),
            }),
          sidebarMenu.map((menu) =>
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              'div',
              {
                className: `${category} ${menu.title === selectedMenu ? selected : ''}`,
                onClick: () => selectMenu(menu.title),
                children: [
                  menu.icon,
                  /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                    className: categoryText,
                    children: menu.title,
                  }),
                ],
              },
              menu.title
            )
          ),
        ],
      }),
    ],
  });
};
var container$2 = 'style_container__oxuuwb0';
const WriteIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '32',
    height: '32',
    viewBox: '0 0 32 32',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M22.4827 5.98267L24.732 3.732C25.2009 3.2631 25.8369 2.99967 26.5 2.99967C27.1631 2.99967 27.7991 3.2631 28.268 3.732C28.7369 4.2009 29.0003 4.83687 29.0003 5.5C29.0003 6.16313 28.7369 6.7991 28.268 7.268L14.1093 21.4267C13.4044 22.1312 12.5352 22.649 11.58 22.9333L8 24L9.06667 20.42C9.35104 19.4648 9.86885 18.5956 10.5733 17.8907L22.4827 5.98267ZM22.4827 5.98267L26 9.5M24 18.6667V25C24 25.7957 23.6839 26.5587 23.1213 27.1213C22.5587 27.6839 21.7956 28 21 28H7C6.20435 28 5.44129 27.6839 4.87868 27.1213C4.31607 26.5587 4 25.7957 4 25V11C4 10.2044 4.31607 9.44129 4.87868 8.87868C5.44129 8.31607 6.20435 8 7 8H13.3333',
      stroke: '#5A5A5A',
      'stroke-width': '2',
      'stroke-linecap': 'round',
      'stroke-linejoin': 'round',
    }),
  });
};
var container$1 = 'style_container__1g0i07a0';
var header$1 = 'style_header__1g0i07a1';
var mailType = 'style_mailType__1g0i07a2';
var subTitle = 'style_subTitle__1g0i07a3';
var mailOption = 'style_mailOption__1g0i07a4';
var mailOption_addPlan = 'style_mailOption_addPlan__1g0i07a5';
var mailOption_write = 'style_mailOption_write__1g0i07a6';
var mailOption_delete = 'style_mailOption_delete__1g0i07a7';
var content = 'style_content__1g0i07a8';
var content_list = 'style_content_list__1g0i07a9';
var mailList_container = 'style_mailList_container__1g0i07aa';
var mailList_container_selected = 'style_mailList_container_selected__1g0i07ab';
var mailList_readState = 'style_mailList_readState__1g0i07ac';
var mailList_header = 'style_mailList_header__1g0i07ad';
var mailList_Sender = 'style_mailList_Sender__1g0i07ae';
var mailList_Date = 'style_mailList_Date__1g0i07af';
var mailList_title = 'style_mailList_title__1g0i07ag';
var mailList_description = 'style_mailList_description__1g0i07ah';
var content_description = 'style_content_description__1g0i07ai';
var description_header = 'style_description_header__1g0i07aj';
var description_title = 'style_description_title__1g0i07ak';
var description_info = 'style_description_info__1g0i07al';
var description_sender = 'style_description_sender__1g0i07am';
var description_Recipient = 'style_description_Recipient__1g0i07an';
var description_content = 'style_description_content__1g0i07ap';
const TrashcanIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '32',
    height: '32',
    viewBox: '0 0 32 32',
    fill: 'none',
    children: /* @__PURE__ */ jsxRuntimeExports.jsx('path', {
      d: 'M19.6533 12L19.192 24M12.808 24L12.3467 12M25.6373 7.72C26.0933 7.78933 26.5467 7.86267 27 7.94133M25.6373 7.72L24.2133 26.2307C24.1552 26.9843 23.8148 27.6882 23.26 28.2017C22.7053 28.7151 21.9772 29.0002 21.2213 29H10.7787C10.0228 29.0002 9.2947 28.7151 8.73997 28.2017C8.18525 27.6882 7.84479 26.9843 7.78667 26.2307L6.36267 7.72M25.6373 7.72C24.0985 7.48736 22.5517 7.3108 21 7.19067M6.36267 7.72C5.90667 7.788 5.45333 7.86133 5 7.94M6.36267 7.72C7.90151 7.48736 9.44831 7.3108 11 7.19067M21 7.19067V5.96933C21 4.396 19.7867 3.084 18.2133 3.03467C16.7382 2.98752 15.2618 2.98752 13.7867 3.03467C12.2133 3.084 11 4.39733 11 5.96933V7.19067M21 7.19067C17.6716 6.93344 14.3284 6.93344 11 7.19067',
      stroke: '#5A5A5A',
      'stroke-width': '2',
      'stroke-linecap': 'round',
      'stroke-linejoin': 'round',
    }),
  });
};
var container = 'style_container__7wipdm0';
var header = 'style_header__7wipdm1';
var inputs = 'style_inputs__7wipdm2';
var inputContainer = 'style_inputContainer__7wipdm3';
var label = 'style_label__7wipdm4';
var input = 'style_input__7wipdm5';
var footer = 'style_footer__7wipdm6';
var icon = 'style_icon__7wipdm7';
var sent = 'style_sent__7wipdm8';
var editorContainer = 'style_editorContainer__7wipdm9';
var textEditor = 'style_textEditor__7wipdma';
var editor = 'style_editor__7wipdmb';
var fileList = 'style_fileList__7wipdmc';
var fileItem = 'style_fileItem__7wipdmd';
var fileName = 'style_fileName__7wipdme';
var fileBytes = 'style_fileBytes__7wipdmf';
var fileInput = 'style_fileInput__7wipdmg';
var fileDeleteBtn = 'style_fileDeleteBtn__7wipdmh';
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$2(value, other) {
  return value === other || (value !== value && other !== other);
}
var eq_1 = eq$2;
var eq$1 = eq_1;
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data = this.__data__,
    index = assocIndexOf$3(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data = this.__data__,
    index = assocIndexOf$2(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data = this.__data__,
    index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear,
  listCacheDelete = _listCacheDelete,
  listCacheGet = _listCacheGet,
  listCacheHas = _listCacheHas,
  listCacheSet = _listCacheSet;
function ListCache$4(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype['delete'] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var ListCache$3 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$3();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key) {
  var data = this.__data__,
    result = data['delete'](key);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet$1;
function stackHas$1(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas$1;
var freeGlobal$1 =
  typeof commonjsGlobal == 'object' &&
  commonjsGlobal &&
  commonjsGlobal.Object === Object &&
  commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf =
  typeof self == 'object' && self && self.Object === Object && self;
var root$8 = freeGlobal || freeSelf || Function('return this')();
var _root = root$8;
var root$7 = _root;
var Symbol$4 = root$7.Symbol;
var _Symbol = Symbol$4;
var Symbol$3 = _Symbol;
var objectProto$b = Object.prototype;
var hasOwnProperty$8 = objectProto$b.hasOwnProperty;
var nativeObjectToString$1 = objectProto$b.toString;
var symToStringTag$1 = Symbol$3 ? Symbol$3.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$8.call(value, symToStringTag$1),
    tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e) {}
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$a = Object.prototype;
var nativeObjectToString = objectProto$a.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var Symbol$2 = _Symbol,
  getRawTag = _getRawTag,
  objectToString = _objectToString;
var nullTag = '[object Null]',
  undefinedTag = '[object Undefined]';
var symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;
function baseGetTag$4(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value)
    ? getRawTag(value)
    : objectToString(value);
}
var _baseGetTag = baseGetTag$4;
function isObject$2(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}
var isObject_1 = isObject$2;
var baseGetTag$3 = _baseGetTag,
  isObject$1 = isObject_1;
var asyncTag = '[object AsyncFunction]',
  funcTag$1 = '[object Function]',
  genTag = '[object GeneratorFunction]',
  proxyTag = '[object Proxy]';
function isFunction$2(value) {
  if (!isObject$1(value)) {
    return false;
  }
  var tag = baseGetTag$3(value);
  return (
    tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag
  );
}
var isFunction_1 = isFunction$2;
var root$6 = _root;
var coreJsData$1 = root$6['__core-js_shared__'];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = (function () {
  var uid = /[^.]+$/.exec(
    (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
  );
  return uid ? 'Symbol(src)_1.' + uid : '';
})();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}
var _toSource = toSource$2;
var isFunction$1 = isFunction_1,
  isMasked = _isMasked,
  isObject = isObject_1,
  toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype,
  objectProto$9 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
var reIsNative = RegExp(
  '^' +
    funcToString
      .call(hasOwnProperty$7)
      .replace(reRegExpChar, '\\$&')
      .replace(
        /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
        '$1.*?'
      ) +
    '$'
);
function baseIsNative$1(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key) {
  return object == null ? void 0 : object[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative,
  getValue = _getValue;
function getNative$6(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$6;
var getNative$5 = _getNative,
  root$5 = _root;
var Map$4 = getNative$5(root$5, 'Map');
var _Map = Map$4;
var getNative$4 = _getNative;
var nativeCreate$4 = getNative$4(Object, 'create');
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';
var objectProto$8 = Object.prototype;
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$6.call(data, key) ? data[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$7 = Object.prototype;
var hasOwnProperty$5 = objectProto$7.hasOwnProperty;
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1
    ? data[key] !== void 0
    : hasOwnProperty$5.call(data, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear,
  hashDelete = _hashDelete,
  hashGet = _hashGet,
  hashHas = _hashHas,
  hashSet = _hashSet;
function Hash$1(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype['delete'] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash,
  ListCache$2 = _ListCache,
  Map$3 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    hash: new Hash(),
    map: new (Map$3 || ListCache$2)(),
    string: new Hash(),
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type = typeof value;
  return type == 'string' ||
    type == 'number' ||
    type == 'symbol' ||
    type == 'boolean'
    ? value !== '__proto__'
    : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key),
    size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear,
  mapCacheDelete = _mapCacheDelete,
  mapCacheGet = _mapCacheGet,
  mapCacheHas = _mapCacheHas,
  mapCacheSet = _mapCacheSet;
function MapCache$2(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache$2.prototype.clear = mapCacheClear;
MapCache$2.prototype['delete'] = mapCacheDelete;
MapCache$2.prototype.get = mapCacheGet;
MapCache$2.prototype.has = mapCacheHas;
MapCache$2.prototype.set = mapCacheSet;
var _MapCache = MapCache$2;
var ListCache$1 = _ListCache,
  Map$2 = _Map,
  MapCache$1 = _MapCache;
var LARGE_ARRAY_SIZE = 200;
function stackSet$1(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache$1) {
    var pairs = data.__data__;
    if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache$1(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache,
  stackClear = _stackClear,
  stackDelete = _stackDelete,
  stackGet = _stackGet,
  stackHas = _stackHas,
  stackSet = _stackSet;
function Stack$1(entries) {
  var data = (this.__data__ = new ListCache(entries));
  this.size = data.size;
}
Stack$1.prototype.clear = stackClear;
Stack$1.prototype['delete'] = stackDelete;
Stack$1.prototype.get = stackGet;
Stack$1.prototype.has = stackHas;
Stack$1.prototype.set = stackSet;
var _Stack = Stack$1;
var HASH_UNDEFINED = '__lodash_hash_undefined__';
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache,
  setCacheAdd = _setCacheAdd,
  setCacheHas = _setCacheHas;
function SetCache$1(values) {
  var index = -1,
    length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
SetCache$1.prototype.has = setCacheHas;
var _SetCache = SetCache$1;
function arraySome$1(array, predicate) {
  var index = -1,
    length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
function cacheHas$1(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas$1;
var SetCache = _SetCache,
  arraySome = _arraySome,
  cacheHas = _cacheHas;
var COMPARE_PARTIAL_FLAG$3 = 1,
  COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,
    arrLength = array.length,
    othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
    result = true,
    seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index],
      othValue = other[index];
    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (
        !arraySome(other, function (othValue2, othIndex) {
          if (
            !cacheHas(seen, othIndex) &&
            (arrValue === othValue2 ||
              equalFunc(arrValue, othValue2, bitmask, customizer, stack))
          ) {
            return seen.push(othIndex);
          }
        })
      ) {
        result = false;
        break;
      }
    } else if (
      !(
        arrValue === othValue ||
        equalFunc(arrValue, othValue, bitmask, customizer, stack)
      )
    ) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}
var _equalArrays = equalArrays$2;
var root$4 = _root;
var Uint8Array$2 = root$4.Uint8Array;
var _Uint8Array = Uint8Array$2;
function mapToArray$1(map) {
  var index = -1,
    result = Array(map.size);
  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$1(set) {
  var index = -1,
    result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}
var _setToArray = setToArray$1;
var Symbol$1 = _Symbol,
  Uint8Array$1 = _Uint8Array,
  eq = eq_1,
  equalArrays$1 = _equalArrays,
  mapToArray = _mapToArray,
  setToArray = _setToArray;
var COMPARE_PARTIAL_FLAG$2 = 1,
  COMPARE_UNORDERED_FLAG = 2;
var boolTag$1 = '[object Boolean]',
  dateTag$1 = '[object Date]',
  errorTag$1 = '[object Error]',
  mapTag$2 = '[object Map]',
  numberTag$1 = '[object Number]',
  regexpTag$1 = '[object RegExp]',
  setTag$2 = '[object Set]',
  stringTag$1 = '[object String]',
  symbolTag = '[object Symbol]';
var arrayBufferTag$1 = '[object ArrayBuffer]',
  dataViewTag$2 = '[object DataView]';
var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0,
  symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(
  object,
  other,
  tag,
  bitmask,
  customizer,
  equalFunc,
  stack
) {
  switch (tag) {
    case dataViewTag$2:
      if (
        object.byteLength != other.byteLength ||
        object.byteOffset != other.byteOffset
      ) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (
        object.byteLength != other.byteLength ||
        !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))
      ) {
        return false;
      }
      return true;
    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      return eq(+object, +other);
    case errorTag$1:
      return object.name == other.name && object.message == other.message;
    case regexpTag$1:
    case stringTag$1:
      return object == other + '';
    case mapTag$2:
      var convert = mapToArray;
    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays$1(
        convert(object),
        convert(other),
        bitmask,
        customizer,
        equalFunc,
        stack
      );
      stack['delete'](object);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
function arrayPush$1(array, values) {
  var index = -1,
    length = values.length,
    offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush$1;
var isArray$3 = Array.isArray;
var isArray_1 = isArray$3;
var arrayPush = _arrayPush,
  isArray$2 = isArray_1;
function baseGetAllKeys$1(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$2(object) ? result : arrayPush(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys$1;
function arrayFilter$1(array, predicate) {
  var index = -1,
    length = array == null ? 0 : array.length,
    resIndex = 0,
    result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$1() {
  return [];
}
var stubArray_1 = stubArray$1;
var arrayFilter = _arrayFilter,
  stubArray = stubArray_1;
var objectProto$6 = Object.prototype;
var propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols$1 = !nativeGetSymbols
  ? stubArray
  : function (object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function (symbol) {
        return propertyIsEnumerable$1.call(object, symbol);
      });
    };
var _getSymbols = getSymbols$1;
function baseTimes$1(n2, iteratee) {
  var index = -1,
    result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var _baseTimes = baseTimes$1;
function isObjectLike$4(value) {
  return value != null && typeof value == 'object';
}
var isObjectLike_1 = isObjectLike$4;
var baseGetTag$2 = _baseGetTag,
  isObjectLike$3 = isObjectLike_1;
var argsTag$2 = '[object Arguments]';
function baseIsArguments$1(value) {
  return isObjectLike$3(value) && baseGetTag$2(value) == argsTag$2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments,
  isObjectLike$2 = isObjectLike_1;
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;
var isArguments$1 = baseIsArguments(
  /* @__PURE__ */ (function () {
    return arguments;
  })()
)
  ? baseIsArguments
  : function (value) {
      return (
        isObjectLike$2(value) &&
        hasOwnProperty$4.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee')
      );
    };
var isArguments_1 = isArguments$1;
var isBuffer$2 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
isBuffer$2.exports;
(function (module, exports) {
  var root2 = _root,
    stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer2 = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer2;
})(isBuffer$2, isBuffer$2.exports);
var isBufferExports = isBuffer$2.exports;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$1(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return (
    !!length &&
    (type == 'number' || (type != 'symbol' && reIsUint.test(value))) &&
    value > -1 &&
    value % 1 == 0 &&
    value < length
  );
}
var _isIndex = isIndex$1;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$2(value) {
  return (
    typeof value == 'number' &&
    value > -1 &&
    value % 1 == 0 &&
    value <= MAX_SAFE_INTEGER
  );
}
var isLength_1 = isLength$2;
var baseGetTag$1 = _baseGetTag,
  isLength$1 = isLength_1,
  isObjectLike$1 = isObjectLike_1;
var argsTag$1 = '[object Arguments]',
  arrayTag$1 = '[object Array]',
  boolTag = '[object Boolean]',
  dateTag = '[object Date]',
  errorTag = '[object Error]',
  funcTag = '[object Function]',
  mapTag$1 = '[object Map]',
  numberTag = '[object Number]',
  objectTag$2 = '[object Object]',
  regexpTag = '[object RegExp]',
  setTag$1 = '[object Set]',
  stringTag = '[object String]',
  weakMapTag$1 = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
  dataViewTag$1 = '[object DataView]',
  float32Tag = '[object Float32Array]',
  float64Tag = '[object Float64Array]',
  int8Tag = '[object Int8Array]',
  int16Tag = '[object Int16Array]',
  int32Tag = '[object Int32Array]',
  uint8Tag = '[object Uint8Array]',
  uint8ClampedTag = '[object Uint8ClampedArray]',
  uint16Tag = '[object Uint16Array]',
  uint32Tag = '[object Uint32Array]';
var typedArrayTags = {};
typedArrayTags[float32Tag] =
  typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] =
  typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] =
  typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] =
  typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] =
    true;
typedArrayTags[argsTag$1] =
  typedArrayTags[arrayTag$1] =
  typedArrayTags[arrayBufferTag] =
  typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag$1] =
  typedArrayTags[dateTag] =
  typedArrayTags[errorTag] =
  typedArrayTags[funcTag] =
  typedArrayTags[mapTag$1] =
  typedArrayTags[numberTag] =
  typedArrayTags[objectTag$2] =
  typedArrayTags[regexpTag] =
  typedArrayTags[setTag$1] =
  typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag$1] =
    false;
function baseIsTypedArray$1(value) {
  return (
    isObjectLike$1(value) &&
    isLength$1(value.length) &&
    !!typedArrayTags[baseGetTag$1(value)]
  );
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$1(func) {
  return function (value) {
    return func(value);
  };
}
var _baseUnary = baseUnary$1;
var _nodeUtil = { exports: {} };
_nodeUtil.exports;
(function (module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = (function () {
    try {
      var types =
        freeModule && freeModule.require && freeModule.require('util').types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  })();
  module.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var _nodeUtilExports = _nodeUtil.exports;
var baseIsTypedArray = _baseIsTypedArray,
  baseUnary = _baseUnary,
  nodeUtil = _nodeUtilExports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray$2 = nodeIsTypedArray
  ? baseUnary(nodeIsTypedArray)
  : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$2;
var baseTimes = _baseTimes,
  isArguments = isArguments_1,
  isArray$1 = isArray_1,
  isBuffer$1 = isBufferExports,
  isIndex = _isIndex,
  isTypedArray$1 = isTypedArray_1;
var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray$1(value),
    isArg = !isArr && isArguments(value),
    isBuff = !isArr && !isArg && isBuffer$1(value),
    isType = !isArr && !isArg && !isBuff && isTypedArray$1(value),
    skipIndexes = isArr || isArg || isBuff || isType,
    result = skipIndexes ? baseTimes(value.length, String) : [],
    length = result.length;
  for (var key in value) {
    if (
      (inherited || hasOwnProperty$3.call(value, key)) &&
      !(
        skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
          (isBuff && (key == 'offset' || key == 'parent')) || // PhantomJS 2 has enumerable non-index properties on typed arrays.
          (isType &&
            (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) || // Skip index properties.
          isIndex(key, length))
      )
    ) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
var objectProto$3 = Object.prototype;
function isPrototype$1(value) {
  var Ctor = value && value.constructor,
    proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$3;
  return value === proto;
}
var _isPrototype = isPrototype$1;
function overArg$1(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$1;
var overArg = _overArg;
var nativeKeys$1 = overArg(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype = _isPrototype,
  nativeKeys = _nativeKeys;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function baseKeys$1(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction = isFunction_1,
  isLength = isLength_1;
function isArrayLike$1(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}
var isArrayLike_1 = isArrayLike$1;
var arrayLikeKeys = _arrayLikeKeys,
  baseKeys = _baseKeys,
  isArrayLike = isArrayLike_1;
function keys$1(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
var keys_1 = keys$1;
var baseGetAllKeys = _baseGetAllKeys,
  getSymbols = _getSymbols,
  keys = keys_1;
function getAllKeys$1(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1,
    objProps = getAllKeys(object),
    objLength = objProps.length,
    othProps = getAllKeys(other),
    othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
      othValue = other[key];
    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    if (
      !(compared === void 0
        ? objValue === othValue ||
          equalFunc(objValue, othValue, bitmask, customizer, stack)
        : compared)
    ) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
      othCtor = other.constructor;
    if (
      objCtor != othCtor &&
      'constructor' in object &&
      'constructor' in other &&
      !(
        typeof objCtor == 'function' &&
        objCtor instanceof objCtor &&
        typeof othCtor == 'function' &&
        othCtor instanceof othCtor
      )
    ) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}
var _equalObjects = equalObjects$1;
var getNative$3 = _getNative,
  root$3 = _root;
var DataView$1 = getNative$3(root$3, 'DataView');
var _DataView = DataView$1;
var getNative$2 = _getNative,
  root$2 = _root;
var Promise$2 = getNative$2(root$2, 'Promise');
var _Promise = Promise$2;
var getNative$1 = _getNative,
  root$1 = _root;
var Set$2 = getNative$1(root$1, 'Set');
var _Set = Set$2;
var getNative = _getNative,
  root = _root;
var WeakMap$2 = getNative(root, 'WeakMap');
var _WeakMap = WeakMap$2;
var DataView = _DataView,
  Map$1 = _Map,
  Promise$1 = _Promise,
  Set$1 = _Set,
  WeakMap$1 = _WeakMap,
  baseGetTag = _baseGetTag,
  toSource = _toSource;
var mapTag = '[object Map]',
  objectTag$1 = '[object Object]',
  promiseTag = '[object Promise]',
  setTag = '[object Set]',
  weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
var dataViewCtorString = toSource(DataView),
  mapCtorString = toSource(Map$1),
  promiseCtorString = toSource(Promise$1),
  setCtorString = toSource(Set$1),
  weakMapCtorString = toSource(WeakMap$1);
var getTag$1 = baseGetTag;
if (
  (DataView && getTag$1(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
  (Map$1 && getTag$1(new Map$1()) != mapTag) ||
  (Promise$1 && getTag$1(Promise$1.resolve()) != promiseTag) ||
  (Set$1 && getTag$1(new Set$1()) != setTag) ||
  (WeakMap$1 && getTag$1(new WeakMap$1()) != weakMapTag)
) {
  getTag$1 = function (value) {
    var result = baseGetTag(value),
      Ctor = result == objectTag$1 ? value.constructor : void 0,
      ctorString = Ctor ? toSource(Ctor) : '';
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;
        case mapCtorString:
          return mapTag;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag;
        case weakMapCtorString:
          return weakMapTag;
      }
    }
    return result;
  };
}
var _getTag = getTag$1;
var Stack = _Stack,
  equalArrays = _equalArrays,
  equalByTag = _equalByTag,
  equalObjects = _equalObjects,
  getTag = _getTag,
  isArray = isArray_1,
  isBuffer = isBufferExports,
  isTypedArray = isTypedArray_1;
var COMPARE_PARTIAL_FLAG = 1;
var argsTag = '[object Arguments]',
  arrayTag = '[object Array]',
  objectTag = '[object Object]';
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep$1(
  object,
  other,
  bitmask,
  customizer,
  equalFunc,
  stack
) {
  var objIsArr = isArray(object),
    othIsArr = isArray(other),
    objTag = objIsArr ? arrayTag : getTag(object),
    othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag,
    othIsObj = othTag == objectTag,
    isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object)
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(
          object,
          other,
          objTag,
          bitmask,
          customizer,
          equalFunc,
          stack
        );
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
      othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
        othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep,
  isObjectLike = isObjectLike_1;
function baseIsEqual$1(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (
    value == null ||
    other == null ||
    (!isObjectLike(value) && !isObjectLike(other))
  ) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(
    value,
    other,
    bitmask,
    customizer,
    baseIsEqual$1,
    stack
  );
}
var _baseIsEqual = baseIsEqual$1;
var baseIsEqual = _baseIsEqual;
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1$1 = isEqual;
var quill = { exports: {} };
/*!
 * Quill Editor v1.3.7
 * https://quilljs.com/
 * Copyright (c) 2014, Jason Chen
 * Copyright (c) 2013, salesforce.com
 */
(function (module, exports) {
  (function webpackUniversalModuleDefinition(root2, factory) {
    module.exports = factory();
  })(typeof self !== 'undefined' ? self : commonjsGlobal, function () {
    return (
      /******/
      (function (modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
          }
          var module2 = (installedModules[moduleId] = {
            /******/
            i: moduleId,
            /******/
            l: false,
            /******/
            exports: {},
            /******/
          });
          modules[moduleId].call(
            module2.exports,
            module2,
            module2.exports,
            __webpack_require__
          );
          module2.l = true;
          return module2.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.d = function (exports2, name, getter) {
          if (!__webpack_require__.o(exports2, name)) {
            Object.defineProperty(exports2, name, {
              /******/
              configurable: false,
              /******/
              enumerable: true,
              /******/
              get: getter,
              /******/
            });
          }
        };
        __webpack_require__.n = function (module2) {
          var getter =
            module2 && module2.__esModule
              ? /******/
                function getDefault() {
                  return module2['default'];
                }
              : /******/
                function getModuleExports() {
                  return module2;
                };
          __webpack_require__.d(getter, 'a', getter);
          return getter;
        };
        __webpack_require__.o = function (object, property) {
          return Object.prototype.hasOwnProperty.call(object, property);
        };
        __webpack_require__.p = '';
        return __webpack_require__((__webpack_require__.s = 109));
      })([
        /* 0 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', { value: true });
          var container_1 = __webpack_require__(17);
          var format_1 = __webpack_require__(18);
          var leaf_1 = __webpack_require__(19);
          var scroll_1 = __webpack_require__(45);
          var inline_1 = __webpack_require__(46);
          var block_1 = __webpack_require__(47);
          var embed_1 = __webpack_require__(48);
          var text_1 = __webpack_require__(49);
          var attributor_1 = __webpack_require__(12);
          var class_1 = __webpack_require__(32);
          var style_1 = __webpack_require__(33);
          var store_1 = __webpack_require__(31);
          var Registry = __webpack_require__(1);
          var Parchment = {
            Scope: Registry.Scope,
            create: Registry.create,
            find: Registry.find,
            query: Registry.query,
            register: Registry.register,
            Container: container_1.default,
            Format: format_1.default,
            Leaf: leaf_1.default,
            Embed: embed_1.default,
            Scroll: scroll_1.default,
            Block: block_1.default,
            Inline: inline_1.default,
            Text: text_1.default,
            Attributor: {
              Attribute: attributor_1.default,
              Class: class_1.default,
              Style: style_1.default,
              Store: store_1.default,
            },
          };
          exports2.default = Parchment;
        },
        /* 1 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var ParchmentError =
            /** @class */
            (function (_super) {
              __extends2(ParchmentError2, _super);
              function ParchmentError2(message) {
                var _this = this;
                message = '[Parchment] ' + message;
                _this = _super.call(this, message) || this;
                _this.message = message;
                _this.name = _this.constructor.name;
                return _this;
              }
              return ParchmentError2;
            })(Error);
          exports2.ParchmentError = ParchmentError;
          var attributes = {};
          var classes = {};
          var tags = {};
          var types = {};
          exports2.DATA_KEY = '__blot';
          var Scope;
          (function (Scope2) {
            Scope2[(Scope2['TYPE'] = 3)] = 'TYPE';
            Scope2[(Scope2['LEVEL'] = 12)] = 'LEVEL';
            Scope2[(Scope2['ATTRIBUTE'] = 13)] = 'ATTRIBUTE';
            Scope2[(Scope2['BLOT'] = 14)] = 'BLOT';
            Scope2[(Scope2['INLINE'] = 7)] = 'INLINE';
            Scope2[(Scope2['BLOCK'] = 11)] = 'BLOCK';
            Scope2[(Scope2['BLOCK_BLOT'] = 10)] = 'BLOCK_BLOT';
            Scope2[(Scope2['INLINE_BLOT'] = 6)] = 'INLINE_BLOT';
            Scope2[(Scope2['BLOCK_ATTRIBUTE'] = 9)] = 'BLOCK_ATTRIBUTE';
            Scope2[(Scope2['INLINE_ATTRIBUTE'] = 5)] = 'INLINE_ATTRIBUTE';
            Scope2[(Scope2['ANY'] = 15)] = 'ANY';
          })((Scope = exports2.Scope || (exports2.Scope = {})));
          function create(input2, value) {
            var match = query(input2);
            if (match == null) {
              throw new ParchmentError('Unable to create ' + input2 + ' blot');
            }
            var BlotClass = match;
            var node =
              // @ts-ignore
              input2 instanceof Node || input2['nodeType'] === Node.TEXT_NODE
                ? input2
                : BlotClass.create(value);
            return new BlotClass(node, value);
          }
          exports2.create = create;
          function find(node, bubble) {
            if (bubble === void 0) {
              bubble = false;
            }
            if (node == null) return null;
            if (node[exports2.DATA_KEY] != null)
              return node[exports2.DATA_KEY].blot;
            if (bubble) return find(node.parentNode, bubble);
            return null;
          }
          exports2.find = find;
          function query(query2, scope) {
            if (scope === void 0) {
              scope = Scope.ANY;
            }
            var match;
            if (typeof query2 === 'string') {
              match = types[query2] || attributes[query2];
            } else if (
              query2 instanceof Text ||
              query2['nodeType'] === Node.TEXT_NODE
            ) {
              match = types['text'];
            } else if (typeof query2 === 'number') {
              if (query2 & Scope.LEVEL & Scope.BLOCK) {
                match = types['block'];
              } else if (query2 & Scope.LEVEL & Scope.INLINE) {
                match = types['inline'];
              }
            } else if (query2 instanceof HTMLElement) {
              var names = (query2.getAttribute('class') || '').split(/\s+/);
              for (var i in names) {
                match = classes[names[i]];
                if (match) break;
              }
              match = match || tags[query2.tagName];
            }
            if (match == null) return null;
            if (
              scope & Scope.LEVEL & match.scope &&
              scope & Scope.TYPE & match.scope
            )
              return match;
            return null;
          }
          exports2.query = query;
          function register() {
            var Definitions = [];
            for (var _i = 0; _i < arguments.length; _i++) {
              Definitions[_i] = arguments[_i];
            }
            if (Definitions.length > 1) {
              return Definitions.map(function (d) {
                return register(d);
              });
            }
            var Definition = Definitions[0];
            if (
              typeof Definition.blotName !== 'string' &&
              typeof Definition.attrName !== 'string'
            ) {
              throw new ParchmentError('Invalid definition');
            } else if (Definition.blotName === 'abstract') {
              throw new ParchmentError('Cannot register abstract class');
            }
            types[Definition.blotName || Definition.attrName] = Definition;
            if (typeof Definition.keyName === 'string') {
              attributes[Definition.keyName] = Definition;
            } else {
              if (Definition.className != null) {
                classes[Definition.className] = Definition;
              }
              if (Definition.tagName != null) {
                if (Array.isArray(Definition.tagName)) {
                  Definition.tagName = Definition.tagName.map(
                    function (tagName) {
                      return tagName.toUpperCase();
                    }
                  );
                } else {
                  Definition.tagName = Definition.tagName.toUpperCase();
                }
                var tagNames = Array.isArray(Definition.tagName)
                  ? Definition.tagName
                  : [Definition.tagName];
                tagNames.forEach(function (tag) {
                  if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                  }
                });
              }
            }
            return Definition;
          }
          exports2.register = register;
        },
        /* 2 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var diff = __webpack_require__(51);
          var equal = __webpack_require__(11);
          var extend2 = __webpack_require__(3);
          var op = __webpack_require__(20);
          var NULL_CHARACTER = String.fromCharCode(0);
          var Delta = function (ops) {
            if (Array.isArray(ops)) {
              this.ops = ops;
            } else if (ops != null && Array.isArray(ops.ops)) {
              this.ops = ops.ops;
            } else {
              this.ops = [];
            }
          };
          Delta.prototype.insert = function (text, attributes) {
            var newOp = {};
            if (text.length === 0) return this;
            newOp.insert = text;
            if (
              attributes != null &&
              typeof attributes === 'object' &&
              Object.keys(attributes).length > 0
            ) {
              newOp.attributes = attributes;
            }
            return this.push(newOp);
          };
          Delta.prototype['delete'] = function (length) {
            if (length <= 0) return this;
            return this.push({ delete: length });
          };
          Delta.prototype.retain = function (length, attributes) {
            if (length <= 0) return this;
            var newOp = { retain: length };
            if (
              attributes != null &&
              typeof attributes === 'object' &&
              Object.keys(attributes).length > 0
            ) {
              newOp.attributes = attributes;
            }
            return this.push(newOp);
          };
          Delta.prototype.push = function (newOp) {
            var index = this.ops.length;
            var lastOp = this.ops[index - 1];
            newOp = extend2(true, {}, newOp);
            if (typeof lastOp === 'object') {
              if (
                typeof newOp['delete'] === 'number' &&
                typeof lastOp['delete'] === 'number'
              ) {
                this.ops[index - 1] = {
                  delete: lastOp['delete'] + newOp['delete'],
                };
                return this;
              }
              if (
                typeof lastOp['delete'] === 'number' &&
                newOp.insert != null
              ) {
                index -= 1;
                lastOp = this.ops[index - 1];
                if (typeof lastOp !== 'object') {
                  this.ops.unshift(newOp);
                  return this;
                }
              }
              if (equal(newOp.attributes, lastOp.attributes)) {
                if (
                  typeof newOp.insert === 'string' &&
                  typeof lastOp.insert === 'string'
                ) {
                  this.ops[index - 1] = {
                    insert: lastOp.insert + newOp.insert,
                  };
                  if (typeof newOp.attributes === 'object')
                    this.ops[index - 1].attributes = newOp.attributes;
                  return this;
                } else if (
                  typeof newOp.retain === 'number' &&
                  typeof lastOp.retain === 'number'
                ) {
                  this.ops[index - 1] = {
                    retain: lastOp.retain + newOp.retain,
                  };
                  if (typeof newOp.attributes === 'object')
                    this.ops[index - 1].attributes = newOp.attributes;
                  return this;
                }
              }
            }
            if (index === this.ops.length) {
              this.ops.push(newOp);
            } else {
              this.ops.splice(index, 0, newOp);
            }
            return this;
          };
          Delta.prototype.chop = function () {
            var lastOp = this.ops[this.ops.length - 1];
            if (lastOp && lastOp.retain && !lastOp.attributes) {
              this.ops.pop();
            }
            return this;
          };
          Delta.prototype.filter = function (predicate) {
            return this.ops.filter(predicate);
          };
          Delta.prototype.forEach = function (predicate) {
            this.ops.forEach(predicate);
          };
          Delta.prototype.map = function (predicate) {
            return this.ops.map(predicate);
          };
          Delta.prototype.partition = function (predicate) {
            var passed = [],
              failed = [];
            this.forEach(function (op2) {
              var target = predicate(op2) ? passed : failed;
              target.push(op2);
            });
            return [passed, failed];
          };
          Delta.prototype.reduce = function (predicate, initial) {
            return this.ops.reduce(predicate, initial);
          };
          Delta.prototype.changeLength = function () {
            return this.reduce(function (length, elem) {
              if (elem.insert) {
                return length + op.length(elem);
              } else if (elem.delete) {
                return length - elem.delete;
              }
              return length;
            }, 0);
          };
          Delta.prototype.length = function () {
            return this.reduce(function (length, elem) {
              return length + op.length(elem);
            }, 0);
          };
          Delta.prototype.slice = function (start, end) {
            start = start || 0;
            if (typeof end !== 'number') end = Infinity;
            var ops = [];
            var iter = op.iterator(this.ops);
            var index = 0;
            while (index < end && iter.hasNext()) {
              var nextOp;
              if (index < start) {
                nextOp = iter.next(start - index);
              } else {
                nextOp = iter.next(end - index);
                ops.push(nextOp);
              }
              index += op.length(nextOp);
            }
            return new Delta(ops);
          };
          Delta.prototype.compose = function (other) {
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var ops = [];
            var firstOther = otherIter.peek();
            if (
              firstOther != null &&
              typeof firstOther.retain === 'number' &&
              firstOther.attributes == null
            ) {
              var firstLeft = firstOther.retain;
              while (
                thisIter.peekType() === 'insert' &&
                thisIter.peekLength() <= firstLeft
              ) {
                firstLeft -= thisIter.peekLength();
                ops.push(thisIter.next());
              }
              if (firstOther.retain - firstLeft > 0) {
                otherIter.next(firstOther.retain - firstLeft);
              }
            }
            var delta = new Delta(ops);
            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (otherIter.peekType() === 'insert') {
                delta.push(otherIter.next());
              } else if (thisIter.peekType() === 'delete') {
                delta.push(thisIter.next());
              } else {
                var length = Math.min(
                  thisIter.peekLength(),
                  otherIter.peekLength()
                );
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);
                if (typeof otherOp.retain === 'number') {
                  var newOp = {};
                  if (typeof thisOp.retain === 'number') {
                    newOp.retain = length;
                  } else {
                    newOp.insert = thisOp.insert;
                  }
                  var attributes = op.attributes.compose(
                    thisOp.attributes,
                    otherOp.attributes,
                    typeof thisOp.retain === 'number'
                  );
                  if (attributes) newOp.attributes = attributes;
                  delta.push(newOp);
                  if (
                    !otherIter.hasNext() &&
                    equal(delta.ops[delta.ops.length - 1], newOp)
                  ) {
                    var rest = new Delta(thisIter.rest());
                    return delta.concat(rest).chop();
                  }
                } else if (
                  typeof otherOp['delete'] === 'number' &&
                  typeof thisOp.retain === 'number'
                ) {
                  delta.push(otherOp);
                }
              }
            }
            return delta.chop();
          };
          Delta.prototype.concat = function (other) {
            var delta = new Delta(this.ops.slice());
            if (other.ops.length > 0) {
              delta.push(other.ops[0]);
              delta.ops = delta.ops.concat(other.ops.slice(1));
            }
            return delta;
          };
          Delta.prototype.diff = function (other, index) {
            if (this.ops === other.ops) {
              return new Delta();
            }
            var strings = [this, other].map(function (delta2) {
              return delta2
                .map(function (op2) {
                  if (op2.insert != null) {
                    return typeof op2.insert === 'string'
                      ? op2.insert
                      : NULL_CHARACTER;
                  }
                  var prep = delta2 === other ? 'on' : 'with';
                  throw new Error('diff() called ' + prep + ' non-document');
                })
                .join('');
            });
            var delta = new Delta();
            var diffResult = diff(strings[0], strings[1], index);
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            diffResult.forEach(function (component) {
              var length = component[1].length;
              while (length > 0) {
                var opLength = 0;
                switch (component[0]) {
                  case diff.INSERT:
                    opLength = Math.min(otherIter.peekLength(), length);
                    delta.push(otherIter.next(opLength));
                    break;
                  case diff.DELETE:
                    opLength = Math.min(length, thisIter.peekLength());
                    thisIter.next(opLength);
                    delta['delete'](opLength);
                    break;
                  case diff.EQUAL:
                    opLength = Math.min(
                      thisIter.peekLength(),
                      otherIter.peekLength(),
                      length
                    );
                    var thisOp = thisIter.next(opLength);
                    var otherOp = otherIter.next(opLength);
                    if (equal(thisOp.insert, otherOp.insert)) {
                      delta.retain(
                        opLength,
                        op.attributes.diff(
                          thisOp.attributes,
                          otherOp.attributes
                        )
                      );
                    } else {
                      delta.push(otherOp)['delete'](opLength);
                    }
                    break;
                }
                length -= opLength;
              }
            });
            return delta.chop();
          };
          Delta.prototype.eachLine = function (predicate, newline) {
            newline = newline || '\n';
            var iter = op.iterator(this.ops);
            var line = new Delta();
            var i = 0;
            while (iter.hasNext()) {
              if (iter.peekType() !== 'insert') return;
              var thisOp = iter.peek();
              var start = op.length(thisOp) - iter.peekLength();
              var index =
                typeof thisOp.insert === 'string'
                  ? thisOp.insert.indexOf(newline, start) - start
                  : -1;
              if (index < 0) {
                line.push(iter.next());
              } else if (index > 0) {
                line.push(iter.next(index));
              } else {
                if (
                  predicate(line, iter.next(1).attributes || {}, i) === false
                ) {
                  return;
                }
                i += 1;
                line = new Delta();
              }
            }
            if (line.length() > 0) {
              predicate(line, {}, i);
            }
          };
          Delta.prototype.transform = function (other, priority) {
            priority = !!priority;
            if (typeof other === 'number') {
              return this.transformPosition(other, priority);
            }
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var delta = new Delta();
            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (
                thisIter.peekType() === 'insert' &&
                (priority || otherIter.peekType() !== 'insert')
              ) {
                delta.retain(op.length(thisIter.next()));
              } else if (otherIter.peekType() === 'insert') {
                delta.push(otherIter.next());
              } else {
                var length = Math.min(
                  thisIter.peekLength(),
                  otherIter.peekLength()
                );
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);
                if (thisOp['delete']) {
                  continue;
                } else if (otherOp['delete']) {
                  delta.push(otherOp);
                } else {
                  delta.retain(
                    length,
                    op.attributes.transform(
                      thisOp.attributes,
                      otherOp.attributes,
                      priority
                    )
                  );
                }
              }
            }
            return delta.chop();
          };
          Delta.prototype.transformPosition = function (index, priority) {
            priority = !!priority;
            var thisIter = op.iterator(this.ops);
            var offset = 0;
            while (thisIter.hasNext() && offset <= index) {
              var length = thisIter.peekLength();
              var nextType = thisIter.peekType();
              thisIter.next();
              if (nextType === 'delete') {
                index -= Math.min(length, index - offset);
                continue;
              } else if (
                nextType === 'insert' &&
                (offset < index || !priority)
              ) {
                index += length;
              }
              offset += length;
            }
            return index;
          };
          module2.exports = Delta;
        },
        /* 3 */
        /***/
        function (module2, exports2) {
          var hasOwn = Object.prototype.hasOwnProperty;
          var toStr = Object.prototype.toString;
          var defineProperty = Object.defineProperty;
          var gOPD = Object.getOwnPropertyDescriptor;
          var isArray2 = function isArray3(arr) {
            if (typeof Array.isArray === 'function') {
              return Array.isArray(arr);
            }
            return toStr.call(arr) === '[object Array]';
          };
          var isPlainObject2 = function isPlainObject3(obj) {
            if (!obj || toStr.call(obj) !== '[object Object]') {
              return false;
            }
            var hasOwnConstructor = hasOwn.call(obj, 'constructor');
            var hasIsPrototypeOf =
              obj.constructor &&
              obj.constructor.prototype &&
              hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
            if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
              return false;
            }
            var key;
            for (key in obj) {
            }
            return typeof key === 'undefined' || hasOwn.call(obj, key);
          };
          var setProperty = function setProperty2(target, options) {
            if (defineProperty && options.name === '__proto__') {
              defineProperty(target, options.name, {
                enumerable: true,
                configurable: true,
                value: options.newValue,
                writable: true,
              });
            } else {
              target[options.name] = options.newValue;
            }
          };
          var getProperty = function getProperty2(obj, name) {
            if (name === '__proto__') {
              if (!hasOwn.call(obj, name)) {
                return void 0;
              } else if (gOPD) {
                return gOPD(obj, name).value;
              }
            }
            return obj[name];
          };
          module2.exports = function extend2() {
            var options, name, src, copy, copyIsArray, clone;
            var target = arguments[0];
            var i = 1;
            var length = arguments.length;
            var deep = false;
            if (typeof target === 'boolean') {
              deep = target;
              target = arguments[1] || {};
              i = 2;
            }
            if (
              target == null ||
              (typeof target !== 'object' && typeof target !== 'function')
            ) {
              target = {};
            }
            for (; i < length; ++i) {
              options = arguments[i];
              if (options != null) {
                for (name in options) {
                  src = getProperty(target, name);
                  copy = getProperty(options, name);
                  if (target !== copy) {
                    if (
                      deep &&
                      copy &&
                      (isPlainObject2(copy) || (copyIsArray = isArray2(copy)))
                    ) {
                      if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && isArray2(src) ? src : [];
                      } else {
                        clone = src && isPlainObject2(src) ? src : {};
                      }
                      setProperty(target, {
                        name,
                        newValue: extend2(deep, clone, copy),
                      });
                    } else if (typeof copy !== 'undefined') {
                      setProperty(target, { name, newValue: copy });
                    }
                  }
                }
              }
            }
            return target;
          };
        },
        /* 4 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default =
            exports2.BlockEmbed =
            exports2.bubbleFormats =
              void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var NEWLINE_LENGTH = 1;
          var BlockEmbed = (function (_Parchment$Embed) {
            _inherits(BlockEmbed2, _Parchment$Embed);
            function BlockEmbed2() {
              _classCallCheck(this, BlockEmbed2);
              return _possibleConstructorReturn(
                this,
                (
                  BlockEmbed2.__proto__ || Object.getPrototypeOf(BlockEmbed2)
                ).apply(this, arguments)
              );
            }
            _createClass(BlockEmbed2, [
              {
                key: 'attach',
                value: function attach() {
                  _get(
                    BlockEmbed2.prototype.__proto__ ||
                      Object.getPrototypeOf(BlockEmbed2.prototype),
                    'attach',
                    this
                  ).call(this);
                  this.attributes = new _parchment2.default.Attributor.Store(
                    this.domNode
                  );
                },
              },
              {
                key: 'delta',
                value: function delta() {
                  return new _quillDelta2.default().insert(
                    this.value(),
                    (0, _extend2.default)(
                      this.formats(),
                      this.attributes.values()
                    )
                  );
                },
              },
              {
                key: 'format',
                value: function format(name, value) {
                  var attribute = _parchment2.default.query(
                    name,
                    _parchment2.default.Scope.BLOCK_ATTRIBUTE
                  );
                  if (attribute != null) {
                    this.attributes.attribute(attribute, value);
                  }
                },
              },
              {
                key: 'formatAt',
                value: function formatAt(index, length, name, value) {
                  this.format(name, value);
                },
              },
              {
                key: 'insertAt',
                value: function insertAt(index, value, def) {
                  if (typeof value === 'string' && value.endsWith('\n')) {
                    var block = _parchment2.default.create(Block.blotName);
                    this.parent.insertBefore(
                      block,
                      index === 0 ? this : this.next
                    );
                    block.insertAt(0, value.slice(0, -1));
                  } else {
                    _get(
                      BlockEmbed2.prototype.__proto__ ||
                        Object.getPrototypeOf(BlockEmbed2.prototype),
                      'insertAt',
                      this
                    ).call(this, index, value, def);
                  }
                },
              },
            ]);
            return BlockEmbed2;
          })(_parchment2.default.Embed);
          BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
          var Block = (function (_Parchment$Block) {
            _inherits(Block2, _Parchment$Block);
            function Block2(domNode) {
              _classCallCheck(this, Block2);
              var _this2 = _possibleConstructorReturn(
                this,
                (Block2.__proto__ || Object.getPrototypeOf(Block2)).call(
                  this,
                  domNode
                )
              );
              _this2.cache = {};
              return _this2;
            }
            _createClass(Block2, [
              {
                key: 'delta',
                value: function delta() {
                  if (this.cache.delta == null) {
                    this.cache.delta = this.descendants(
                      _parchment2.default.Leaf
                    )
                      .reduce(function (delta2, leaf) {
                        if (leaf.length() === 0) {
                          return delta2;
                        } else {
                          return delta2.insert(
                            leaf.value(),
                            bubbleFormats(leaf)
                          );
                        }
                      }, new _quillDelta2.default())
                      .insert('\n', bubbleFormats(this));
                  }
                  return this.cache.delta;
                },
              },
              {
                key: 'deleteAt',
                value: function deleteAt(index, length) {
                  _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'deleteAt',
                    this
                  ).call(this, index, length);
                  this.cache = {};
                },
              },
              {
                key: 'formatAt',
                value: function formatAt(index, length, name, value) {
                  if (length <= 0) return;
                  if (
                    _parchment2.default.query(
                      name,
                      _parchment2.default.Scope.BLOCK
                    )
                  ) {
                    if (index + length === this.length()) {
                      this.format(name, value);
                    }
                  } else {
                    _get(
                      Block2.prototype.__proto__ ||
                        Object.getPrototypeOf(Block2.prototype),
                      'formatAt',
                      this
                    ).call(
                      this,
                      index,
                      Math.min(length, this.length() - index - 1),
                      name,
                      value
                    );
                  }
                  this.cache = {};
                },
              },
              {
                key: 'insertAt',
                value: function insertAt(index, value, def) {
                  if (def != null)
                    return _get(
                      Block2.prototype.__proto__ ||
                        Object.getPrototypeOf(Block2.prototype),
                      'insertAt',
                      this
                    ).call(this, index, value, def);
                  if (value.length === 0) return;
                  var lines = value.split('\n');
                  var text = lines.shift();
                  if (text.length > 0) {
                    if (
                      index < this.length() - 1 ||
                      this.children.tail == null
                    ) {
                      _get(
                        Block2.prototype.__proto__ ||
                          Object.getPrototypeOf(Block2.prototype),
                        'insertAt',
                        this
                      ).call(this, Math.min(index, this.length() - 1), text);
                    } else {
                      this.children.tail.insertAt(
                        this.children.tail.length(),
                        text
                      );
                    }
                    this.cache = {};
                  }
                  var block = this;
                  lines.reduce(function (index2, line) {
                    block = block.split(index2, true);
                    block.insertAt(0, line);
                    return line.length;
                  }, index + text.length);
                },
              },
              {
                key: 'insertBefore',
                value: function insertBefore(blot, ref) {
                  var head = this.children.head;
                  _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'insertBefore',
                    this
                  ).call(this, blot, ref);
                  if (head instanceof _break2.default) {
                    head.remove();
                  }
                  this.cache = {};
                },
              },
              {
                key: 'length',
                value: function length() {
                  if (this.cache.length == null) {
                    this.cache.length =
                      _get(
                        Block2.prototype.__proto__ ||
                          Object.getPrototypeOf(Block2.prototype),
                        'length',
                        this
                      ).call(this) + NEWLINE_LENGTH;
                  }
                  return this.cache.length;
                },
              },
              {
                key: 'moveChildren',
                value: function moveChildren(target, ref) {
                  _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'moveChildren',
                    this
                  ).call(this, target, ref);
                  this.cache = {};
                },
              },
              {
                key: 'optimize',
                value: function optimize(context) {
                  _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'optimize',
                    this
                  ).call(this, context);
                  this.cache = {};
                },
              },
              {
                key: 'path',
                value: function path(index) {
                  return _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'path',
                    this
                  ).call(this, index, true);
                },
              },
              {
                key: 'removeChild',
                value: function removeChild(child) {
                  _get(
                    Block2.prototype.__proto__ ||
                      Object.getPrototypeOf(Block2.prototype),
                    'removeChild',
                    this
                  ).call(this, child);
                  this.cache = {};
                },
              },
              {
                key: 'split',
                value: function split(index) {
                  var force =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : false;
                  if (
                    force &&
                    (index === 0 || index >= this.length() - NEWLINE_LENGTH)
                  ) {
                    var clone = this.clone();
                    if (index === 0) {
                      this.parent.insertBefore(clone, this);
                      return this;
                    } else {
                      this.parent.insertBefore(clone, this.next);
                      return clone;
                    }
                  } else {
                    var next = _get(
                      Block2.prototype.__proto__ ||
                        Object.getPrototypeOf(Block2.prototype),
                      'split',
                      this
                    ).call(this, index, force);
                    this.cache = {};
                    return next;
                  }
                },
              },
            ]);
            return Block2;
          })(_parchment2.default.Block);
          Block.blotName = 'block';
          Block.tagName = 'P';
          Block.defaultChild = 'break';
          Block.allowedChildren = [
            _inline2.default,
            _parchment2.default.Embed,
            _text2.default,
          ];
          function bubbleFormats(blot) {
            var formats =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : {};
            if (blot == null) return formats;
            if (typeof blot.formats === 'function') {
              formats = (0, _extend2.default)(formats, blot.formats());
            }
            if (
              blot.parent == null ||
              blot.parent.blotName == 'scroll' ||
              blot.parent.statics.scope !== blot.statics.scope
            ) {
              return formats;
            }
            return bubbleFormats(blot.parent, formats);
          }
          exports2.bubbleFormats = bubbleFormats;
          exports2.BlockEmbed = BlockEmbed;
          exports2.default = Block;
        },
        /* 5 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.overload = exports2.expandConfig = void 0;
          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          __webpack_require__(50);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _editor = __webpack_require__(14);
          var _editor2 = _interopRequireDefault(_editor);
          var _emitter3 = __webpack_require__(8);
          var _emitter4 = _interopRequireDefault(_emitter3);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _selection = __webpack_require__(15);
          var _selection2 = _interopRequireDefault(_selection);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _theme = __webpack_require__(34);
          var _theme2 = _interopRequireDefault(_theme);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var debug = (0, _logger2.default)('quill');
          var Quill = (function () {
            _createClass(Quill2, null, [
              {
                key: 'debug',
                value: function debug2(limit) {
                  if (limit === true) {
                    limit = 'log';
                  }
                  _logger2.default.level(limit);
                },
              },
              {
                key: 'find',
                value: function find(node) {
                  return node.__quill || _parchment2.default.find(node);
                },
              },
              {
                key: 'import',
                value: function _import(name) {
                  if (this.imports[name] == null) {
                    debug.error(
                      'Cannot import ' +
                        name +
                        '. Are you sure it was registered?'
                    );
                  }
                  return this.imports[name];
                },
              },
              {
                key: 'register',
                value: function register(path, target) {
                  var _this = this;
                  var overwrite =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : false;
                  if (typeof path !== 'string') {
                    var name = path.attrName || path.blotName;
                    if (typeof name === 'string') {
                      this.register('formats/' + name, path, target);
                    } else {
                      Object.keys(path).forEach(function (key) {
                        _this.register(key, path[key], target);
                      });
                    }
                  } else {
                    if (this.imports[path] != null && !overwrite) {
                      debug.warn('Overwriting ' + path + ' with', target);
                    }
                    this.imports[path] = target;
                    if (
                      (path.startsWith('blots/') ||
                        path.startsWith('formats/')) &&
                      target.blotName !== 'abstract'
                    ) {
                      _parchment2.default.register(target);
                    } else if (
                      path.startsWith('modules') &&
                      typeof target.register === 'function'
                    ) {
                      target.register();
                    }
                  }
                },
              },
            ]);
            function Quill2(container2) {
              var _this2 = this;
              var options =
                arguments.length > 1 && arguments[1] !== void 0
                  ? arguments[1]
                  : {};
              _classCallCheck(this, Quill2);
              this.options = expandConfig(container2, options);
              this.container = this.options.container;
              if (this.container == null) {
                return debug.error('Invalid Quill container', container2);
              }
              if (this.options.debug) {
                Quill2.debug(this.options.debug);
              }
              var html = this.container.innerHTML.trim();
              this.container.classList.add('ql-container');
              this.container.innerHTML = '';
              this.container.__quill = this;
              this.root = this.addContainer('ql-editor');
              this.root.classList.add('ql-blank');
              this.root.setAttribute('data-gramm', false);
              this.scrollingContainer =
                this.options.scrollingContainer || this.root;
              this.emitter = new _emitter4.default();
              this.scroll = _parchment2.default.create(this.root, {
                emitter: this.emitter,
                whitelist: this.options.formats,
              });
              this.editor = new _editor2.default(this.scroll);
              this.selection = new _selection2.default(
                this.scroll,
                this.emitter
              );
              this.theme = new this.options.theme(this, this.options);
              this.keyboard = this.theme.addModule('keyboard');
              this.clipboard = this.theme.addModule('clipboard');
              this.history = this.theme.addModule('history');
              this.theme.init();
              this.emitter.on(
                _emitter4.default.events.EDITOR_CHANGE,
                function (type) {
                  if (type === _emitter4.default.events.TEXT_CHANGE) {
                    _this2.root.classList.toggle(
                      'ql-blank',
                      _this2.editor.isBlank()
                    );
                  }
                }
              );
              this.emitter.on(
                _emitter4.default.events.SCROLL_UPDATE,
                function (source, mutations) {
                  var range = _this2.selection.lastRange;
                  var index =
                    range && range.length === 0 ? range.index : void 0;
                  modify.call(
                    _this2,
                    function () {
                      return _this2.editor.update(null, mutations, index);
                    },
                    source
                  );
                }
              );
              var contents = this.clipboard.convert(
                `<div class='ql-editor' style="white-space: normal;">` +
                  html +
                  '<p><br></p></div>'
              );
              this.setContents(contents);
              this.history.clear();
              if (this.options.placeholder) {
                this.root.setAttribute(
                  'data-placeholder',
                  this.options.placeholder
                );
              }
              if (this.options.readOnly) {
                this.disable();
              }
            }
            _createClass(Quill2, [
              {
                key: 'addContainer',
                value: function addContainer(container2) {
                  var refNode =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : null;
                  if (typeof container2 === 'string') {
                    var className = container2;
                    container2 = document.createElement('div');
                    container2.classList.add(className);
                  }
                  this.container.insertBefore(container2, refNode);
                  return container2;
                },
              },
              {
                key: 'blur',
                value: function blur() {
                  this.selection.setRange(null);
                },
              },
              {
                key: 'deleteText',
                value: function deleteText(index, length, source) {
                  var _this3 = this;
                  var _overload = overload(index, length, source);
                  var _overload2 = _slicedToArray(_overload, 4);
                  index = _overload2[0];
                  length = _overload2[1];
                  source = _overload2[3];
                  return modify.call(
                    this,
                    function () {
                      return _this3.editor.deleteText(index, length);
                    },
                    source,
                    index,
                    -1 * length
                  );
                },
              },
              {
                key: 'disable',
                value: function disable() {
                  this.enable(false);
                },
              },
              {
                key: 'enable',
                value: function enable() {
                  var enabled =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : true;
                  this.scroll.enable(enabled);
                  this.container.classList.toggle('ql-disabled', !enabled);
                },
              },
              {
                key: 'focus',
                value: function focus() {
                  var scrollTop = this.scrollingContainer.scrollTop;
                  this.selection.focus();
                  this.scrollingContainer.scrollTop = scrollTop;
                  this.scrollIntoView();
                },
              },
              {
                key: 'format',
                value: function format(name, value) {
                  var _this4 = this;
                  var source =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : _emitter4.default.sources.API;
                  return modify.call(
                    this,
                    function () {
                      var range = _this4.getSelection(true);
                      var change = new _quillDelta2.default();
                      if (range == null) {
                        return change;
                      } else if (
                        _parchment2.default.query(
                          name,
                          _parchment2.default.Scope.BLOCK
                        )
                      ) {
                        change = _this4.editor.formatLine(
                          range.index,
                          range.length,
                          _defineProperty2({}, name, value)
                        );
                      } else if (range.length === 0) {
                        _this4.selection.format(name, value);
                        return change;
                      } else {
                        change = _this4.editor.formatText(
                          range.index,
                          range.length,
                          _defineProperty2({}, name, value)
                        );
                      }
                      _this4.setSelection(
                        range,
                        _emitter4.default.sources.SILENT
                      );
                      return change;
                    },
                    source
                  );
                },
              },
              {
                key: 'formatLine',
                value: function formatLine(index, length, name, value, source) {
                  var _this5 = this;
                  var formats = void 0;
                  var _overload3 = overload(index, length, name, value, source);
                  var _overload4 = _slicedToArray(_overload3, 4);
                  index = _overload4[0];
                  length = _overload4[1];
                  formats = _overload4[2];
                  source = _overload4[3];
                  return modify.call(
                    this,
                    function () {
                      return _this5.editor.formatLine(index, length, formats);
                    },
                    source,
                    index,
                    0
                  );
                },
              },
              {
                key: 'formatText',
                value: function formatText(index, length, name, value, source) {
                  var _this6 = this;
                  var formats = void 0;
                  var _overload5 = overload(index, length, name, value, source);
                  var _overload6 = _slicedToArray(_overload5, 4);
                  index = _overload6[0];
                  length = _overload6[1];
                  formats = _overload6[2];
                  source = _overload6[3];
                  return modify.call(
                    this,
                    function () {
                      return _this6.editor.formatText(index, length, formats);
                    },
                    source,
                    index,
                    0
                  );
                },
              },
              {
                key: 'getBounds',
                value: function getBounds(index) {
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0;
                  var bounds = void 0;
                  if (typeof index === 'number') {
                    bounds = this.selection.getBounds(index, length);
                  } else {
                    bounds = this.selection.getBounds(
                      index.index,
                      index.length
                    );
                  }
                  var containerBounds = this.container.getBoundingClientRect();
                  return {
                    bottom: bounds.bottom - containerBounds.top,
                    height: bounds.height,
                    left: bounds.left - containerBounds.left,
                    right: bounds.right - containerBounds.left,
                    top: bounds.top - containerBounds.top,
                    width: bounds.width,
                  };
                },
              },
              {
                key: 'getContents',
                value: function getContents() {
                  var index =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : this.getLength() - index;
                  var _overload7 = overload(index, length);
                  var _overload8 = _slicedToArray(_overload7, 2);
                  index = _overload8[0];
                  length = _overload8[1];
                  return this.editor.getContents(index, length);
                },
              },
              {
                key: 'getFormat',
                value: function getFormat() {
                  var index =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : this.getSelection(true);
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0;
                  if (typeof index === 'number') {
                    return this.editor.getFormat(index, length);
                  } else {
                    return this.editor.getFormat(index.index, index.length);
                  }
                },
              },
              {
                key: 'getIndex',
                value: function getIndex(blot) {
                  return blot.offset(this.scroll);
                },
              },
              {
                key: 'getLength',
                value: function getLength() {
                  return this.scroll.length();
                },
              },
              {
                key: 'getLeaf',
                value: function getLeaf(index) {
                  return this.scroll.leaf(index);
                },
              },
              {
                key: 'getLine',
                value: function getLine(index) {
                  return this.scroll.line(index);
                },
              },
              {
                key: 'getLines',
                value: function getLines() {
                  var index =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : Number.MAX_VALUE;
                  if (typeof index !== 'number') {
                    return this.scroll.lines(index.index, index.length);
                  } else {
                    return this.scroll.lines(index, length);
                  }
                },
              },
              {
                key: 'getModule',
                value: function getModule(name) {
                  return this.theme.modules[name];
                },
              },
              {
                key: 'getSelection',
                value: function getSelection() {
                  var focus =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : false;
                  if (focus) this.focus();
                  this.update();
                  return this.selection.getRange()[0];
                },
              },
              {
                key: 'getText',
                value: function getText() {
                  var index =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : this.getLength() - index;
                  var _overload9 = overload(index, length);
                  var _overload10 = _slicedToArray(_overload9, 2);
                  index = _overload10[0];
                  length = _overload10[1];
                  return this.editor.getText(index, length);
                },
              },
              {
                key: 'hasFocus',
                value: function hasFocus() {
                  return this.selection.hasFocus();
                },
              },
              {
                key: 'insertEmbed',
                value: function insertEmbed(index, embed, value) {
                  var _this7 = this;
                  var source =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : Quill2.sources.API;
                  return modify.call(
                    this,
                    function () {
                      return _this7.editor.insertEmbed(index, embed, value);
                    },
                    source,
                    index
                  );
                },
              },
              {
                key: 'insertText',
                value: function insertText(index, text, name, value, source) {
                  var _this8 = this;
                  var formats = void 0;
                  var _overload11 = overload(index, 0, name, value, source);
                  var _overload12 = _slicedToArray(_overload11, 4);
                  index = _overload12[0];
                  formats = _overload12[2];
                  source = _overload12[3];
                  return modify.call(
                    this,
                    function () {
                      return _this8.editor.insertText(index, text, formats);
                    },
                    source,
                    index,
                    text.length
                  );
                },
              },
              {
                key: 'isEnabled',
                value: function isEnabled() {
                  return !this.container.classList.contains('ql-disabled');
                },
              },
              {
                key: 'off',
                value: function off() {
                  return this.emitter.off.apply(this.emitter, arguments);
                },
              },
              {
                key: 'on',
                value: function on() {
                  return this.emitter.on.apply(this.emitter, arguments);
                },
              },
              {
                key: 'once',
                value: function once() {
                  return this.emitter.once.apply(this.emitter, arguments);
                },
              },
              {
                key: 'pasteHTML',
                value: function pasteHTML(index, html, source) {
                  this.clipboard.dangerouslyPasteHTML(index, html, source);
                },
              },
              {
                key: 'removeFormat',
                value: function removeFormat(index, length, source) {
                  var _this9 = this;
                  var _overload13 = overload(index, length, source);
                  var _overload14 = _slicedToArray(_overload13, 4);
                  index = _overload14[0];
                  length = _overload14[1];
                  source = _overload14[3];
                  return modify.call(
                    this,
                    function () {
                      return _this9.editor.removeFormat(index, length);
                    },
                    source,
                    index
                  );
                },
              },
              {
                key: 'scrollIntoView',
                value: function scrollIntoView() {
                  this.selection.scrollIntoView(this.scrollingContainer);
                },
              },
              {
                key: 'setContents',
                value: function setContents(delta) {
                  var _this10 = this;
                  var source =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : _emitter4.default.sources.API;
                  return modify.call(
                    this,
                    function () {
                      delta = new _quillDelta2.default(delta);
                      var length = _this10.getLength();
                      var deleted = _this10.editor.deleteText(0, length);
                      var applied = _this10.editor.applyDelta(delta);
                      var lastOp = applied.ops[applied.ops.length - 1];
                      if (
                        lastOp != null &&
                        typeof lastOp.insert === 'string' &&
                        lastOp.insert[lastOp.insert.length - 1] === '\n'
                      ) {
                        _this10.editor.deleteText(_this10.getLength() - 1, 1);
                        applied.delete(1);
                      }
                      var ret = deleted.compose(applied);
                      return ret;
                    },
                    source
                  );
                },
              },
              {
                key: 'setSelection',
                value: function setSelection(index, length, source) {
                  if (index == null) {
                    this.selection.setRange(null, length || Quill2.sources.API);
                  } else {
                    var _overload15 = overload(index, length, source);
                    var _overload16 = _slicedToArray(_overload15, 4);
                    index = _overload16[0];
                    length = _overload16[1];
                    source = _overload16[3];
                    this.selection.setRange(
                      new _selection.Range(index, length),
                      source
                    );
                    if (source !== _emitter4.default.sources.SILENT) {
                      this.selection.scrollIntoView(this.scrollingContainer);
                    }
                  }
                },
              },
              {
                key: 'setText',
                value: function setText(text) {
                  var source =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : _emitter4.default.sources.API;
                  var delta = new _quillDelta2.default().insert(text);
                  return this.setContents(delta, source);
                },
              },
              {
                key: 'update',
                value: function update() {
                  var source =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : _emitter4.default.sources.USER;
                  var change = this.scroll.update(source);
                  this.selection.update(source);
                  return change;
                },
              },
              {
                key: 'updateContents',
                value: function updateContents(delta) {
                  var _this11 = this;
                  var source =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : _emitter4.default.sources.API;
                  return modify.call(
                    this,
                    function () {
                      delta = new _quillDelta2.default(delta);
                      return _this11.editor.applyDelta(delta, source);
                    },
                    source,
                    true
                  );
                },
              },
            ]);
            return Quill2;
          })();
          Quill.DEFAULTS = {
            bounds: null,
            formats: null,
            modules: {},
            placeholder: '',
            readOnly: false,
            scrollingContainer: null,
            strict: true,
            theme: 'default',
          };
          Quill.events = _emitter4.default.events;
          Quill.sources = _emitter4.default.sources;
          Quill.version = '1.3.7';
          Quill.imports = {
            delta: _quillDelta2.default,
            parchment: _parchment2.default,
            'core/module': _module2.default,
            'core/theme': _theme2.default,
          };
          function expandConfig(container2, userConfig) {
            userConfig = (0, _extend2.default)(
              true,
              {
                container: container2,
                modules: {
                  clipboard: true,
                  keyboard: true,
                  history: true,
                },
              },
              userConfig
            );
            if (
              !userConfig.theme ||
              userConfig.theme === Quill.DEFAULTS.theme
            ) {
              userConfig.theme = _theme2.default;
            } else {
              userConfig.theme = Quill.import('themes/' + userConfig.theme);
              if (userConfig.theme == null) {
                throw new Error(
                  'Invalid theme ' + userConfig.theme + '. Did you register it?'
                );
              }
            }
            var themeConfig = (0, _extend2.default)(
              true,
              {},
              userConfig.theme.DEFAULTS
            );
            [themeConfig, userConfig].forEach(function (config) {
              config.modules = config.modules || {};
              Object.keys(config.modules).forEach(function (module3) {
                if (config.modules[module3] === true) {
                  config.modules[module3] = {};
                }
              });
            });
            var moduleNames = Object.keys(themeConfig.modules).concat(
              Object.keys(userConfig.modules)
            );
            var moduleConfig = moduleNames.reduce(function (config, name) {
              var moduleClass = Quill.import('modules/' + name);
              if (moduleClass == null) {
                debug.error(
                  'Cannot load ' +
                    name +
                    ' module. Are you sure you registered it?'
                );
              } else {
                config[name] = moduleClass.DEFAULTS || {};
              }
              return config;
            }, {});
            if (
              userConfig.modules != null &&
              userConfig.modules.toolbar &&
              userConfig.modules.toolbar.constructor !== Object
            ) {
              userConfig.modules.toolbar = {
                container: userConfig.modules.toolbar,
              };
            }
            userConfig = (0, _extend2.default)(
              true,
              {},
              Quill.DEFAULTS,
              { modules: moduleConfig },
              themeConfig,
              userConfig
            );
            ['bounds', 'container', 'scrollingContainer'].forEach(
              function (key) {
                if (typeof userConfig[key] === 'string') {
                  userConfig[key] = document.querySelector(userConfig[key]);
                }
              }
            );
            userConfig.modules = Object.keys(userConfig.modules).reduce(
              function (config, name) {
                if (userConfig.modules[name]) {
                  config[name] = userConfig.modules[name];
                }
                return config;
              },
              {}
            );
            return userConfig;
          }
          function modify(modifier, source, index, shift) {
            if (
              this.options.strict &&
              !this.isEnabled() &&
              source === _emitter4.default.sources.USER
            ) {
              return new _quillDelta2.default();
            }
            var range = index == null ? null : this.getSelection();
            var oldDelta = this.editor.delta;
            var change = modifier();
            if (range != null) {
              if (index === true) index = range.index;
              if (shift == null) {
                range = shiftRange(range, change, source);
              } else if (shift !== 0) {
                range = shiftRange(range, index, shift, source);
              }
              this.setSelection(range, _emitter4.default.sources.SILENT);
            }
            if (change.length() > 0) {
              var _emitter;
              var args = [
                _emitter4.default.events.TEXT_CHANGE,
                change,
                oldDelta,
                source,
              ];
              (_emitter = this.emitter).emit.apply(
                _emitter,
                [_emitter4.default.events.EDITOR_CHANGE].concat(args)
              );
              if (source !== _emitter4.default.sources.SILENT) {
                var _emitter2;
                (_emitter2 = this.emitter).emit.apply(_emitter2, args);
              }
            }
            return change;
          }
          function overload(index, length, name, value, source) {
            var formats = {};
            if (
              typeof index.index === 'number' &&
              typeof index.length === 'number'
            ) {
              if (typeof length !== 'number') {
                (source = value),
                  (value = name),
                  (name = length),
                  (length = index.length),
                  (index = index.index);
              } else {
                (length = index.length), (index = index.index);
              }
            } else if (typeof length !== 'number') {
              (source = value), (value = name), (name = length), (length = 0);
            }
            if (
              (typeof name === 'undefined' ? 'undefined' : _typeof(name)) ===
              'object'
            ) {
              formats = name;
              source = value;
            } else if (typeof name === 'string') {
              if (value != null) {
                formats[name] = value;
              } else {
                source = name;
              }
            }
            source = source || _emitter4.default.sources.API;
            return [index, length, formats, source];
          }
          function shiftRange(range, index, length, source) {
            if (range == null) return null;
            var start = void 0,
              end = void 0;
            if (index instanceof _quillDelta2.default) {
              var _map = [range.index, range.index + range.length].map(
                function (pos) {
                  return index.transformPosition(
                    pos,
                    source !== _emitter4.default.sources.USER
                  );
                }
              );
              var _map2 = _slicedToArray(_map, 2);
              start = _map2[0];
              end = _map2[1];
            } else {
              var _map3 = [range.index, range.index + range.length].map(
                function (pos) {
                  if (
                    pos < index ||
                    (pos === index && source === _emitter4.default.sources.USER)
                  )
                    return pos;
                  if (length >= 0) {
                    return pos + length;
                  } else {
                    return Math.max(index, pos + length);
                  }
                }
              );
              var _map4 = _slicedToArray(_map3, 2);
              start = _map4[0];
              end = _map4[1];
            }
            return new _selection.Range(start, end - start);
          }
          exports2.expandConfig = expandConfig;
          exports2.overload = overload;
          exports2.default = Quill;
        },
        /* 6 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Inline = (function (_Parchment$Inline) {
            _inherits(Inline2, _Parchment$Inline);
            function Inline2() {
              _classCallCheck(this, Inline2);
              return _possibleConstructorReturn(
                this,
                (Inline2.__proto__ || Object.getPrototypeOf(Inline2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Inline2,
              [
                {
                  key: 'formatAt',
                  value: function formatAt(index, length, name, value) {
                    if (
                      Inline2.compare(this.statics.blotName, name) < 0 &&
                      _parchment2.default.query(
                        name,
                        _parchment2.default.Scope.BLOT
                      )
                    ) {
                      var blot = this.isolate(index, length);
                      if (value) {
                        blot.wrap(name, value);
                      }
                    } else {
                      _get(
                        Inline2.prototype.__proto__ ||
                          Object.getPrototypeOf(Inline2.prototype),
                        'formatAt',
                        this
                      ).call(this, index, length, name, value);
                    }
                  },
                },
                {
                  key: 'optimize',
                  value: function optimize(context) {
                    _get(
                      Inline2.prototype.__proto__ ||
                        Object.getPrototypeOf(Inline2.prototype),
                      'optimize',
                      this
                    ).call(this, context);
                    if (
                      this.parent instanceof Inline2 &&
                      Inline2.compare(
                        this.statics.blotName,
                        this.parent.statics.blotName
                      ) > 0
                    ) {
                      var parent = this.parent.isolate(
                        this.offset(),
                        this.length()
                      );
                      this.moveChildren(parent);
                      parent.wrap(this);
                    }
                  },
                },
              ],
              [
                {
                  key: 'compare',
                  value: function compare(self2, other) {
                    var selfIndex = Inline2.order.indexOf(self2);
                    var otherIndex = Inline2.order.indexOf(other);
                    if (selfIndex >= 0 || otherIndex >= 0) {
                      return selfIndex - otherIndex;
                    } else if (self2 === other) {
                      return 0;
                    } else if (self2 < other) {
                      return -1;
                    } else {
                      return 1;
                    }
                  },
                },
              ]
            );
            return Inline2;
          })(_parchment2.default.Inline);
          Inline.allowedChildren = [
            Inline,
            _parchment2.default.Embed,
            _text2.default,
          ];
          Inline.order = [
            'cursor',
            'inline',
            // Must be lower
            'underline',
            'strike',
            'italic',
            'bold',
            'script',
            'link',
            'code',
            // Must be higher
          ];
          exports2.default = Inline;
        },
        /* 7 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var TextBlot = (function (_Parchment$Text) {
            _inherits(TextBlot2, _Parchment$Text);
            function TextBlot2() {
              _classCallCheck(this, TextBlot2);
              return _possibleConstructorReturn(
                this,
                (TextBlot2.__proto__ || Object.getPrototypeOf(TextBlot2)).apply(
                  this,
                  arguments
                )
              );
            }
            return TextBlot2;
          })(_parchment2.default.Text);
          exports2.default = TextBlot;
        },
        /* 8 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _eventemitter = __webpack_require__(54);
          var _eventemitter2 = _interopRequireDefault(_eventemitter);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var debug = (0, _logger2.default)('quill:events');
          var EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];
          EVENTS.forEach(function (eventName) {
            document.addEventListener(eventName, function () {
              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }
              [].slice
                .call(document.querySelectorAll('.ql-container'))
                .forEach(function (node) {
                  if (node.__quill && node.__quill.emitter) {
                    var _node$__quill$emitter;
                    (_node$__quill$emitter =
                      node.__quill.emitter).handleDOM.apply(
                      _node$__quill$emitter,
                      args
                    );
                  }
                });
            });
          });
          var Emitter = (function (_EventEmitter) {
            _inherits(Emitter2, _EventEmitter);
            function Emitter2() {
              _classCallCheck(this, Emitter2);
              var _this = _possibleConstructorReturn(
                this,
                (Emitter2.__proto__ || Object.getPrototypeOf(Emitter2)).call(
                  this
                )
              );
              _this.listeners = {};
              _this.on('error', debug.error);
              return _this;
            }
            _createClass(Emitter2, [
              {
                key: 'emit',
                value: function emit() {
                  debug.log.apply(debug, arguments);
                  _get(
                    Emitter2.prototype.__proto__ ||
                      Object.getPrototypeOf(Emitter2.prototype),
                    'emit',
                    this
                  ).apply(this, arguments);
                },
              },
              {
                key: 'handleDOM',
                value: function handleDOM(event) {
                  for (
                    var _len2 = arguments.length,
                      args = Array(_len2 > 1 ? _len2 - 1 : 0),
                      _key2 = 1;
                    _key2 < _len2;
                    _key2++
                  ) {
                    args[_key2 - 1] = arguments[_key2];
                  }
                  (this.listeners[event.type] || []).forEach(function (_ref) {
                    var node = _ref.node,
                      handler = _ref.handler;
                    if (event.target === node || node.contains(event.target)) {
                      handler.apply(void 0, [event].concat(args));
                    }
                  });
                },
              },
              {
                key: 'listenDOM',
                value: function listenDOM(eventName, node, handler) {
                  if (!this.listeners[eventName]) {
                    this.listeners[eventName] = [];
                  }
                  this.listeners[eventName].push({ node, handler });
                },
              },
            ]);
            return Emitter2;
          })(_eventemitter2.default);
          Emitter.events = {
            EDITOR_CHANGE: 'editor-change',
            SCROLL_BEFORE_UPDATE: 'scroll-before-update',
            SCROLL_OPTIMIZE: 'scroll-optimize',
            SCROLL_UPDATE: 'scroll-update',
            SELECTION_CHANGE: 'selection-change',
            TEXT_CHANGE: 'text-change',
          };
          Emitter.sources = {
            API: 'api',
            SILENT: 'silent',
            USER: 'user',
          };
          exports2.default = Emitter;
        },
        /* 9 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var Module = function Module2(quill2) {
            var options =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : {};
            _classCallCheck(this, Module2);
            this.quill = quill2;
            this.options = options;
          };
          Module.DEFAULTS = {};
          exports2.default = Module;
        },
        /* 10 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var levels = ['error', 'warn', 'log', 'info'];
          var level = 'warn';
          function debug(method) {
            if (levels.indexOf(method) <= levels.indexOf(level)) {
              var _console;
              for (
                var _len = arguments.length,
                  args = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }
              (_console = console)[method].apply(_console, args);
            }
          }
          function namespace(ns) {
            return levels.reduce(function (logger, method) {
              logger[method] = debug.bind(console, method, ns);
              return logger;
            }, {});
          }
          debug.level = namespace.level = function (newLevel) {
            level = newLevel;
          };
          exports2.default = namespace;
        },
        /* 11 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var pSlice = Array.prototype.slice;
          var objectKeys = __webpack_require__(52);
          var isArguments2 = __webpack_require__(53);
          var deepEqual = (module2.exports = function (actual, expected, opts) {
            if (!opts) opts = {};
            if (actual === expected) {
              return true;
            } else if (actual instanceof Date && expected instanceof Date) {
              return actual.getTime() === expected.getTime();
            } else if (
              !actual ||
              !expected ||
              (typeof actual != 'object' && typeof expected != 'object')
            ) {
              return opts.strict ? actual === expected : actual == expected;
            } else {
              return objEquiv(actual, expected, opts);
            }
          });
          function isUndefinedOrNull(value) {
            return value === null || value === void 0;
          }
          function isBuffer2(x2) {
            if (!x2 || typeof x2 !== 'object' || typeof x2.length !== 'number')
              return false;
            if (
              typeof x2.copy !== 'function' ||
              typeof x2.slice !== 'function'
            ) {
              return false;
            }
            if (x2.length > 0 && typeof x2[0] !== 'number') return false;
            return true;
          }
          function objEquiv(a, b, opts) {
            var i, key;
            if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
            if (a.prototype !== b.prototype) return false;
            if (isArguments2(a)) {
              if (!isArguments2(b)) {
                return false;
              }
              a = pSlice.call(a);
              b = pSlice.call(b);
              return deepEqual(a, b, opts);
            }
            if (isBuffer2(a)) {
              if (!isBuffer2(b)) {
                return false;
              }
              if (a.length !== b.length) return false;
              for (i = 0; i < a.length; i++) {
                if (a[i] !== b[i]) return false;
              }
              return true;
            }
            try {
              var ka2 = objectKeys(a),
                kb2 = objectKeys(b);
            } catch (e) {
              return false;
            }
            if (ka2.length != kb2.length) return false;
            ka2.sort();
            kb2.sort();
            for (i = ka2.length - 1; i >= 0; i--) {
              if (ka2[i] != kb2[i]) return false;
            }
            for (i = ka2.length - 1; i >= 0; i--) {
              key = ka2[i];
              if (!deepEqual(a[key], b[key], opts)) return false;
            }
            return typeof a === typeof b;
          }
        },
        /* 12 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', { value: true });
          var Registry = __webpack_require__(1);
          var Attributor =
            /** @class */
            (function () {
              function Attributor2(attrName, keyName, options) {
                if (options === void 0) {
                  options = {};
                }
                this.attrName = attrName;
                this.keyName = keyName;
                var attributeBit =
                  Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
                if (options.scope != null) {
                  this.scope =
                    (options.scope & Registry.Scope.LEVEL) | attributeBit;
                } else {
                  this.scope = Registry.Scope.ATTRIBUTE;
                }
                if (options.whitelist != null)
                  this.whitelist = options.whitelist;
              }
              Attributor2.keys = function (node) {
                return [].map.call(node.attributes, function (item) {
                  return item.name;
                });
              };
              Attributor2.prototype.add = function (node, value) {
                if (!this.canAdd(node, value)) return false;
                node.setAttribute(this.keyName, value);
                return true;
              };
              Attributor2.prototype.canAdd = function (node, value) {
                var match = Registry.query(
                  node,
                  Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE)
                );
                if (match == null) return false;
                if (this.whitelist == null) return true;
                if (typeof value === 'string') {
                  return (
                    this.whitelist.indexOf(value.replace(/["']/g, '')) > -1
                  );
                } else {
                  return this.whitelist.indexOf(value) > -1;
                }
              };
              Attributor2.prototype.remove = function (node) {
                node.removeAttribute(this.keyName);
              };
              Attributor2.prototype.value = function (node) {
                var value = node.getAttribute(this.keyName);
                if (this.canAdd(node, value) && value) {
                  return value;
                }
                return '';
              };
              return Attributor2;
            })();
          exports2.default = Attributor;
        },
        /* 13 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.Code = void 0;
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Code = (function (_Inline) {
            _inherits(Code2, _Inline);
            function Code2() {
              _classCallCheck(this, Code2);
              return _possibleConstructorReturn(
                this,
                (Code2.__proto__ || Object.getPrototypeOf(Code2)).apply(
                  this,
                  arguments
                )
              );
            }
            return Code2;
          })(_inline2.default);
          Code.blotName = 'code';
          Code.tagName = 'CODE';
          var CodeBlock = (function (_Block) {
            _inherits(CodeBlock2, _Block);
            function CodeBlock2() {
              _classCallCheck(this, CodeBlock2);
              return _possibleConstructorReturn(
                this,
                (
                  CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2)
                ).apply(this, arguments)
              );
            }
            _createClass(
              CodeBlock2,
              [
                {
                  key: 'delta',
                  value: function delta() {
                    var _this3 = this;
                    var text = this.domNode.textContent;
                    if (text.endsWith('\n')) {
                      text = text.slice(0, -1);
                    }
                    return text.split('\n').reduce(function (delta2, frag) {
                      return delta2.insert(frag).insert('\n', _this3.formats());
                    }, new _quillDelta2.default());
                  },
                },
                {
                  key: 'format',
                  value: function format(name, value) {
                    if (name === this.statics.blotName && value) return;
                    var _descendant = this.descendant(
                        _text2.default,
                        this.length() - 1
                      ),
                      _descendant2 = _slicedToArray(_descendant, 1),
                      text = _descendant2[0];
                    if (text != null) {
                      text.deleteAt(text.length() - 1, 1);
                    }
                    _get(
                      CodeBlock2.prototype.__proto__ ||
                        Object.getPrototypeOf(CodeBlock2.prototype),
                      'format',
                      this
                    ).call(this, name, value);
                  },
                },
                {
                  key: 'formatAt',
                  value: function formatAt(index, length, name, value) {
                    if (length === 0) return;
                    if (
                      _parchment2.default.query(
                        name,
                        _parchment2.default.Scope.BLOCK
                      ) == null ||
                      (name === this.statics.blotName &&
                        value === this.statics.formats(this.domNode))
                    ) {
                      return;
                    }
                    var nextNewline = this.newlineIndex(index);
                    if (nextNewline < 0 || nextNewline >= index + length)
                      return;
                    var prevNewline = this.newlineIndex(index, true) + 1;
                    var isolateLength = nextNewline - prevNewline + 1;
                    var blot = this.isolate(prevNewline, isolateLength);
                    var next = blot.next;
                    blot.format(name, value);
                    if (next instanceof CodeBlock2) {
                      next.formatAt(
                        0,
                        index - prevNewline + length - isolateLength,
                        name,
                        value
                      );
                    }
                  },
                },
                {
                  key: 'insertAt',
                  value: function insertAt(index, value, def) {
                    if (def != null) return;
                    var _descendant3 = this.descendant(_text2.default, index),
                      _descendant4 = _slicedToArray(_descendant3, 2),
                      text = _descendant4[0],
                      offset = _descendant4[1];
                    text.insertAt(offset, value);
                  },
                },
                {
                  key: 'length',
                  value: function length() {
                    var length2 = this.domNode.textContent.length;
                    if (!this.domNode.textContent.endsWith('\n')) {
                      return length2 + 1;
                    }
                    return length2;
                  },
                },
                {
                  key: 'newlineIndex',
                  value: function newlineIndex(searchIndex) {
                    var reverse =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : false;
                    if (!reverse) {
                      var offset = this.domNode.textContent
                        .slice(searchIndex)
                        .indexOf('\n');
                      return offset > -1 ? searchIndex + offset : -1;
                    } else {
                      return this.domNode.textContent
                        .slice(0, searchIndex)
                        .lastIndexOf('\n');
                    }
                  },
                },
                {
                  key: 'optimize',
                  value: function optimize(context) {
                    if (!this.domNode.textContent.endsWith('\n')) {
                      this.appendChild(
                        _parchment2.default.create('text', '\n')
                      );
                    }
                    _get(
                      CodeBlock2.prototype.__proto__ ||
                        Object.getPrototypeOf(CodeBlock2.prototype),
                      'optimize',
                      this
                    ).call(this, context);
                    var next = this.next;
                    if (
                      next != null &&
                      next.prev === this &&
                      next.statics.blotName === this.statics.blotName &&
                      this.statics.formats(this.domNode) ===
                        next.statics.formats(next.domNode)
                    ) {
                      next.optimize(context);
                      next.moveChildren(this);
                      next.remove();
                    }
                  },
                },
                {
                  key: 'replace',
                  value: function replace(target) {
                    _get(
                      CodeBlock2.prototype.__proto__ ||
                        Object.getPrototypeOf(CodeBlock2.prototype),
                      'replace',
                      this
                    ).call(this, target);
                    [].slice
                      .call(this.domNode.querySelectorAll('*'))
                      .forEach(function (node) {
                        var blot = _parchment2.default.find(node);
                        if (blot == null) {
                          node.parentNode.removeChild(node);
                        } else if (blot instanceof _parchment2.default.Embed) {
                          blot.remove();
                        } else {
                          blot.unwrap();
                        }
                      });
                  },
                },
              ],
              [
                {
                  key: 'create',
                  value: function create(value) {
                    var domNode = _get(
                      CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2),
                      'create',
                      this
                    ).call(this, value);
                    domNode.setAttribute('spellcheck', false);
                    return domNode;
                  },
                },
                {
                  key: 'formats',
                  value: function formats() {
                    return true;
                  },
                },
              ]
            );
            return CodeBlock2;
          })(_block2.default);
          CodeBlock.blotName = 'code-block';
          CodeBlock.tagName = 'PRE';
          CodeBlock.TAB = '  ';
          exports2.Code = Code;
          exports2.default = CodeBlock;
        },
        /* 14 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _op = __webpack_require__(20);
          var _op2 = _interopRequireDefault(_op);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _cursor = __webpack_require__(24);
          var _cursor2 = _interopRequireDefault(_cursor);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var ASCII = /^[ -~]*$/;
          var Editor = (function () {
            function Editor2(scroll) {
              _classCallCheck(this, Editor2);
              this.scroll = scroll;
              this.delta = this.getDelta();
            }
            _createClass(Editor2, [
              {
                key: 'applyDelta',
                value: function applyDelta(delta) {
                  var _this = this;
                  var consumeNextNewline = false;
                  this.scroll.update();
                  var scrollLength = this.scroll.length();
                  this.scroll.batchStart();
                  delta = normalizeDelta(delta);
                  delta.reduce(function (index, op) {
                    var length =
                      op.retain || op.delete || op.insert.length || 1;
                    var attributes = op.attributes || {};
                    if (op.insert != null) {
                      if (typeof op.insert === 'string') {
                        var text = op.insert;
                        if (text.endsWith('\n') && consumeNextNewline) {
                          consumeNextNewline = false;
                          text = text.slice(0, -1);
                        }
                        if (index >= scrollLength && !text.endsWith('\n')) {
                          consumeNextNewline = true;
                        }
                        _this.scroll.insertAt(index, text);
                        var _scroll$line = _this.scroll.line(index),
                          _scroll$line2 = _slicedToArray(_scroll$line, 2),
                          line = _scroll$line2[0],
                          offset = _scroll$line2[1];
                        var formats = (0, _extend2.default)(
                          {},
                          (0, _block.bubbleFormats)(line)
                        );
                        if (line instanceof _block2.default) {
                          var _line$descendant = line.descendant(
                              _parchment2.default.Leaf,
                              offset
                            ),
                            _line$descendant2 = _slicedToArray(
                              _line$descendant,
                              1
                            ),
                            leaf = _line$descendant2[0];
                          formats = (0, _extend2.default)(
                            formats,
                            (0, _block.bubbleFormats)(leaf)
                          );
                        }
                        attributes =
                          _op2.default.attributes.diff(formats, attributes) ||
                          {};
                      } else if (_typeof(op.insert) === 'object') {
                        var key = Object.keys(op.insert)[0];
                        if (key == null) return index;
                        _this.scroll.insertAt(index, key, op.insert[key]);
                      }
                      scrollLength += length;
                    }
                    Object.keys(attributes).forEach(function (name) {
                      _this.scroll.formatAt(
                        index,
                        length,
                        name,
                        attributes[name]
                      );
                    });
                    return index + length;
                  }, 0);
                  delta.reduce(function (index, op) {
                    if (typeof op.delete === 'number') {
                      _this.scroll.deleteAt(index, op.delete);
                      return index;
                    }
                    return index + (op.retain || op.insert.length || 1);
                  }, 0);
                  this.scroll.batchEnd();
                  return this.update(delta);
                },
              },
              {
                key: 'deleteText',
                value: function deleteText(index, length) {
                  this.scroll.deleteAt(index, length);
                  return this.update(
                    new _quillDelta2.default().retain(index).delete(length)
                  );
                },
              },
              {
                key: 'formatLine',
                value: function formatLine(index, length) {
                  var _this2 = this;
                  var formats =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                  this.scroll.update();
                  Object.keys(formats).forEach(function (format) {
                    if (
                      _this2.scroll.whitelist != null &&
                      !_this2.scroll.whitelist[format]
                    )
                      return;
                    var lines = _this2.scroll.lines(index, Math.max(length, 1));
                    var lengthRemaining = length;
                    lines.forEach(function (line) {
                      var lineLength = line.length();
                      if (!(line instanceof _code2.default)) {
                        line.format(format, formats[format]);
                      } else {
                        var codeIndex = index - line.offset(_this2.scroll);
                        var codeLength =
                          line.newlineIndex(codeIndex + lengthRemaining) -
                          codeIndex +
                          1;
                        line.formatAt(
                          codeIndex,
                          codeLength,
                          format,
                          formats[format]
                        );
                      }
                      lengthRemaining -= lineLength;
                    });
                  });
                  this.scroll.optimize();
                  return this.update(
                    new _quillDelta2.default()
                      .retain(index)
                      .retain(length, (0, _clone2.default)(formats))
                  );
                },
              },
              {
                key: 'formatText',
                value: function formatText(index, length) {
                  var _this3 = this;
                  var formats =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                  Object.keys(formats).forEach(function (format) {
                    _this3.scroll.formatAt(
                      index,
                      length,
                      format,
                      formats[format]
                    );
                  });
                  return this.update(
                    new _quillDelta2.default()
                      .retain(index)
                      .retain(length, (0, _clone2.default)(formats))
                  );
                },
              },
              {
                key: 'getContents',
                value: function getContents(index, length) {
                  return this.delta.slice(index, index + length);
                },
              },
              {
                key: 'getDelta',
                value: function getDelta() {
                  return this.scroll.lines().reduce(function (delta, line) {
                    return delta.concat(line.delta());
                  }, new _quillDelta2.default());
                },
              },
              {
                key: 'getFormat',
                value: function getFormat(index) {
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0;
                  var lines = [],
                    leaves = [];
                  if (length === 0) {
                    this.scroll.path(index).forEach(function (path) {
                      var _path = _slicedToArray(path, 1),
                        blot = _path[0];
                      if (blot instanceof _block2.default) {
                        lines.push(blot);
                      } else if (blot instanceof _parchment2.default.Leaf) {
                        leaves.push(blot);
                      }
                    });
                  } else {
                    lines = this.scroll.lines(index, length);
                    leaves = this.scroll.descendants(
                      _parchment2.default.Leaf,
                      index,
                      length
                    );
                  }
                  var formatsArr = [lines, leaves].map(function (blots) {
                    if (blots.length === 0) return {};
                    var formats = (0, _block.bubbleFormats)(blots.shift());
                    while (Object.keys(formats).length > 0) {
                      var blot = blots.shift();
                      if (blot == null) return formats;
                      formats = combineFormats(
                        (0, _block.bubbleFormats)(blot),
                        formats
                      );
                    }
                    return formats;
                  });
                  return _extend2.default.apply(_extend2.default, formatsArr);
                },
              },
              {
                key: 'getText',
                value: function getText(index, length) {
                  return this.getContents(index, length)
                    .filter(function (op) {
                      return typeof op.insert === 'string';
                    })
                    .map(function (op) {
                      return op.insert;
                    })
                    .join('');
                },
              },
              {
                key: 'insertEmbed',
                value: function insertEmbed(index, embed, value) {
                  this.scroll.insertAt(index, embed, value);
                  return this.update(
                    new _quillDelta2.default()
                      .retain(index)
                      .insert(_defineProperty2({}, embed, value))
                  );
                },
              },
              {
                key: 'insertText',
                value: function insertText(index, text) {
                  var _this4 = this;
                  var formats =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                  text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
                  this.scroll.insertAt(index, text);
                  Object.keys(formats).forEach(function (format) {
                    _this4.scroll.formatAt(
                      index,
                      text.length,
                      format,
                      formats[format]
                    );
                  });
                  return this.update(
                    new _quillDelta2.default()
                      .retain(index)
                      .insert(text, (0, _clone2.default)(formats))
                  );
                },
              },
              {
                key: 'isBlank',
                value: function isBlank() {
                  if (this.scroll.children.length == 0) return true;
                  if (this.scroll.children.length > 1) return false;
                  var block = this.scroll.children.head;
                  if (block.statics.blotName !== _block2.default.blotName)
                    return false;
                  if (block.children.length > 1) return false;
                  return block.children.head instanceof _break2.default;
                },
              },
              {
                key: 'removeFormat',
                value: function removeFormat(index, length) {
                  var text = this.getText(index, length);
                  var _scroll$line3 = this.scroll.line(index + length),
                    _scroll$line4 = _slicedToArray(_scroll$line3, 2),
                    line = _scroll$line4[0],
                    offset = _scroll$line4[1];
                  var suffixLength = 0,
                    suffix = new _quillDelta2.default();
                  if (line != null) {
                    if (!(line instanceof _code2.default)) {
                      suffixLength = line.length() - offset;
                    } else {
                      suffixLength = line.newlineIndex(offset) - offset + 1;
                    }
                    suffix = line
                      .delta()
                      .slice(offset, offset + suffixLength - 1)
                      .insert('\n');
                  }
                  var contents = this.getContents(index, length + suffixLength);
                  var diff = contents.diff(
                    new _quillDelta2.default().insert(text).concat(suffix)
                  );
                  var delta = new _quillDelta2.default()
                    .retain(index)
                    .concat(diff);
                  return this.applyDelta(delta);
                },
              },
              {
                key: 'update',
                value: function update(change) {
                  var mutations =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : [];
                  var cursorIndex =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0;
                  var oldDelta = this.delta;
                  if (
                    mutations.length === 1 &&
                    mutations[0].type === 'characterData' &&
                    mutations[0].target.data.match(ASCII) &&
                    _parchment2.default.find(mutations[0].target)
                  ) {
                    var textBlot = _parchment2.default.find(
                      mutations[0].target
                    );
                    var formats = (0, _block.bubbleFormats)(textBlot);
                    var index = textBlot.offset(this.scroll);
                    var oldValue = mutations[0].oldValue.replace(
                      _cursor2.default.CONTENTS,
                      ''
                    );
                    var oldText = new _quillDelta2.default().insert(oldValue);
                    var newText = new _quillDelta2.default().insert(
                      textBlot.value()
                    );
                    var diffDelta = new _quillDelta2.default()
                      .retain(index)
                      .concat(oldText.diff(newText, cursorIndex));
                    change = diffDelta.reduce(function (delta, op) {
                      if (op.insert) {
                        return delta.insert(op.insert, formats);
                      } else {
                        return delta.push(op);
                      }
                    }, new _quillDelta2.default());
                    this.delta = oldDelta.compose(change);
                  } else {
                    this.delta = this.getDelta();
                    if (
                      !change ||
                      !(0, _deepEqual2.default)(
                        oldDelta.compose(change),
                        this.delta
                      )
                    ) {
                      change = oldDelta.diff(this.delta, cursorIndex);
                    }
                  }
                  return change;
                },
              },
            ]);
            return Editor2;
          })();
          function combineFormats(formats, combined) {
            return Object.keys(combined).reduce(function (merged, name) {
              if (formats[name] == null) return merged;
              if (combined[name] === formats[name]) {
                merged[name] = combined[name];
              } else if (Array.isArray(combined[name])) {
                if (combined[name].indexOf(formats[name]) < 0) {
                  merged[name] = combined[name].concat([formats[name]]);
                }
              } else {
                merged[name] = [combined[name], formats[name]];
              }
              return merged;
            }, {});
          }
          function normalizeDelta(delta) {
            return delta.reduce(function (delta2, op) {
              if (op.insert === 1) {
                var attributes = (0, _clone2.default)(op.attributes);
                delete attributes['image'];
                return delta2.insert(
                  { image: op.attributes.image },
                  attributes
                );
              }
              if (
                op.attributes != null &&
                (op.attributes.list === true || op.attributes.bullet === true)
              ) {
                op = (0, _clone2.default)(op);
                if (op.attributes.list) {
                  op.attributes.list = 'ordered';
                } else {
                  op.attributes.list = 'bullet';
                  delete op.attributes.bullet;
                }
              }
              if (typeof op.insert === 'string') {
                var text = op.insert
                  .replace(/\r\n/g, '\n')
                  .replace(/\r/g, '\n');
                return delta2.insert(text, op.attributes);
              }
              return delta2.push(op);
            }, new _quillDelta2.default());
          }
          exports2.default = Editor;
        },
        /* 15 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.Range = void 0;
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _emitter3 = __webpack_require__(8);
          var _emitter4 = _interopRequireDefault(_emitter3);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
              for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                arr2[i] = arr[i];
              }
              return arr2;
            } else {
              return Array.from(arr);
            }
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var debug = (0, _logger2.default)('quill:selection');
          var Range = function Range2(index) {
            var length =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : 0;
            _classCallCheck(this, Range2);
            this.index = index;
            this.length = length;
          };
          var Selection = (function () {
            function Selection2(scroll, emitter) {
              var _this = this;
              _classCallCheck(this, Selection2);
              this.emitter = emitter;
              this.scroll = scroll;
              this.composing = false;
              this.mouseDown = false;
              this.root = this.scroll.domNode;
              this.cursor = _parchment2.default.create('cursor', this);
              this.lastRange = this.savedRange = new Range(0, 0);
              this.handleComposition();
              this.handleDragging();
              this.emitter.listenDOM('selectionchange', document, function () {
                if (!_this.mouseDown) {
                  setTimeout(
                    _this.update.bind(_this, _emitter4.default.sources.USER),
                    1
                  );
                }
              });
              this.emitter.on(
                _emitter4.default.events.EDITOR_CHANGE,
                function (type, delta) {
                  if (
                    type === _emitter4.default.events.TEXT_CHANGE &&
                    delta.length() > 0
                  ) {
                    _this.update(_emitter4.default.sources.SILENT);
                  }
                }
              );
              this.emitter.on(
                _emitter4.default.events.SCROLL_BEFORE_UPDATE,
                function () {
                  if (!_this.hasFocus()) return;
                  var native = _this.getNativeRange();
                  if (native == null) return;
                  if (native.start.node === _this.cursor.textNode) return;
                  _this.emitter.once(
                    _emitter4.default.events.SCROLL_UPDATE,
                    function () {
                      try {
                        _this.setNativeRange(
                          native.start.node,
                          native.start.offset,
                          native.end.node,
                          native.end.offset
                        );
                      } catch (ignored) {}
                    }
                  );
                }
              );
              this.emitter.on(
                _emitter4.default.events.SCROLL_OPTIMIZE,
                function (mutations, context) {
                  if (context.range) {
                    var _context$range = context.range,
                      startNode = _context$range.startNode,
                      startOffset = _context$range.startOffset,
                      endNode = _context$range.endNode,
                      endOffset = _context$range.endOffset;
                    _this.setNativeRange(
                      startNode,
                      startOffset,
                      endNode,
                      endOffset
                    );
                  }
                }
              );
              this.update(_emitter4.default.sources.SILENT);
            }
            _createClass(Selection2, [
              {
                key: 'handleComposition',
                value: function handleComposition() {
                  var _this2 = this;
                  this.root.addEventListener('compositionstart', function () {
                    _this2.composing = true;
                  });
                  this.root.addEventListener('compositionend', function () {
                    _this2.composing = false;
                    if (_this2.cursor.parent) {
                      var range = _this2.cursor.restore();
                      if (!range) return;
                      setTimeout(function () {
                        _this2.setNativeRange(
                          range.startNode,
                          range.startOffset,
                          range.endNode,
                          range.endOffset
                        );
                      }, 1);
                    }
                  });
                },
              },
              {
                key: 'handleDragging',
                value: function handleDragging() {
                  var _this3 = this;
                  this.emitter.listenDOM(
                    'mousedown',
                    document.body,
                    function () {
                      _this3.mouseDown = true;
                    }
                  );
                  this.emitter.listenDOM('mouseup', document.body, function () {
                    _this3.mouseDown = false;
                    _this3.update(_emitter4.default.sources.USER);
                  });
                },
              },
              {
                key: 'focus',
                value: function focus() {
                  if (this.hasFocus()) return;
                  this.root.focus();
                  this.setRange(this.savedRange);
                },
              },
              {
                key: 'format',
                value: function format(_format, value) {
                  if (
                    this.scroll.whitelist != null &&
                    !this.scroll.whitelist[_format]
                  )
                    return;
                  this.scroll.update();
                  var nativeRange = this.getNativeRange();
                  if (
                    nativeRange == null ||
                    !nativeRange.native.collapsed ||
                    _parchment2.default.query(
                      _format,
                      _parchment2.default.Scope.BLOCK
                    )
                  )
                    return;
                  if (nativeRange.start.node !== this.cursor.textNode) {
                    var blot = _parchment2.default.find(
                      nativeRange.start.node,
                      false
                    );
                    if (blot == null) return;
                    if (blot instanceof _parchment2.default.Leaf) {
                      var after = blot.split(nativeRange.start.offset);
                      blot.parent.insertBefore(this.cursor, after);
                    } else {
                      blot.insertBefore(this.cursor, nativeRange.start.node);
                    }
                    this.cursor.attach();
                  }
                  this.cursor.format(_format, value);
                  this.scroll.optimize();
                  this.setNativeRange(
                    this.cursor.textNode,
                    this.cursor.textNode.data.length
                  );
                  this.update();
                },
              },
              {
                key: 'getBounds',
                value: function getBounds(index) {
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0;
                  var scrollLength = this.scroll.length();
                  index = Math.min(index, scrollLength - 1);
                  length = Math.min(index + length, scrollLength - 1) - index;
                  var node = void 0,
                    _scroll$leaf = this.scroll.leaf(index),
                    _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
                    leaf = _scroll$leaf2[0],
                    offset = _scroll$leaf2[1];
                  if (leaf == null) return null;
                  var _leaf$position = leaf.position(offset, true);
                  var _leaf$position2 = _slicedToArray(_leaf$position, 2);
                  node = _leaf$position2[0];
                  offset = _leaf$position2[1];
                  var range = document.createRange();
                  if (length > 0) {
                    range.setStart(node, offset);
                    var _scroll$leaf3 = this.scroll.leaf(index + length);
                    var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);
                    leaf = _scroll$leaf4[0];
                    offset = _scroll$leaf4[1];
                    if (leaf == null) return null;
                    var _leaf$position3 = leaf.position(offset, true);
                    var _leaf$position4 = _slicedToArray(_leaf$position3, 2);
                    node = _leaf$position4[0];
                    offset = _leaf$position4[1];
                    range.setEnd(node, offset);
                    return range.getBoundingClientRect();
                  } else {
                    var side = 'left';
                    var rect = void 0;
                    if (node instanceof Text) {
                      if (offset < node.data.length) {
                        range.setStart(node, offset);
                        range.setEnd(node, offset + 1);
                      } else {
                        range.setStart(node, offset - 1);
                        range.setEnd(node, offset);
                        side = 'right';
                      }
                      rect = range.getBoundingClientRect();
                    } else {
                      rect = leaf.domNode.getBoundingClientRect();
                      if (offset > 0) side = 'right';
                    }
                    return {
                      bottom: rect.top + rect.height,
                      height: rect.height,
                      left: rect[side],
                      right: rect[side],
                      top: rect.top,
                      width: 0,
                    };
                  }
                },
              },
              {
                key: 'getNativeRange',
                value: function getNativeRange() {
                  var selection = document.getSelection();
                  if (selection == null || selection.rangeCount <= 0)
                    return null;
                  var nativeRange = selection.getRangeAt(0);
                  if (nativeRange == null) return null;
                  var range = this.normalizeNative(nativeRange);
                  debug.info('getNativeRange', range);
                  return range;
                },
              },
              {
                key: 'getRange',
                value: function getRange() {
                  var normalized = this.getNativeRange();
                  if (normalized == null) return [null, null];
                  var range = this.normalizedToRange(normalized);
                  return [range, normalized];
                },
              },
              {
                key: 'hasFocus',
                value: function hasFocus() {
                  return document.activeElement === this.root;
                },
              },
              {
                key: 'normalizedToRange',
                value: function normalizedToRange(range) {
                  var _this4 = this;
                  var positions = [[range.start.node, range.start.offset]];
                  if (!range.native.collapsed) {
                    positions.push([range.end.node, range.end.offset]);
                  }
                  var indexes = positions.map(function (position) {
                    var _position = _slicedToArray(position, 2),
                      node = _position[0],
                      offset = _position[1];
                    var blot = _parchment2.default.find(node, true);
                    var index = blot.offset(_this4.scroll);
                    if (offset === 0) {
                      return index;
                    } else if (blot instanceof _parchment2.default.Container) {
                      return index + blot.length();
                    } else {
                      return index + blot.index(node, offset);
                    }
                  });
                  var end = Math.min(
                    Math.max.apply(Math, _toConsumableArray(indexes)),
                    this.scroll.length() - 1
                  );
                  var start = Math.min.apply(
                    Math,
                    [end].concat(_toConsumableArray(indexes))
                  );
                  return new Range(start, end - start);
                },
              },
              {
                key: 'normalizeNative',
                value: function normalizeNative(nativeRange) {
                  if (
                    !contains(this.root, nativeRange.startContainer) ||
                    (!nativeRange.collapsed &&
                      !contains(this.root, nativeRange.endContainer))
                  ) {
                    return null;
                  }
                  var range = {
                    start: {
                      node: nativeRange.startContainer,
                      offset: nativeRange.startOffset,
                    },
                    end: {
                      node: nativeRange.endContainer,
                      offset: nativeRange.endOffset,
                    },
                    native: nativeRange,
                  };
                  [range.start, range.end].forEach(function (position) {
                    var node = position.node,
                      offset = position.offset;
                    while (
                      !(node instanceof Text) &&
                      node.childNodes.length > 0
                    ) {
                      if (node.childNodes.length > offset) {
                        node = node.childNodes[offset];
                        offset = 0;
                      } else if (node.childNodes.length === offset) {
                        node = node.lastChild;
                        offset =
                          node instanceof Text
                            ? node.data.length
                            : node.childNodes.length + 1;
                      } else {
                        break;
                      }
                    }
                    (position.node = node), (position.offset = offset);
                  });
                  return range;
                },
              },
              {
                key: 'rangeToNative',
                value: function rangeToNative(range) {
                  var _this5 = this;
                  var indexes = range.collapsed
                    ? [range.index]
                    : [range.index, range.index + range.length];
                  var args = [];
                  var scrollLength = this.scroll.length();
                  indexes.forEach(function (index, i) {
                    index = Math.min(scrollLength - 1, index);
                    var node = void 0,
                      _scroll$leaf5 = _this5.scroll.leaf(index),
                      _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
                      leaf = _scroll$leaf6[0],
                      offset = _scroll$leaf6[1];
                    var _leaf$position5 = leaf.position(offset, i !== 0);
                    var _leaf$position6 = _slicedToArray(_leaf$position5, 2);
                    node = _leaf$position6[0];
                    offset = _leaf$position6[1];
                    args.push(node, offset);
                  });
                  if (args.length < 2) {
                    args = args.concat(args);
                  }
                  return args;
                },
              },
              {
                key: 'scrollIntoView',
                value: function scrollIntoView(scrollingContainer) {
                  var range = this.lastRange;
                  if (range == null) return;
                  var bounds = this.getBounds(range.index, range.length);
                  if (bounds == null) return;
                  var limit = this.scroll.length() - 1;
                  var _scroll$line = this.scroll.line(
                      Math.min(range.index, limit)
                    ),
                    _scroll$line2 = _slicedToArray(_scroll$line, 1),
                    first = _scroll$line2[0];
                  var last = first;
                  if (range.length > 0) {
                    var _scroll$line3 = this.scroll.line(
                      Math.min(range.index + range.length, limit)
                    );
                    var _scroll$line4 = _slicedToArray(_scroll$line3, 1);
                    last = _scroll$line4[0];
                  }
                  if (first == null || last == null) return;
                  var scrollBounds = scrollingContainer.getBoundingClientRect();
                  if (bounds.top < scrollBounds.top) {
                    scrollingContainer.scrollTop -=
                      scrollBounds.top - bounds.top;
                  } else if (bounds.bottom > scrollBounds.bottom) {
                    scrollingContainer.scrollTop +=
                      bounds.bottom - scrollBounds.bottom;
                  }
                },
              },
              {
                key: 'setNativeRange',
                value: function setNativeRange(startNode, startOffset) {
                  var endNode =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : startNode;
                  var endOffset =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : startOffset;
                  var force =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : false;
                  debug.info(
                    'setNativeRange',
                    startNode,
                    startOffset,
                    endNode,
                    endOffset
                  );
                  if (
                    startNode != null &&
                    (this.root.parentNode == null ||
                      startNode.parentNode == null ||
                      endNode.parentNode == null)
                  ) {
                    return;
                  }
                  var selection = document.getSelection();
                  if (selection == null) return;
                  if (startNode != null) {
                    if (!this.hasFocus()) this.root.focus();
                    var native = (this.getNativeRange() || {}).native;
                    if (
                      native == null ||
                      force ||
                      startNode !== native.startContainer ||
                      startOffset !== native.startOffset ||
                      endNode !== native.endContainer ||
                      endOffset !== native.endOffset
                    ) {
                      if (startNode.tagName == 'BR') {
                        startOffset = [].indexOf.call(
                          startNode.parentNode.childNodes,
                          startNode
                        );
                        startNode = startNode.parentNode;
                      }
                      if (endNode.tagName == 'BR') {
                        endOffset = [].indexOf.call(
                          endNode.parentNode.childNodes,
                          endNode
                        );
                        endNode = endNode.parentNode;
                      }
                      var range = document.createRange();
                      range.setStart(startNode, startOffset);
                      range.setEnd(endNode, endOffset);
                      selection.removeAllRanges();
                      selection.addRange(range);
                    }
                  } else {
                    selection.removeAllRanges();
                    this.root.blur();
                    document.body.focus();
                  }
                },
              },
              {
                key: 'setRange',
                value: function setRange(range) {
                  var force =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : false;
                  var source =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : _emitter4.default.sources.API;
                  if (typeof force === 'string') {
                    source = force;
                    force = false;
                  }
                  debug.info('setRange', range);
                  if (range != null) {
                    var args = this.rangeToNative(range);
                    this.setNativeRange.apply(
                      this,
                      _toConsumableArray(args).concat([force])
                    );
                  } else {
                    this.setNativeRange(null);
                  }
                  this.update(source);
                },
              },
              {
                key: 'update',
                value: function update() {
                  var source =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : _emitter4.default.sources.USER;
                  var oldRange = this.lastRange;
                  var _getRange = this.getRange(),
                    _getRange2 = _slicedToArray(_getRange, 2),
                    lastRange = _getRange2[0],
                    nativeRange = _getRange2[1];
                  this.lastRange = lastRange;
                  if (this.lastRange != null) {
                    this.savedRange = this.lastRange;
                  }
                  if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
                    var _emitter;
                    if (
                      !this.composing &&
                      nativeRange != null &&
                      nativeRange.native.collapsed &&
                      nativeRange.start.node !== this.cursor.textNode
                    ) {
                      this.cursor.restore();
                    }
                    var args = [
                      _emitter4.default.events.SELECTION_CHANGE,
                      (0, _clone2.default)(this.lastRange),
                      (0, _clone2.default)(oldRange),
                      source,
                    ];
                    (_emitter = this.emitter).emit.apply(
                      _emitter,
                      [_emitter4.default.events.EDITOR_CHANGE].concat(args)
                    );
                    if (source !== _emitter4.default.sources.SILENT) {
                      var _emitter2;
                      (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                    }
                  }
                },
              },
            ]);
            return Selection2;
          })();
          function contains(parent, descendant) {
            try {
              descendant.parentNode;
            } catch (e) {
              return false;
            }
            if (descendant instanceof Text) {
              descendant = descendant.parentNode;
            }
            return parent.contains(descendant);
          }
          exports2.Range = Range;
          exports2.default = Selection;
        },
        /* 16 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Break = (function (_Parchment$Embed) {
            _inherits(Break2, _Parchment$Embed);
            function Break2() {
              _classCallCheck(this, Break2);
              return _possibleConstructorReturn(
                this,
                (Break2.__proto__ || Object.getPrototypeOf(Break2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Break2,
              [
                {
                  key: 'insertInto',
                  value: function insertInto(parent, ref) {
                    if (parent.children.length === 0) {
                      _get(
                        Break2.prototype.__proto__ ||
                          Object.getPrototypeOf(Break2.prototype),
                        'insertInto',
                        this
                      ).call(this, parent, ref);
                    } else {
                      this.remove();
                    }
                  },
                },
                {
                  key: 'length',
                  value: function length() {
                    return 0;
                  },
                },
                {
                  key: 'value',
                  value: function value() {
                    return '';
                  },
                },
              ],
              [
                {
                  key: 'value',
                  value: function value() {
                    return void 0;
                  },
                },
              ]
            );
            return Break2;
          })(_parchment2.default.Embed);
          Break.blotName = 'break';
          Break.tagName = 'BR';
          exports2.default = Break;
        },
        /* 17 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var linked_list_1 = __webpack_require__(44);
          var shadow_1 = __webpack_require__(30);
          var Registry = __webpack_require__(1);
          var ContainerBlot =
            /** @class */
            (function (_super) {
              __extends2(ContainerBlot2, _super);
              function ContainerBlot2(domNode) {
                var _this = _super.call(this, domNode) || this;
                _this.build();
                return _this;
              }
              ContainerBlot2.prototype.appendChild = function (other) {
                this.insertBefore(other);
              };
              ContainerBlot2.prototype.attach = function () {
                _super.prototype.attach.call(this);
                this.children.forEach(function (child) {
                  child.attach();
                });
              };
              ContainerBlot2.prototype.build = function () {
                var _this = this;
                this.children = new linked_list_1.default();
                [].slice
                  .call(this.domNode.childNodes)
                  .reverse()
                  .forEach(function (node) {
                    try {
                      var child = makeBlot(node);
                      _this.insertBefore(child, _this.children.head || void 0);
                    } catch (err) {
                      if (err instanceof Registry.ParchmentError) return;
                      else throw err;
                    }
                  });
              };
              ContainerBlot2.prototype.deleteAt = function (index, length) {
                if (index === 0 && length === this.length()) {
                  return this.remove();
                }
                this.children.forEachAt(
                  index,
                  length,
                  function (child, offset, length2) {
                    child.deleteAt(offset, length2);
                  }
                );
              };
              ContainerBlot2.prototype.descendant = function (criteria, index) {
                var _a = this.children.find(index),
                  child = _a[0],
                  offset = _a[1];
                if (
                  (criteria.blotName == null && criteria(child)) ||
                  (criteria.blotName != null && child instanceof criteria)
                ) {
                  return [child, offset];
                } else if (child instanceof ContainerBlot2) {
                  return child.descendant(criteria, offset);
                } else {
                  return [null, -1];
                }
              };
              ContainerBlot2.prototype.descendants = function (
                criteria,
                index,
                length
              ) {
                if (index === void 0) {
                  index = 0;
                }
                if (length === void 0) {
                  length = Number.MAX_VALUE;
                }
                var descendants = [];
                var lengthLeft = length;
                this.children.forEachAt(
                  index,
                  length,
                  function (child, index2, length2) {
                    if (
                      (criteria.blotName == null && criteria(child)) ||
                      (criteria.blotName != null && child instanceof criteria)
                    ) {
                      descendants.push(child);
                    }
                    if (child instanceof ContainerBlot2) {
                      descendants = descendants.concat(
                        child.descendants(criteria, index2, lengthLeft)
                      );
                    }
                    lengthLeft -= length2;
                  }
                );
                return descendants;
              };
              ContainerBlot2.prototype.detach = function () {
                this.children.forEach(function (child) {
                  child.detach();
                });
                _super.prototype.detach.call(this);
              };
              ContainerBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                this.children.forEachAt(
                  index,
                  length,
                  function (child, offset, length2) {
                    child.formatAt(offset, length2, name, value);
                  }
                );
              };
              ContainerBlot2.prototype.insertAt = function (index, value, def) {
                var _a = this.children.find(index),
                  child = _a[0],
                  offset = _a[1];
                if (child) {
                  child.insertAt(offset, value, def);
                } else {
                  var blot =
                    def == null
                      ? Registry.create('text', value)
                      : Registry.create(value, def);
                  this.appendChild(blot);
                }
              };
              ContainerBlot2.prototype.insertBefore = function (
                childBlot,
                refBlot
              ) {
                if (
                  this.statics.allowedChildren != null &&
                  !this.statics.allowedChildren.some(function (child) {
                    return childBlot instanceof child;
                  })
                ) {
                  throw new Registry.ParchmentError(
                    'Cannot insert ' +
                      childBlot.statics.blotName +
                      ' into ' +
                      this.statics.blotName
                  );
                }
                childBlot.insertInto(this, refBlot);
              };
              ContainerBlot2.prototype.length = function () {
                return this.children.reduce(function (memo, child) {
                  return memo + child.length();
                }, 0);
              };
              ContainerBlot2.prototype.moveChildren = function (
                targetParent,
                refNode
              ) {
                this.children.forEach(function (child) {
                  targetParent.insertBefore(child, refNode);
                });
              };
              ContainerBlot2.prototype.optimize = function (context) {
                _super.prototype.optimize.call(this, context);
                if (this.children.length === 0) {
                  if (this.statics.defaultChild != null) {
                    var child = Registry.create(this.statics.defaultChild);
                    this.appendChild(child);
                    child.optimize(context);
                  } else {
                    this.remove();
                  }
                }
              };
              ContainerBlot2.prototype.path = function (index, inclusive) {
                if (inclusive === void 0) {
                  inclusive = false;
                }
                var _a = this.children.find(index, inclusive),
                  child = _a[0],
                  offset = _a[1];
                var position = [[this, index]];
                if (child instanceof ContainerBlot2) {
                  return position.concat(child.path(offset, inclusive));
                } else if (child != null) {
                  position.push([child, offset]);
                }
                return position;
              };
              ContainerBlot2.prototype.removeChild = function (child) {
                this.children.remove(child);
              };
              ContainerBlot2.prototype.replace = function (target) {
                if (target instanceof ContainerBlot2) {
                  target.moveChildren(this);
                }
                _super.prototype.replace.call(this, target);
              };
              ContainerBlot2.prototype.split = function (index, force) {
                if (force === void 0) {
                  force = false;
                }
                if (!force) {
                  if (index === 0) return this;
                  if (index === this.length()) return this.next;
                }
                var after = this.clone();
                this.parent.insertBefore(after, this.next);
                this.children.forEachAt(
                  index,
                  this.length(),
                  function (child, offset, length) {
                    child = child.split(offset, force);
                    after.appendChild(child);
                  }
                );
                return after;
              };
              ContainerBlot2.prototype.unwrap = function () {
                this.moveChildren(this.parent, this.next);
                this.remove();
              };
              ContainerBlot2.prototype.update = function (mutations, context) {
                var _this = this;
                var addedNodes = [];
                var removedNodes = [];
                mutations.forEach(function (mutation) {
                  if (
                    mutation.target === _this.domNode &&
                    mutation.type === 'childList'
                  ) {
                    addedNodes.push.apply(addedNodes, mutation.addedNodes);
                    removedNodes.push.apply(
                      removedNodes,
                      mutation.removedNodes
                    );
                  }
                });
                removedNodes.forEach(function (node) {
                  if (
                    node.parentNode != null && // @ts-ignore
                    node.tagName !== 'IFRAME' &&
                    document.body.compareDocumentPosition(node) &
                      Node.DOCUMENT_POSITION_CONTAINED_BY
                  ) {
                    return;
                  }
                  var blot = Registry.find(node);
                  if (blot == null) return;
                  if (
                    blot.domNode.parentNode == null ||
                    blot.domNode.parentNode === _this.domNode
                  ) {
                    blot.detach();
                  }
                });
                addedNodes
                  .filter(function (node) {
                    return node.parentNode == _this.domNode;
                  })
                  .sort(function (a, b) {
                    if (a === b) return 0;
                    if (
                      a.compareDocumentPosition(b) &
                      Node.DOCUMENT_POSITION_FOLLOWING
                    ) {
                      return 1;
                    }
                    return -1;
                  })
                  .forEach(function (node) {
                    var refBlot = null;
                    if (node.nextSibling != null) {
                      refBlot = Registry.find(node.nextSibling);
                    }
                    var blot = makeBlot(node);
                    if (blot.next != refBlot || blot.next == null) {
                      if (blot.parent != null) {
                        blot.parent.removeChild(_this);
                      }
                      _this.insertBefore(blot, refBlot || void 0);
                    }
                  });
              };
              return ContainerBlot2;
            })(shadow_1.default);
          function makeBlot(node) {
            var blot = Registry.find(node);
            if (blot == null) {
              try {
                blot = Registry.create(node);
              } catch (e) {
                blot = Registry.create(Registry.Scope.INLINE);
                [].slice.call(node.childNodes).forEach(function (child) {
                  blot.domNode.appendChild(child);
                });
                if (node.parentNode) {
                  node.parentNode.replaceChild(blot.domNode, node);
                }
                blot.attach();
              }
            }
            return blot;
          }
          exports2.default = ContainerBlot;
        },
        /* 18 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var attributor_1 = __webpack_require__(12);
          var store_1 = __webpack_require__(31);
          var container_1 = __webpack_require__(17);
          var Registry = __webpack_require__(1);
          var FormatBlot =
            /** @class */
            (function (_super) {
              __extends2(FormatBlot2, _super);
              function FormatBlot2(domNode) {
                var _this = _super.call(this, domNode) || this;
                _this.attributes = new store_1.default(_this.domNode);
                return _this;
              }
              FormatBlot2.formats = function (domNode) {
                if (typeof this.tagName === 'string') {
                  return true;
                } else if (Array.isArray(this.tagName)) {
                  return domNode.tagName.toLowerCase();
                }
                return void 0;
              };
              FormatBlot2.prototype.format = function (name, value) {
                var format = Registry.query(name);
                if (format instanceof attributor_1.default) {
                  this.attributes.attribute(format, value);
                } else if (value) {
                  if (
                    format != null &&
                    (name !== this.statics.blotName ||
                      this.formats()[name] !== value)
                  ) {
                    this.replaceWith(name, value);
                  }
                }
              };
              FormatBlot2.prototype.formats = function () {
                var formats = this.attributes.values();
                var format = this.statics.formats(this.domNode);
                if (format != null) {
                  formats[this.statics.blotName] = format;
                }
                return formats;
              };
              FormatBlot2.prototype.replaceWith = function (name, value) {
                var replacement = _super.prototype.replaceWith.call(
                  this,
                  name,
                  value
                );
                this.attributes.copy(replacement);
                return replacement;
              };
              FormatBlot2.prototype.update = function (mutations, context) {
                var _this = this;
                _super.prototype.update.call(this, mutations, context);
                if (
                  mutations.some(function (mutation) {
                    return (
                      mutation.target === _this.domNode &&
                      mutation.type === 'attributes'
                    );
                  })
                ) {
                  this.attributes.build();
                }
              };
              FormatBlot2.prototype.wrap = function (name, value) {
                var wrapper = _super.prototype.wrap.call(this, name, value);
                if (
                  wrapper instanceof FormatBlot2 &&
                  wrapper.statics.scope === this.statics.scope
                ) {
                  this.attributes.move(wrapper);
                }
                return wrapper;
              };
              return FormatBlot2;
            })(container_1.default);
          exports2.default = FormatBlot;
        },
        /* 19 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var shadow_1 = __webpack_require__(30);
          var Registry = __webpack_require__(1);
          var LeafBlot =
            /** @class */
            (function (_super) {
              __extends2(LeafBlot2, _super);
              function LeafBlot2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              LeafBlot2.value = function (domNode) {
                return true;
              };
              LeafBlot2.prototype.index = function (node, offset) {
                if (
                  this.domNode === node ||
                  this.domNode.compareDocumentPosition(node) &
                    Node.DOCUMENT_POSITION_CONTAINED_BY
                ) {
                  return Math.min(offset, 1);
                }
                return -1;
              };
              LeafBlot2.prototype.position = function (index, inclusive) {
                var offset = [].indexOf.call(
                  this.parent.domNode.childNodes,
                  this.domNode
                );
                if (index > 0) offset += 1;
                return [this.parent.domNode, offset];
              };
              LeafBlot2.prototype.value = function () {
                var _a;
                return (
                  (_a = {}),
                  (_a[this.statics.blotName] =
                    this.statics.value(this.domNode) || true),
                  _a
                );
              };
              LeafBlot2.scope = Registry.Scope.INLINE_BLOT;
              return LeafBlot2;
            })(shadow_1.default);
          exports2.default = LeafBlot;
        },
        /* 20 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var equal = __webpack_require__(11);
          var extend2 = __webpack_require__(3);
          var lib2 = {
            attributes: {
              compose: function (a, b, keepNull) {
                if (typeof a !== 'object') a = {};
                if (typeof b !== 'object') b = {};
                var attributes = extend2(true, {}, b);
                if (!keepNull) {
                  attributes = Object.keys(attributes).reduce(function (
                    copy,
                    key2
                  ) {
                    if (attributes[key2] != null) {
                      copy[key2] = attributes[key2];
                    }
                    return copy;
                  }, {});
                }
                for (var key in a) {
                  if (a[key] !== void 0 && b[key] === void 0) {
                    attributes[key] = a[key];
                  }
                }
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              },
              diff: function (a, b) {
                if (typeof a !== 'object') a = {};
                if (typeof b !== 'object') b = {};
                var attributes = Object.keys(a)
                  .concat(Object.keys(b))
                  .reduce(function (attributes2, key) {
                    if (!equal(a[key], b[key])) {
                      attributes2[key] = b[key] === void 0 ? null : b[key];
                    }
                    return attributes2;
                  }, {});
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              },
              transform: function (a, b, priority) {
                if (typeof a !== 'object') return b;
                if (typeof b !== 'object') return void 0;
                if (!priority) return b;
                var attributes = Object.keys(b).reduce(function (
                  attributes2,
                  key
                ) {
                  if (a[key] === void 0) attributes2[key] = b[key];
                  return attributes2;
                }, {});
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              },
            },
            iterator: function (ops) {
              return new Iterator(ops);
            },
            length: function (op) {
              if (typeof op['delete'] === 'number') {
                return op['delete'];
              } else if (typeof op.retain === 'number') {
                return op.retain;
              } else {
                return typeof op.insert === 'string' ? op.insert.length : 1;
              }
            },
          };
          function Iterator(ops) {
            this.ops = ops;
            this.index = 0;
            this.offset = 0;
          }
          Iterator.prototype.hasNext = function () {
            return this.peekLength() < Infinity;
          };
          Iterator.prototype.next = function (length) {
            if (!length) length = Infinity;
            var nextOp = this.ops[this.index];
            if (nextOp) {
              var offset = this.offset;
              var opLength = lib2.length(nextOp);
              if (length >= opLength - offset) {
                length = opLength - offset;
                this.index += 1;
                this.offset = 0;
              } else {
                this.offset += length;
              }
              if (typeof nextOp['delete'] === 'number') {
                return { delete: length };
              } else {
                var retOp = {};
                if (nextOp.attributes) {
                  retOp.attributes = nextOp.attributes;
                }
                if (typeof nextOp.retain === 'number') {
                  retOp.retain = length;
                } else if (typeof nextOp.insert === 'string') {
                  retOp.insert = nextOp.insert.substr(offset, length);
                } else {
                  retOp.insert = nextOp.insert;
                }
                return retOp;
              }
            } else {
              return { retain: Infinity };
            }
          };
          Iterator.prototype.peek = function () {
            return this.ops[this.index];
          };
          Iterator.prototype.peekLength = function () {
            if (this.ops[this.index]) {
              return lib2.length(this.ops[this.index]) - this.offset;
            } else {
              return Infinity;
            }
          };
          Iterator.prototype.peekType = function () {
            if (this.ops[this.index]) {
              if (typeof this.ops[this.index]['delete'] === 'number') {
                return 'delete';
              } else if (typeof this.ops[this.index].retain === 'number') {
                return 'retain';
              } else {
                return 'insert';
              }
            }
            return 'retain';
          };
          Iterator.prototype.rest = function () {
            if (!this.hasNext()) {
              return [];
            } else if (this.offset === 0) {
              return this.ops.slice(this.index);
            } else {
              var offset = this.offset;
              var index = this.index;
              var next = this.next();
              var rest = this.ops.slice(this.index);
              this.offset = offset;
              this.index = index;
              return [next].concat(rest);
            }
          };
          module2.exports = lib2;
        },
        /* 21 */
        /***/
        function (module2, exports2) {
          var clone = (function () {
            function _instanceof(obj, type) {
              return type != null && obj instanceof type;
            }
            var nativeMap;
            try {
              nativeMap = Map;
            } catch (_) {
              nativeMap = function () {};
            }
            var nativeSet;
            try {
              nativeSet = Set;
            } catch (_) {
              nativeSet = function () {};
            }
            var nativePromise;
            try {
              nativePromise = Promise;
            } catch (_) {
              nativePromise = function () {};
            }
            function clone2(
              parent,
              circular,
              depth,
              prototype2,
              includeNonEnumerable
            ) {
              if (typeof circular === 'object') {
                depth = circular.depth;
                prototype2 = circular.prototype;
                includeNonEnumerable = circular.includeNonEnumerable;
                circular = circular.circular;
              }
              var allParents = [];
              var allChildren = [];
              var useBuffer = typeof Buffer != 'undefined';
              if (typeof circular == 'undefined') circular = true;
              if (typeof depth == 'undefined') depth = Infinity;
              function _clone(parent2, depth2) {
                if (parent2 === null) return null;
                if (depth2 === 0) return parent2;
                var child;
                var proto;
                if (typeof parent2 != 'object') {
                  return parent2;
                }
                if (_instanceof(parent2, nativeMap)) {
                  child = new nativeMap();
                } else if (_instanceof(parent2, nativeSet)) {
                  child = new nativeSet();
                } else if (_instanceof(parent2, nativePromise)) {
                  child = new nativePromise(function (resolve, reject) {
                    parent2.then(
                      function (value) {
                        resolve(_clone(value, depth2 - 1));
                      },
                      function (err) {
                        reject(_clone(err, depth2 - 1));
                      }
                    );
                  });
                } else if (clone2.__isArray(parent2)) {
                  child = [];
                } else if (clone2.__isRegExp(parent2)) {
                  child = new RegExp(parent2.source, __getRegExpFlags(parent2));
                  if (parent2.lastIndex) child.lastIndex = parent2.lastIndex;
                } else if (clone2.__isDate(parent2)) {
                  child = new Date(parent2.getTime());
                } else if (useBuffer && Buffer.isBuffer(parent2)) {
                  if (Buffer.allocUnsafe) {
                    child = Buffer.allocUnsafe(parent2.length);
                  } else {
                    child = new Buffer(parent2.length);
                  }
                  parent2.copy(child);
                  return child;
                } else if (_instanceof(parent2, Error)) {
                  child = Object.create(parent2);
                } else {
                  if (typeof prototype2 == 'undefined') {
                    proto = Object.getPrototypeOf(parent2);
                    child = Object.create(proto);
                  } else {
                    child = Object.create(prototype2);
                    proto = prototype2;
                  }
                }
                if (circular) {
                  var index = allParents.indexOf(parent2);
                  if (index != -1) {
                    return allChildren[index];
                  }
                  allParents.push(parent2);
                  allChildren.push(child);
                }
                if (_instanceof(parent2, nativeMap)) {
                  parent2.forEach(function (value, key) {
                    var keyChild = _clone(key, depth2 - 1);
                    var valueChild = _clone(value, depth2 - 1);
                    child.set(keyChild, valueChild);
                  });
                }
                if (_instanceof(parent2, nativeSet)) {
                  parent2.forEach(function (value) {
                    var entryChild = _clone(value, depth2 - 1);
                    child.add(entryChild);
                  });
                }
                for (var i in parent2) {
                  var attrs;
                  if (proto) {
                    attrs = Object.getOwnPropertyDescriptor(proto, i);
                  }
                  if (attrs && attrs.set == null) {
                    continue;
                  }
                  child[i] = _clone(parent2[i], depth2 - 1);
                }
                if (Object.getOwnPropertySymbols) {
                  var symbols = Object.getOwnPropertySymbols(parent2);
                  for (var i = 0; i < symbols.length; i++) {
                    var symbol = symbols[i];
                    var descriptor = Object.getOwnPropertyDescriptor(
                      parent2,
                      symbol
                    );
                    if (
                      descriptor &&
                      !descriptor.enumerable &&
                      !includeNonEnumerable
                    ) {
                      continue;
                    }
                    child[symbol] = _clone(parent2[symbol], depth2 - 1);
                    if (!descriptor.enumerable) {
                      Object.defineProperty(child, symbol, {
                        enumerable: false,
                      });
                    }
                  }
                }
                if (includeNonEnumerable) {
                  var allPropertyNames = Object.getOwnPropertyNames(parent2);
                  for (var i = 0; i < allPropertyNames.length; i++) {
                    var propertyName = allPropertyNames[i];
                    var descriptor = Object.getOwnPropertyDescriptor(
                      parent2,
                      propertyName
                    );
                    if (descriptor && descriptor.enumerable) {
                      continue;
                    }
                    child[propertyName] = _clone(
                      parent2[propertyName],
                      depth2 - 1
                    );
                    Object.defineProperty(child, propertyName, {
                      enumerable: false,
                    });
                  }
                }
                return child;
              }
              return _clone(parent, depth);
            }
            clone2.clonePrototype = function clonePrototype(parent) {
              if (parent === null) return null;
              var c = function () {};
              c.prototype = parent;
              return new c();
            };
            function __objToStr(o) {
              return Object.prototype.toString.call(o);
            }
            clone2.__objToStr = __objToStr;
            function __isDate(o) {
              return typeof o === 'object' && __objToStr(o) === '[object Date]';
            }
            clone2.__isDate = __isDate;
            function __isArray(o) {
              return (
                typeof o === 'object' && __objToStr(o) === '[object Array]'
              );
            }
            clone2.__isArray = __isArray;
            function __isRegExp(o) {
              return (
                typeof o === 'object' && __objToStr(o) === '[object RegExp]'
              );
            }
            clone2.__isRegExp = __isRegExp;
            function __getRegExpFlags(re2) {
              var flags = '';
              if (re2.global) flags += 'g';
              if (re2.ignoreCase) flags += 'i';
              if (re2.multiline) flags += 'm';
              return flags;
            }
            clone2.__getRegExpFlags = __getRegExpFlags;
            return clone2;
          })();
          if (typeof module2 === 'object' && module2.exports) {
            module2.exports = clone;
          }
        },
        /* 22 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          function isLine(blot) {
            return (
              blot instanceof _block2.default ||
              blot instanceof _block.BlockEmbed
            );
          }
          var Scroll = (function (_Parchment$Scroll) {
            _inherits(Scroll2, _Parchment$Scroll);
            function Scroll2(domNode, config) {
              _classCallCheck(this, Scroll2);
              var _this = _possibleConstructorReturn(
                this,
                (Scroll2.__proto__ || Object.getPrototypeOf(Scroll2)).call(
                  this,
                  domNode
                )
              );
              _this.emitter = config.emitter;
              if (Array.isArray(config.whitelist)) {
                _this.whitelist = config.whitelist.reduce(function (
                  whitelist,
                  format
                ) {
                  whitelist[format] = true;
                  return whitelist;
                }, {});
              }
              _this.domNode.addEventListener('DOMNodeInserted', function () {});
              _this.optimize();
              _this.enable();
              return _this;
            }
            _createClass(Scroll2, [
              {
                key: 'batchStart',
                value: function batchStart() {
                  this.batch = true;
                },
              },
              {
                key: 'batchEnd',
                value: function batchEnd() {
                  this.batch = false;
                  this.optimize();
                },
              },
              {
                key: 'deleteAt',
                value: function deleteAt(index, length) {
                  var _line = this.line(index),
                    _line2 = _slicedToArray(_line, 2),
                    first = _line2[0],
                    offset = _line2[1];
                  var _line3 = this.line(index + length),
                    _line4 = _slicedToArray(_line3, 1),
                    last = _line4[0];
                  _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'deleteAt',
                    this
                  ).call(this, index, length);
                  if (last != null && first !== last && offset > 0) {
                    if (
                      first instanceof _block.BlockEmbed ||
                      last instanceof _block.BlockEmbed
                    ) {
                      this.optimize();
                      return;
                    }
                    if (first instanceof _code2.default) {
                      var newlineIndex = first.newlineIndex(
                        first.length(),
                        true
                      );
                      if (newlineIndex > -1) {
                        first = first.split(newlineIndex + 1);
                        if (first === last) {
                          this.optimize();
                          return;
                        }
                      }
                    } else if (last instanceof _code2.default) {
                      var _newlineIndex = last.newlineIndex(0);
                      if (_newlineIndex > -1) {
                        last.split(_newlineIndex + 1);
                      }
                    }
                    var ref =
                      last.children.head instanceof _break2.default
                        ? null
                        : last.children.head;
                    first.moveChildren(last, ref);
                    first.remove();
                  }
                  this.optimize();
                },
              },
              {
                key: 'enable',
                value: function enable() {
                  var enabled =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : true;
                  this.domNode.setAttribute('contenteditable', enabled);
                },
              },
              {
                key: 'formatAt',
                value: function formatAt(index, length, format, value) {
                  if (this.whitelist != null && !this.whitelist[format]) return;
                  _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'formatAt',
                    this
                  ).call(this, index, length, format, value);
                  this.optimize();
                },
              },
              {
                key: 'insertAt',
                value: function insertAt(index, value, def) {
                  if (
                    def != null &&
                    this.whitelist != null &&
                    !this.whitelist[value]
                  )
                    return;
                  if (index >= this.length()) {
                    if (
                      def == null ||
                      _parchment2.default.query(
                        value,
                        _parchment2.default.Scope.BLOCK
                      ) == null
                    ) {
                      var blot = _parchment2.default.create(
                        this.statics.defaultChild
                      );
                      this.appendChild(blot);
                      if (def == null && value.endsWith('\n')) {
                        value = value.slice(0, -1);
                      }
                      blot.insertAt(0, value, def);
                    } else {
                      var embed = _parchment2.default.create(value, def);
                      this.appendChild(embed);
                    }
                  } else {
                    _get(
                      Scroll2.prototype.__proto__ ||
                        Object.getPrototypeOf(Scroll2.prototype),
                      'insertAt',
                      this
                    ).call(this, index, value, def);
                  }
                  this.optimize();
                },
              },
              {
                key: 'insertBefore',
                value: function insertBefore(blot, ref) {
                  if (
                    blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT
                  ) {
                    var wrapper = _parchment2.default.create(
                      this.statics.defaultChild
                    );
                    wrapper.appendChild(blot);
                    blot = wrapper;
                  }
                  _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'insertBefore',
                    this
                  ).call(this, blot, ref);
                },
              },
              {
                key: 'leaf',
                value: function leaf(index) {
                  return this.path(index).pop() || [null, -1];
                },
              },
              {
                key: 'line',
                value: function line(index) {
                  if (index === this.length()) {
                    return this.line(index - 1);
                  }
                  return this.descendant(isLine, index);
                },
              },
              {
                key: 'lines',
                value: function lines() {
                  var index =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  var length =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : Number.MAX_VALUE;
                  var getLines = function getLines2(blot, index2, length2) {
                    var lines2 = [],
                      lengthLeft = length2;
                    blot.children.forEachAt(
                      index2,
                      length2,
                      function (child, index3, length3) {
                        if (isLine(child)) {
                          lines2.push(child);
                        } else if (
                          child instanceof _parchment2.default.Container
                        ) {
                          lines2 = lines2.concat(
                            getLines2(child, index3, lengthLeft)
                          );
                        }
                        lengthLeft -= length3;
                      }
                    );
                    return lines2;
                  };
                  return getLines(this, index, length);
                },
              },
              {
                key: 'optimize',
                value: function optimize() {
                  var mutations =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [];
                  var context =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : {};
                  if (this.batch === true) return;
                  _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'optimize',
                    this
                  ).call(this, mutations, context);
                  if (mutations.length > 0) {
                    this.emitter.emit(
                      _emitter2.default.events.SCROLL_OPTIMIZE,
                      mutations,
                      context
                    );
                  }
                },
              },
              {
                key: 'path',
                value: function path(index) {
                  return _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'path',
                    this
                  )
                    .call(this, index)
                    .slice(1);
                },
              },
              {
                key: 'update',
                value: function update(mutations) {
                  if (this.batch === true) return;
                  var source = _emitter2.default.sources.USER;
                  if (typeof mutations === 'string') {
                    source = mutations;
                  }
                  if (!Array.isArray(mutations)) {
                    mutations = this.observer.takeRecords();
                  }
                  if (mutations.length > 0) {
                    this.emitter.emit(
                      _emitter2.default.events.SCROLL_BEFORE_UPDATE,
                      source,
                      mutations
                    );
                  }
                  _get(
                    Scroll2.prototype.__proto__ ||
                      Object.getPrototypeOf(Scroll2.prototype),
                    'update',
                    this
                  ).call(this, mutations.concat([]));
                  if (mutations.length > 0) {
                    this.emitter.emit(
                      _emitter2.default.events.SCROLL_UPDATE,
                      source,
                      mutations
                    );
                  }
                },
              },
            ]);
            return Scroll2;
          })(_parchment2.default.Scroll);
          Scroll.blotName = 'scroll';
          Scroll.className = 'ql-editor';
          Scroll.tagName = 'DIV';
          Scroll.defaultChild = 'block';
          Scroll.allowedChildren = [
            _block2.default,
            _block.BlockEmbed,
            _container2.default,
          ];
          exports2.default = Scroll;
        },
        /* 23 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.SHORTKEY = exports2.default = void 0;
          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _op = __webpack_require__(20);
          var _op2 = _interopRequireDefault(_op);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var debug = (0, _logger2.default)('quill:keyboard');
          var SHORTKEY = /Mac/i.test(navigator.platform)
            ? 'metaKey'
            : 'ctrlKey';
          var Keyboard = (function (_Module) {
            _inherits(Keyboard2, _Module);
            _createClass(Keyboard2, null, [
              {
                key: 'match',
                value: function match(evt, binding) {
                  binding = normalize(binding);
                  if (
                    ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(
                      function (key) {
                        return (
                          !!binding[key] !== evt[key] && binding[key] !== null
                        );
                      }
                    )
                  ) {
                    return false;
                  }
                  return binding.key === (evt.which || evt.keyCode);
                },
              },
            ]);
            function Keyboard2(quill2, options) {
              _classCallCheck(this, Keyboard2);
              var _this = _possibleConstructorReturn(
                this,
                (Keyboard2.__proto__ || Object.getPrototypeOf(Keyboard2)).call(
                  this,
                  quill2,
                  options
                )
              );
              _this.bindings = {};
              Object.keys(_this.options.bindings).forEach(function (name) {
                if (
                  name === 'list autofill' &&
                  quill2.scroll.whitelist != null &&
                  !quill2.scroll.whitelist['list']
                ) {
                  return;
                }
                if (_this.options.bindings[name]) {
                  _this.addBinding(_this.options.bindings[name]);
                }
              });
              _this.addBinding(
                { key: Keyboard2.keys.ENTER, shiftKey: null },
                handleEnter
              );
              _this.addBinding(
                {
                  key: Keyboard2.keys.ENTER,
                  metaKey: null,
                  ctrlKey: null,
                  altKey: null,
                },
                function () {}
              );
              if (/Firefox/i.test(navigator.userAgent)) {
                _this.addBinding(
                  { key: Keyboard2.keys.BACKSPACE },
                  { collapsed: true },
                  handleBackspace
                );
                _this.addBinding(
                  { key: Keyboard2.keys.DELETE },
                  { collapsed: true },
                  handleDelete
                );
              } else {
                _this.addBinding(
                  { key: Keyboard2.keys.BACKSPACE },
                  { collapsed: true, prefix: /^.?$/ },
                  handleBackspace
                );
                _this.addBinding(
                  { key: Keyboard2.keys.DELETE },
                  { collapsed: true, suffix: /^.?$/ },
                  handleDelete
                );
              }
              _this.addBinding(
                { key: Keyboard2.keys.BACKSPACE },
                { collapsed: false },
                handleDeleteRange
              );
              _this.addBinding(
                { key: Keyboard2.keys.DELETE },
                { collapsed: false },
                handleDeleteRange
              );
              _this.addBinding(
                {
                  key: Keyboard2.keys.BACKSPACE,
                  altKey: null,
                  ctrlKey: null,
                  metaKey: null,
                  shiftKey: null,
                },
                { collapsed: true, offset: 0 },
                handleBackspace
              );
              _this.listen();
              return _this;
            }
            _createClass(Keyboard2, [
              {
                key: 'addBinding',
                value: function addBinding(key) {
                  var context =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : {};
                  var handler =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                  var binding = normalize(key);
                  if (binding == null || binding.key == null) {
                    return debug.warn(
                      'Attempted to add invalid keyboard binding',
                      binding
                    );
                  }
                  if (typeof context === 'function') {
                    context = { handler: context };
                  }
                  if (typeof handler === 'function') {
                    handler = { handler };
                  }
                  binding = (0, _extend2.default)(binding, context, handler);
                  this.bindings[binding.key] = this.bindings[binding.key] || [];
                  this.bindings[binding.key].push(binding);
                },
              },
              {
                key: 'listen',
                value: function listen() {
                  var _this2 = this;
                  this.quill.root.addEventListener('keydown', function (evt) {
                    if (evt.defaultPrevented) return;
                    var which = evt.which || evt.keyCode;
                    var bindings = (_this2.bindings[which] || []).filter(
                      function (binding) {
                        return Keyboard2.match(evt, binding);
                      }
                    );
                    if (bindings.length === 0) return;
                    var range = _this2.quill.getSelection();
                    if (range == null || !_this2.quill.hasFocus()) return;
                    var _quill$getLine = _this2.quill.getLine(range.index),
                      _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
                      line = _quill$getLine2[0],
                      offset = _quill$getLine2[1];
                    var _quill$getLeaf = _this2.quill.getLeaf(range.index),
                      _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
                      leafStart = _quill$getLeaf2[0],
                      offsetStart = _quill$getLeaf2[1];
                    var _ref =
                        range.length === 0
                          ? [leafStart, offsetStart]
                          : _this2.quill.getLeaf(range.index + range.length),
                      _ref2 = _slicedToArray(_ref, 2),
                      leafEnd = _ref2[0],
                      offsetEnd = _ref2[1];
                    var prefixText =
                      leafStart instanceof _parchment2.default.Text
                        ? leafStart.value().slice(0, offsetStart)
                        : '';
                    var suffixText =
                      leafEnd instanceof _parchment2.default.Text
                        ? leafEnd.value().slice(offsetEnd)
                        : '';
                    var curContext = {
                      collapsed: range.length === 0,
                      empty: range.length === 0 && line.length() <= 1,
                      format: _this2.quill.getFormat(range),
                      offset,
                      prefix: prefixText,
                      suffix: suffixText,
                    };
                    var prevented = bindings.some(function (binding) {
                      if (
                        binding.collapsed != null &&
                        binding.collapsed !== curContext.collapsed
                      )
                        return false;
                      if (
                        binding.empty != null &&
                        binding.empty !== curContext.empty
                      )
                        return false;
                      if (
                        binding.offset != null &&
                        binding.offset !== curContext.offset
                      )
                        return false;
                      if (Array.isArray(binding.format)) {
                        if (
                          binding.format.every(function (name) {
                            return curContext.format[name] == null;
                          })
                        ) {
                          return false;
                        }
                      } else if (_typeof(binding.format) === 'object') {
                        if (
                          !Object.keys(binding.format).every(function (name) {
                            if (binding.format[name] === true)
                              return curContext.format[name] != null;
                            if (binding.format[name] === false)
                              return curContext.format[name] == null;
                            return (0, _deepEqual2.default)(
                              binding.format[name],
                              curContext.format[name]
                            );
                          })
                        ) {
                          return false;
                        }
                      }
                      if (
                        binding.prefix != null &&
                        !binding.prefix.test(curContext.prefix)
                      )
                        return false;
                      if (
                        binding.suffix != null &&
                        !binding.suffix.test(curContext.suffix)
                      )
                        return false;
                      return (
                        binding.handler.call(_this2, range, curContext) !== true
                      );
                    });
                    if (prevented) {
                      evt.preventDefault();
                    }
                  });
                },
              },
            ]);
            return Keyboard2;
          })(_module2.default);
          Keyboard.keys = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            ESCAPE: 27,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            DELETE: 46,
          };
          Keyboard.DEFAULTS = {
            bindings: {
              bold: makeFormatHandler('bold'),
              italic: makeFormatHandler('italic'),
              underline: makeFormatHandler('underline'),
              indent: {
                // highlight tab or tab at beginning of list, indent or blockquote
                key: Keyboard.keys.TAB,
                format: ['blockquote', 'indent', 'list'],
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0) return true;
                  this.quill.format(
                    'indent',
                    '+1',
                    _quill2.default.sources.USER
                  );
                },
              },
              outdent: {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                format: ['blockquote', 'indent', 'list'],
                // highlight tab or tab at beginning of list, indent or blockquote
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0) return true;
                  this.quill.format(
                    'indent',
                    '-1',
                    _quill2.default.sources.USER
                  );
                },
              },
              'outdent backspace': {
                key: Keyboard.keys.BACKSPACE,
                collapsed: true,
                shiftKey: null,
                metaKey: null,
                ctrlKey: null,
                altKey: null,
                format: ['indent', 'list'],
                offset: 0,
                handler: function handler(range, context) {
                  if (context.format.indent != null) {
                    this.quill.format(
                      'indent',
                      '-1',
                      _quill2.default.sources.USER
                    );
                  } else if (context.format.list != null) {
                    this.quill.format(
                      'list',
                      false,
                      _quill2.default.sources.USER
                    );
                  }
                },
              },
              'indent code-block': makeCodeBlockHandler(true),
              'outdent code-block': makeCodeBlockHandler(false),
              'remove tab': {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                collapsed: true,
                prefix: /\t$/,
                handler: function handler(range) {
                  this.quill.deleteText(
                    range.index - 1,
                    1,
                    _quill2.default.sources.USER
                  );
                },
              },
              tab: {
                key: Keyboard.keys.TAB,
                handler: function handler(range) {
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2.default()
                    .retain(range.index)
                    .delete(range.length)
                    .insert('	');
                  this.quill.updateContents(
                    delta,
                    _quill2.default.sources.USER
                  );
                  this.quill.history.cutoff();
                  this.quill.setSelection(
                    range.index + 1,
                    _quill2.default.sources.SILENT
                  );
                },
              },
              'list empty enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['list'],
                empty: true,
                handler: function handler(range, context) {
                  this.quill.format(
                    'list',
                    false,
                    _quill2.default.sources.USER
                  );
                  if (context.format.indent) {
                    this.quill.format(
                      'indent',
                      false,
                      _quill2.default.sources.USER
                    );
                  }
                },
              },
              'checklist enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: { list: 'checked' },
                handler: function handler(range) {
                  var _quill$getLine3 = this.quill.getLine(range.index),
                    _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
                    line = _quill$getLine4[0],
                    offset = _quill$getLine4[1];
                  var formats = (0, _extend2.default)({}, line.formats(), {
                    list: 'checked',
                  });
                  var delta = new _quillDelta2.default()
                    .retain(range.index)
                    .insert('\n', formats)
                    .retain(line.length() - offset - 1)
                    .retain(1, { list: 'unchecked' });
                  this.quill.updateContents(
                    delta,
                    _quill2.default.sources.USER
                  );
                  this.quill.setSelection(
                    range.index + 1,
                    _quill2.default.sources.SILENT
                  );
                  this.quill.scrollIntoView();
                },
              },
              'header enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['header'],
                suffix: /^$/,
                handler: function handler(range, context) {
                  var _quill$getLine5 = this.quill.getLine(range.index),
                    _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
                    line = _quill$getLine6[0],
                    offset = _quill$getLine6[1];
                  var delta = new _quillDelta2.default()
                    .retain(range.index)
                    .insert('\n', context.format)
                    .retain(line.length() - offset - 1)
                    .retain(1, { header: null });
                  this.quill.updateContents(
                    delta,
                    _quill2.default.sources.USER
                  );
                  this.quill.setSelection(
                    range.index + 1,
                    _quill2.default.sources.SILENT
                  );
                  this.quill.scrollIntoView();
                },
              },
              'list autofill': {
                key: ' ',
                collapsed: true,
                format: { list: false },
                prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
                handler: function handler(range, context) {
                  var length = context.prefix.length;
                  var _quill$getLine7 = this.quill.getLine(range.index),
                    _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
                    line = _quill$getLine8[0],
                    offset = _quill$getLine8[1];
                  if (offset > length) return true;
                  var value = void 0;
                  switch (context.prefix.trim()) {
                    case '[]':
                    case '[ ]':
                      value = 'unchecked';
                      break;
                    case '[x]':
                      value = 'checked';
                      break;
                    case '-':
                    case '*':
                      value = 'bullet';
                      break;
                    default:
                      value = 'ordered';
                  }
                  this.quill.insertText(
                    range.index,
                    ' ',
                    _quill2.default.sources.USER
                  );
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2.default()
                    .retain(range.index - offset)
                    .delete(length + 1)
                    .retain(line.length() - 2 - offset)
                    .retain(1, { list: value });
                  this.quill.updateContents(
                    delta,
                    _quill2.default.sources.USER
                  );
                  this.quill.history.cutoff();
                  this.quill.setSelection(
                    range.index - length,
                    _quill2.default.sources.SILENT
                  );
                },
              },
              'code exit': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['code-block'],
                prefix: /\n\n$/,
                suffix: /^\s+$/,
                handler: function handler(range) {
                  var _quill$getLine9 = this.quill.getLine(range.index),
                    _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
                    line = _quill$getLine10[0],
                    offset = _quill$getLine10[1];
                  var delta = new _quillDelta2.default()
                    .retain(range.index + line.length() - offset - 2)
                    .retain(1, { 'code-block': null })
                    .delete(1);
                  this.quill.updateContents(
                    delta,
                    _quill2.default.sources.USER
                  );
                },
              },
              'embed left': makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
              'embed left shift': makeEmbedArrowHandler(
                Keyboard.keys.LEFT,
                true
              ),
              'embed right': makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
              'embed right shift': makeEmbedArrowHandler(
                Keyboard.keys.RIGHT,
                true
              ),
            },
          };
          function makeEmbedArrowHandler(key, shiftKey) {
            var _ref3;
            var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
            return (
              (_ref3 = {
                key,
                shiftKey,
                altKey: null,
              }),
              _defineProperty2(_ref3, where, /^$/),
              _defineProperty2(_ref3, 'handler', function handler(range) {
                var index = range.index;
                if (key === Keyboard.keys.RIGHT) {
                  index += range.length + 1;
                }
                var _quill$getLeaf3 = this.quill.getLeaf(index),
                  _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
                  leaf = _quill$getLeaf4[0];
                if (!(leaf instanceof _parchment2.default.Embed)) return true;
                if (key === Keyboard.keys.LEFT) {
                  if (shiftKey) {
                    this.quill.setSelection(
                      range.index - 1,
                      range.length + 1,
                      _quill2.default.sources.USER
                    );
                  } else {
                    this.quill.setSelection(
                      range.index - 1,
                      _quill2.default.sources.USER
                    );
                  }
                } else {
                  if (shiftKey) {
                    this.quill.setSelection(
                      range.index,
                      range.length + 1,
                      _quill2.default.sources.USER
                    );
                  } else {
                    this.quill.setSelection(
                      range.index + range.length + 1,
                      _quill2.default.sources.USER
                    );
                  }
                }
                return false;
              }),
              _ref3
            );
          }
          function handleBackspace(range, context) {
            if (range.index === 0 || this.quill.getLength() <= 1) return;
            var _quill$getLine11 = this.quill.getLine(range.index),
              _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
              line = _quill$getLine12[0];
            var formats = {};
            if (context.offset === 0) {
              var _quill$getLine13 = this.quill.getLine(range.index - 1),
                _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
                prev = _quill$getLine14[0];
              if (prev != null && prev.length() > 1) {
                var curFormats = line.formats();
                var prevFormats = this.quill.getFormat(range.index - 1, 1);
                formats =
                  _op2.default.attributes.diff(curFormats, prevFormats) || {};
              }
            }
            var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix)
              ? 2
              : 1;
            this.quill.deleteText(
              range.index - length,
              length,
              _quill2.default.sources.USER
            );
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(
                range.index - length,
                length,
                formats,
                _quill2.default.sources.USER
              );
            }
            this.quill.focus();
          }
          function handleDelete(range, context) {
            var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix)
              ? 2
              : 1;
            if (range.index >= this.quill.getLength() - length) return;
            var formats = {},
              nextLength = 0;
            var _quill$getLine15 = this.quill.getLine(range.index),
              _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
              line = _quill$getLine16[0];
            if (context.offset >= line.length() - 1) {
              var _quill$getLine17 = this.quill.getLine(range.index + 1),
                _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
                next = _quill$getLine18[0];
              if (next) {
                var curFormats = line.formats();
                var nextFormats = this.quill.getFormat(range.index, 1);
                formats =
                  _op2.default.attributes.diff(curFormats, nextFormats) || {};
                nextLength = next.length();
              }
            }
            this.quill.deleteText(
              range.index,
              length,
              _quill2.default.sources.USER
            );
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(
                range.index + nextLength - 1,
                length,
                formats,
                _quill2.default.sources.USER
              );
            }
          }
          function handleDeleteRange(range) {
            var lines = this.quill.getLines(range);
            var formats = {};
            if (lines.length > 1) {
              var firstFormats = lines[0].formats();
              var lastFormats = lines[lines.length - 1].formats();
              formats =
                _op2.default.attributes.diff(lastFormats, firstFormats) || {};
            }
            this.quill.deleteText(range, _quill2.default.sources.USER);
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(
                range.index,
                1,
                formats,
                _quill2.default.sources.USER
              );
            }
            this.quill.setSelection(
              range.index,
              _quill2.default.sources.SILENT
            );
            this.quill.focus();
          }
          function handleEnter(range, context) {
            var _this3 = this;
            if (range.length > 0) {
              this.quill.scroll.deleteAt(range.index, range.length);
            }
            var lineFormats = Object.keys(context.format).reduce(function (
              lineFormats2,
              format
            ) {
              if (
                _parchment2.default.query(
                  format,
                  _parchment2.default.Scope.BLOCK
                ) &&
                !Array.isArray(context.format[format])
              ) {
                lineFormats2[format] = context.format[format];
              }
              return lineFormats2;
            }, {});
            this.quill.insertText(
              range.index,
              '\n',
              lineFormats,
              _quill2.default.sources.USER
            );
            this.quill.setSelection(
              range.index + 1,
              _quill2.default.sources.SILENT
            );
            this.quill.focus();
            Object.keys(context.format).forEach(function (name) {
              if (lineFormats[name] != null) return;
              if (Array.isArray(context.format[name])) return;
              if (name === 'link') return;
              _this3.quill.format(
                name,
                context.format[name],
                _quill2.default.sources.USER
              );
            });
          }
          function makeCodeBlockHandler(indent) {
            return {
              key: Keyboard.keys.TAB,
              shiftKey: !indent,
              format: { 'code-block': true },
              handler: function handler(range) {
                var CodeBlock = _parchment2.default.query('code-block');
                var index = range.index,
                  length = range.length;
                var _quill$scroll$descend = this.quill.scroll.descendant(
                    CodeBlock,
                    index
                  ),
                  _quill$scroll$descend2 = _slicedToArray(
                    _quill$scroll$descend,
                    2
                  ),
                  block = _quill$scroll$descend2[0],
                  offset = _quill$scroll$descend2[1];
                if (block == null) return;
                var scrollIndex = this.quill.getIndex(block);
                var start = block.newlineIndex(offset, true) + 1;
                var end = block.newlineIndex(scrollIndex + offset + length);
                var lines = block.domNode.textContent
                  .slice(start, end)
                  .split('\n');
                offset = 0;
                lines.forEach(function (line, i) {
                  if (indent) {
                    block.insertAt(start + offset, CodeBlock.TAB);
                    offset += CodeBlock.TAB.length;
                    if (i === 0) {
                      index += CodeBlock.TAB.length;
                    } else {
                      length += CodeBlock.TAB.length;
                    }
                  } else if (line.startsWith(CodeBlock.TAB)) {
                    block.deleteAt(start + offset, CodeBlock.TAB.length);
                    offset -= CodeBlock.TAB.length;
                    if (i === 0) {
                      index -= CodeBlock.TAB.length;
                    } else {
                      length -= CodeBlock.TAB.length;
                    }
                  }
                  offset += line.length + 1;
                });
                this.quill.update(_quill2.default.sources.USER);
                this.quill.setSelection(
                  index,
                  length,
                  _quill2.default.sources.SILENT
                );
              },
            };
          }
          function makeFormatHandler(format) {
            return {
              key: format[0].toUpperCase(),
              shortKey: true,
              handler: function handler(range, context) {
                this.quill.format(
                  format,
                  !context.format[format],
                  _quill2.default.sources.USER
                );
              },
            };
          }
          function normalize(binding) {
            if (typeof binding === 'string' || typeof binding === 'number') {
              return normalize({ key: binding });
            }
            if (
              (typeof binding === 'undefined'
                ? 'undefined'
                : _typeof(binding)) === 'object'
            ) {
              binding = (0, _clone2.default)(binding, false);
            }
            if (typeof binding.key === 'string') {
              if (Keyboard.keys[binding.key.toUpperCase()] != null) {
                binding.key = Keyboard.keys[binding.key.toUpperCase()];
              } else if (binding.key.length === 1) {
                binding.key = binding.key.toUpperCase().charCodeAt(0);
              } else {
                return null;
              }
            }
            if (binding.shortKey) {
              binding[SHORTKEY] = binding.shortKey;
              delete binding.shortKey;
            }
            return binding;
          }
          exports2.default = Keyboard;
          exports2.SHORTKEY = SHORTKEY;
        },
        /* 24 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Cursor = (function (_Parchment$Embed) {
            _inherits(Cursor2, _Parchment$Embed);
            _createClass(Cursor2, null, [
              {
                key: 'value',
                value: function value() {
                  return void 0;
                },
              },
            ]);
            function Cursor2(domNode, selection) {
              _classCallCheck(this, Cursor2);
              var _this = _possibleConstructorReturn(
                this,
                (Cursor2.__proto__ || Object.getPrototypeOf(Cursor2)).call(
                  this,
                  domNode
                )
              );
              _this.selection = selection;
              _this.textNode = document.createTextNode(Cursor2.CONTENTS);
              _this.domNode.appendChild(_this.textNode);
              _this._length = 0;
              return _this;
            }
            _createClass(Cursor2, [
              {
                key: 'detach',
                value: function detach() {
                  if (this.parent != null) this.parent.removeChild(this);
                },
              },
              {
                key: 'format',
                value: function format(name, value) {
                  if (this._length !== 0) {
                    return _get(
                      Cursor2.prototype.__proto__ ||
                        Object.getPrototypeOf(Cursor2.prototype),
                      'format',
                      this
                    ).call(this, name, value);
                  }
                  var target = this,
                    index = 0;
                  while (
                    target != null &&
                    target.statics.scope !==
                      _parchment2.default.Scope.BLOCK_BLOT
                  ) {
                    index += target.offset(target.parent);
                    target = target.parent;
                  }
                  if (target != null) {
                    this._length = Cursor2.CONTENTS.length;
                    target.optimize();
                    target.formatAt(
                      index,
                      Cursor2.CONTENTS.length,
                      name,
                      value
                    );
                    this._length = 0;
                  }
                },
              },
              {
                key: 'index',
                value: function index(node, offset) {
                  if (node === this.textNode) return 0;
                  return _get(
                    Cursor2.prototype.__proto__ ||
                      Object.getPrototypeOf(Cursor2.prototype),
                    'index',
                    this
                  ).call(this, node, offset);
                },
              },
              {
                key: 'length',
                value: function length() {
                  return this._length;
                },
              },
              {
                key: 'position',
                value: function position() {
                  return [this.textNode, this.textNode.data.length];
                },
              },
              {
                key: 'remove',
                value: function remove() {
                  _get(
                    Cursor2.prototype.__proto__ ||
                      Object.getPrototypeOf(Cursor2.prototype),
                    'remove',
                    this
                  ).call(this);
                  this.parent = null;
                },
              },
              {
                key: 'restore',
                value: function restore() {
                  if (this.selection.composing || this.parent == null) return;
                  var textNode = this.textNode;
                  var range = this.selection.getNativeRange();
                  var restoreText = void 0,
                    start = void 0,
                    end = void 0;
                  if (
                    range != null &&
                    range.start.node === textNode &&
                    range.end.node === textNode
                  ) {
                    var _ref = [textNode, range.start.offset, range.end.offset];
                    restoreText = _ref[0];
                    start = _ref[1];
                    end = _ref[2];
                  }
                  while (
                    this.domNode.lastChild != null &&
                    this.domNode.lastChild !== this.textNode
                  ) {
                    this.domNode.parentNode.insertBefore(
                      this.domNode.lastChild,
                      this.domNode
                    );
                  }
                  if (this.textNode.data !== Cursor2.CONTENTS) {
                    var text = this.textNode.data
                      .split(Cursor2.CONTENTS)
                      .join('');
                    if (this.next instanceof _text2.default) {
                      restoreText = this.next.domNode;
                      this.next.insertAt(0, text);
                      this.textNode.data = Cursor2.CONTENTS;
                    } else {
                      this.textNode.data = text;
                      this.parent.insertBefore(
                        _parchment2.default.create(this.textNode),
                        this
                      );
                      this.textNode = document.createTextNode(Cursor2.CONTENTS);
                      this.domNode.appendChild(this.textNode);
                    }
                  }
                  this.remove();
                  if (start != null) {
                    var _map = [start, end].map(function (offset) {
                      return Math.max(
                        0,
                        Math.min(restoreText.data.length, offset - 1)
                      );
                    });
                    var _map2 = _slicedToArray(_map, 2);
                    start = _map2[0];
                    end = _map2[1];
                    return {
                      startNode: restoreText,
                      startOffset: start,
                      endNode: restoreText,
                      endOffset: end,
                    };
                  }
                },
              },
              {
                key: 'update',
                value: function update(mutations, context) {
                  var _this2 = this;
                  if (
                    mutations.some(function (mutation) {
                      return (
                        mutation.type === 'characterData' &&
                        mutation.target === _this2.textNode
                      );
                    })
                  ) {
                    var range = this.restore();
                    if (range) context.range = range;
                  }
                },
              },
              {
                key: 'value',
                value: function value() {
                  return '';
                },
              },
            ]);
            return Cursor2;
          })(_parchment2.default.Embed);
          Cursor.blotName = 'cursor';
          Cursor.className = 'ql-cursor';
          Cursor.tagName = 'span';
          Cursor.CONTENTS = '\uFEFF';
          exports2.default = Cursor;
        },
        /* 25 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Container = (function (_Parchment$Container) {
            _inherits(Container2, _Parchment$Container);
            function Container2() {
              _classCallCheck(this, Container2);
              return _possibleConstructorReturn(
                this,
                (
                  Container2.__proto__ || Object.getPrototypeOf(Container2)
                ).apply(this, arguments)
              );
            }
            return Container2;
          })(_parchment2.default.Container);
          Container.allowedChildren = [
            _block2.default,
            _block.BlockEmbed,
            Container,
          ];
          exports2.default = Container;
        },
        /* 26 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.ColorStyle =
            exports2.ColorClass =
            exports2.ColorAttributor =
              void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ColorAttributor = (function (_Parchment$Attributor) {
            _inherits(ColorAttributor2, _Parchment$Attributor);
            function ColorAttributor2() {
              _classCallCheck(this, ColorAttributor2);
              return _possibleConstructorReturn(
                this,
                (
                  ColorAttributor2.__proto__ ||
                  Object.getPrototypeOf(ColorAttributor2)
                ).apply(this, arguments)
              );
            }
            _createClass(ColorAttributor2, [
              {
                key: 'value',
                value: function value(domNode) {
                  var value2 = _get(
                    ColorAttributor2.prototype.__proto__ ||
                      Object.getPrototypeOf(ColorAttributor2.prototype),
                    'value',
                    this
                  ).call(this, domNode);
                  if (!value2.startsWith('rgb(')) return value2;
                  value2 = value2.replace(/^[^\d]+/, '').replace(/[^\d]+$/, '');
                  return (
                    '#' +
                    value2
                      .split(',')
                      .map(function (component) {
                        return ('00' + parseInt(component).toString(16)).slice(
                          -2
                        );
                      })
                      .join('')
                  );
                },
              },
            ]);
            return ColorAttributor2;
          })(_parchment2.default.Attributor.Style);
          var ColorClass = new _parchment2.default.Attributor.Class(
            'color',
            'ql-color',
            {
              scope: _parchment2.default.Scope.INLINE,
            }
          );
          var ColorStyle = new ColorAttributor('color', 'color', {
            scope: _parchment2.default.Scope.INLINE,
          });
          exports2.ColorAttributor = ColorAttributor;
          exports2.ColorClass = ColorClass;
          exports2.ColorStyle = ColorStyle;
        },
        /* 27 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.sanitize = exports2.default = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Link2 = (function (_Inline) {
            _inherits(Link3, _Inline);
            function Link3() {
              _classCallCheck(this, Link3);
              return _possibleConstructorReturn(
                this,
                (Link3.__proto__ || Object.getPrototypeOf(Link3)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Link3,
              [
                {
                  key: 'format',
                  value: function format(name, value) {
                    if (name !== this.statics.blotName || !value)
                      return _get(
                        Link3.prototype.__proto__ ||
                          Object.getPrototypeOf(Link3.prototype),
                        'format',
                        this
                      ).call(this, name, value);
                    value = this.constructor.sanitize(value);
                    this.domNode.setAttribute('href', value);
                  },
                },
              ],
              [
                {
                  key: 'create',
                  value: function create(value) {
                    var node = _get(
                      Link3.__proto__ || Object.getPrototypeOf(Link3),
                      'create',
                      this
                    ).call(this, value);
                    value = this.sanitize(value);
                    node.setAttribute('href', value);
                    node.setAttribute('rel', 'noopener noreferrer');
                    node.setAttribute('target', '_blank');
                    return node;
                  },
                },
                {
                  key: 'formats',
                  value: function formats(domNode) {
                    return domNode.getAttribute('href');
                  },
                },
                {
                  key: 'sanitize',
                  value: function sanitize(url) {
                    return _sanitize(url, this.PROTOCOL_WHITELIST)
                      ? url
                      : this.SANITIZED_URL;
                  },
                },
              ]
            );
            return Link3;
          })(_inline2.default);
          Link2.blotName = 'link';
          Link2.tagName = 'A';
          Link2.SANITIZED_URL = 'about:blank';
          Link2.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];
          function _sanitize(url, protocols) {
            var anchor = document.createElement('a');
            anchor.href = url;
            var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
            return protocols.indexOf(protocol) > -1;
          }
          exports2.default = Link2;
          exports2.sanitize = _sanitize;
        },
        /* 28 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          var _dropdown = __webpack_require__(107);
          var _dropdown2 = _interopRequireDefault(_dropdown);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var optionsCounter = 0;
          function toggleAriaAttribute(element, attribute) {
            element.setAttribute(
              attribute,
              !(element.getAttribute(attribute) === 'true')
            );
          }
          var Picker = (function () {
            function Picker2(select) {
              var _this = this;
              _classCallCheck(this, Picker2);
              this.select = select;
              this.container = document.createElement('span');
              this.buildPicker();
              this.select.style.display = 'none';
              this.select.parentNode.insertBefore(this.container, this.select);
              this.label.addEventListener('mousedown', function () {
                _this.togglePicker();
              });
              this.label.addEventListener('keydown', function (event) {
                switch (event.keyCode) {
                  case _keyboard2.default.keys.ENTER:
                    _this.togglePicker();
                    break;
                  case _keyboard2.default.keys.ESCAPE:
                    _this.escape();
                    event.preventDefault();
                    break;
                }
              });
              this.select.addEventListener('change', this.update.bind(this));
            }
            _createClass(Picker2, [
              {
                key: 'togglePicker',
                value: function togglePicker() {
                  this.container.classList.toggle('ql-expanded');
                  toggleAriaAttribute(this.label, 'aria-expanded');
                  toggleAriaAttribute(this.options, 'aria-hidden');
                },
              },
              {
                key: 'buildItem',
                value: function buildItem(option) {
                  var _this2 = this;
                  var item = document.createElement('span');
                  item.tabIndex = '0';
                  item.setAttribute('role', 'button');
                  item.classList.add('ql-picker-item');
                  if (option.hasAttribute('value')) {
                    item.setAttribute(
                      'data-value',
                      option.getAttribute('value')
                    );
                  }
                  if (option.textContent) {
                    item.setAttribute('data-label', option.textContent);
                  }
                  item.addEventListener('click', function () {
                    _this2.selectItem(item, true);
                  });
                  item.addEventListener('keydown', function (event) {
                    switch (event.keyCode) {
                      case _keyboard2.default.keys.ENTER:
                        _this2.selectItem(item, true);
                        event.preventDefault();
                        break;
                      case _keyboard2.default.keys.ESCAPE:
                        _this2.escape();
                        event.preventDefault();
                        break;
                    }
                  });
                  return item;
                },
              },
              {
                key: 'buildLabel',
                value: function buildLabel() {
                  var label2 = document.createElement('span');
                  label2.classList.add('ql-picker-label');
                  label2.innerHTML = _dropdown2.default;
                  label2.tabIndex = '0';
                  label2.setAttribute('role', 'button');
                  label2.setAttribute('aria-expanded', 'false');
                  this.container.appendChild(label2);
                  return label2;
                },
              },
              {
                key: 'buildOptions',
                value: function buildOptions() {
                  var _this3 = this;
                  var options = document.createElement('span');
                  options.classList.add('ql-picker-options');
                  options.setAttribute('aria-hidden', 'true');
                  options.tabIndex = '-1';
                  options.id = 'ql-picker-options-' + optionsCounter;
                  optionsCounter += 1;
                  this.label.setAttribute('aria-controls', options.id);
                  this.options = options;
                  [].slice.call(this.select.options).forEach(function (option) {
                    var item = _this3.buildItem(option);
                    options.appendChild(item);
                    if (option.selected === true) {
                      _this3.selectItem(item);
                    }
                  });
                  this.container.appendChild(options);
                },
              },
              {
                key: 'buildPicker',
                value: function buildPicker() {
                  var _this4 = this;
                  [].slice
                    .call(this.select.attributes)
                    .forEach(function (item) {
                      _this4.container.setAttribute(item.name, item.value);
                    });
                  this.container.classList.add('ql-picker');
                  this.label = this.buildLabel();
                  this.buildOptions();
                },
              },
              {
                key: 'escape',
                value: function escape2() {
                  var _this5 = this;
                  this.close();
                  setTimeout(function () {
                    return _this5.label.focus();
                  }, 1);
                },
              },
              {
                key: 'close',
                value: function close() {
                  this.container.classList.remove('ql-expanded');
                  this.label.setAttribute('aria-expanded', 'false');
                  this.options.setAttribute('aria-hidden', 'true');
                },
              },
              {
                key: 'selectItem',
                value: function selectItem(item) {
                  var trigger =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : false;
                  var selected2 = this.container.querySelector('.ql-selected');
                  if (item === selected2) return;
                  if (selected2 != null) {
                    selected2.classList.remove('ql-selected');
                  }
                  if (item == null) return;
                  item.classList.add('ql-selected');
                  this.select.selectedIndex = [].indexOf.call(
                    item.parentNode.children,
                    item
                  );
                  if (item.hasAttribute('data-value')) {
                    this.label.setAttribute(
                      'data-value',
                      item.getAttribute('data-value')
                    );
                  } else {
                    this.label.removeAttribute('data-value');
                  }
                  if (item.hasAttribute('data-label')) {
                    this.label.setAttribute(
                      'data-label',
                      item.getAttribute('data-label')
                    );
                  } else {
                    this.label.removeAttribute('data-label');
                  }
                  if (trigger) {
                    if (typeof Event === 'function') {
                      this.select.dispatchEvent(new Event('change'));
                    } else if (
                      (typeof Event === 'undefined'
                        ? 'undefined'
                        : _typeof(Event)) === 'object'
                    ) {
                      var event = document.createEvent('Event');
                      event.initEvent('change', true, true);
                      this.select.dispatchEvent(event);
                    }
                    this.close();
                  }
                },
              },
              {
                key: 'update',
                value: function update() {
                  var option = void 0;
                  if (this.select.selectedIndex > -1) {
                    var item =
                      this.container.querySelector('.ql-picker-options')
                        .children[this.select.selectedIndex];
                    option = this.select.options[this.select.selectedIndex];
                    this.selectItem(item);
                  } else {
                    this.selectItem(null);
                  }
                  var isActive =
                    option != null &&
                    option !== this.select.querySelector('option[selected]');
                  this.label.classList.toggle('ql-active', isActive);
                },
              },
            ]);
            return Picker2;
          })();
          exports2.default = Picker;
        },
        /* 29 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          var _cursor = __webpack_require__(24);
          var _cursor2 = _interopRequireDefault(_cursor);
          var _embed = __webpack_require__(35);
          var _embed2 = _interopRequireDefault(_embed);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _scroll = __webpack_require__(22);
          var _scroll2 = _interopRequireDefault(_scroll);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          var _clipboard = __webpack_require__(55);
          var _clipboard2 = _interopRequireDefault(_clipboard);
          var _history = __webpack_require__(42);
          var _history2 = _interopRequireDefault(_history);
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          _quill2.default.register({
            'blots/block': _block2.default,
            'blots/block/embed': _block.BlockEmbed,
            'blots/break': _break2.default,
            'blots/container': _container2.default,
            'blots/cursor': _cursor2.default,
            'blots/embed': _embed2.default,
            'blots/inline': _inline2.default,
            'blots/scroll': _scroll2.default,
            'blots/text': _text2.default,
            'modules/clipboard': _clipboard2.default,
            'modules/history': _history2.default,
            'modules/keyboard': _keyboard2.default,
          });
          _parchment2.default.register(
            _block2.default,
            _break2.default,
            _cursor2.default,
            _inline2.default,
            _scroll2.default,
            _text2.default
          );
          exports2.default = _quill2.default;
        },
        /* 30 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', { value: true });
          var Registry = __webpack_require__(1);
          var ShadowBlot =
            /** @class */
            (function () {
              function ShadowBlot2(domNode) {
                this.domNode = domNode;
                this.domNode[Registry.DATA_KEY] = { blot: this };
              }
              Object.defineProperty(ShadowBlot2.prototype, 'statics', {
                // Hack for accessing inherited static methods
                get: function () {
                  return this.constructor;
                },
                enumerable: true,
                configurable: true,
              });
              ShadowBlot2.create = function (value) {
                if (this.tagName == null) {
                  throw new Registry.ParchmentError(
                    'Blot definition missing tagName'
                  );
                }
                var node;
                if (Array.isArray(this.tagName)) {
                  if (typeof value === 'string') {
                    value = value.toUpperCase();
                    if (parseInt(value).toString() === value) {
                      value = parseInt(value);
                    }
                  }
                  if (typeof value === 'number') {
                    node = document.createElement(this.tagName[value - 1]);
                  } else if (this.tagName.indexOf(value) > -1) {
                    node = document.createElement(value);
                  } else {
                    node = document.createElement(this.tagName[0]);
                  }
                } else {
                  node = document.createElement(this.tagName);
                }
                if (this.className) {
                  node.classList.add(this.className);
                }
                return node;
              };
              ShadowBlot2.prototype.attach = function () {
                if (this.parent != null) {
                  this.scroll = this.parent.scroll;
                }
              };
              ShadowBlot2.prototype.clone = function () {
                var domNode = this.domNode.cloneNode(false);
                return Registry.create(domNode);
              };
              ShadowBlot2.prototype.detach = function () {
                if (this.parent != null) this.parent.removeChild(this);
                delete this.domNode[Registry.DATA_KEY];
              };
              ShadowBlot2.prototype.deleteAt = function (index, length) {
                var blot = this.isolate(index, length);
                blot.remove();
              };
              ShadowBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                var blot = this.isolate(index, length);
                if (
                  Registry.query(name, Registry.Scope.BLOT) != null &&
                  value
                ) {
                  blot.wrap(name, value);
                } else if (
                  Registry.query(name, Registry.Scope.ATTRIBUTE) != null
                ) {
                  var parent = Registry.create(this.statics.scope);
                  blot.wrap(parent);
                  parent.format(name, value);
                }
              };
              ShadowBlot2.prototype.insertAt = function (index, value, def) {
                var blot =
                  def == null
                    ? Registry.create('text', value)
                    : Registry.create(value, def);
                var ref = this.split(index);
                this.parent.insertBefore(blot, ref);
              };
              ShadowBlot2.prototype.insertInto = function (
                parentBlot,
                refBlot
              ) {
                if (refBlot === void 0) {
                  refBlot = null;
                }
                if (this.parent != null) {
                  this.parent.children.remove(this);
                }
                var refDomNode = null;
                parentBlot.children.insertBefore(this, refBlot);
                if (refBlot != null) {
                  refDomNode = refBlot.domNode;
                }
                if (
                  this.domNode.parentNode != parentBlot.domNode ||
                  this.domNode.nextSibling != refDomNode
                ) {
                  parentBlot.domNode.insertBefore(this.domNode, refDomNode);
                }
                this.parent = parentBlot;
                this.attach();
              };
              ShadowBlot2.prototype.isolate = function (index, length) {
                var target = this.split(index);
                target.split(length);
                return target;
              };
              ShadowBlot2.prototype.length = function () {
                return 1;
              };
              ShadowBlot2.prototype.offset = function (root2) {
                if (root2 === void 0) {
                  root2 = this.parent;
                }
                if (this.parent == null || this == root2) return 0;
                return (
                  this.parent.children.offset(this) + this.parent.offset(root2)
                );
              };
              ShadowBlot2.prototype.optimize = function (context) {
                if (this.domNode[Registry.DATA_KEY] != null) {
                  delete this.domNode[Registry.DATA_KEY].mutations;
                }
              };
              ShadowBlot2.prototype.remove = function () {
                if (this.domNode.parentNode != null) {
                  this.domNode.parentNode.removeChild(this.domNode);
                }
                this.detach();
              };
              ShadowBlot2.prototype.replace = function (target) {
                if (target.parent == null) return;
                target.parent.insertBefore(this, target.next);
                target.remove();
              };
              ShadowBlot2.prototype.replaceWith = function (name, value) {
                var replacement =
                  typeof name === 'string'
                    ? Registry.create(name, value)
                    : name;
                replacement.replace(this);
                return replacement;
              };
              ShadowBlot2.prototype.split = function (index, force) {
                return index === 0 ? this : this.next;
              };
              ShadowBlot2.prototype.update = function (mutations, context) {};
              ShadowBlot2.prototype.wrap = function (name, value) {
                var wrapper =
                  typeof name === 'string'
                    ? Registry.create(name, value)
                    : name;
                if (this.parent != null) {
                  this.parent.insertBefore(wrapper, this.next);
                }
                wrapper.appendChild(this);
                return wrapper;
              };
              ShadowBlot2.blotName = 'abstract';
              return ShadowBlot2;
            })();
          exports2.default = ShadowBlot;
        },
        /* 31 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', { value: true });
          var attributor_1 = __webpack_require__(12);
          var class_1 = __webpack_require__(32);
          var style_1 = __webpack_require__(33);
          var Registry = __webpack_require__(1);
          var AttributorStore =
            /** @class */
            (function () {
              function AttributorStore2(domNode) {
                this.attributes = {};
                this.domNode = domNode;
                this.build();
              }
              AttributorStore2.prototype.attribute = function (
                attribute,
                value
              ) {
                if (value) {
                  if (attribute.add(this.domNode, value)) {
                    if (attribute.value(this.domNode) != null) {
                      this.attributes[attribute.attrName] = attribute;
                    } else {
                      delete this.attributes[attribute.attrName];
                    }
                  }
                } else {
                  attribute.remove(this.domNode);
                  delete this.attributes[attribute.attrName];
                }
              };
              AttributorStore2.prototype.build = function () {
                var _this = this;
                this.attributes = {};
                var attributes = attributor_1.default.keys(this.domNode);
                var classes = class_1.default.keys(this.domNode);
                var styles = style_1.default.keys(this.domNode);
                attributes
                  .concat(classes)
                  .concat(styles)
                  .forEach(function (name) {
                    var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
                    if (attr instanceof attributor_1.default) {
                      _this.attributes[attr.attrName] = attr;
                    }
                  });
              };
              AttributorStore2.prototype.copy = function (target) {
                var _this = this;
                Object.keys(this.attributes).forEach(function (key) {
                  var value = _this.attributes[key].value(_this.domNode);
                  target.format(key, value);
                });
              };
              AttributorStore2.prototype.move = function (target) {
                var _this = this;
                this.copy(target);
                Object.keys(this.attributes).forEach(function (key) {
                  _this.attributes[key].remove(_this.domNode);
                });
                this.attributes = {};
              };
              AttributorStore2.prototype.values = function () {
                var _this = this;
                return Object.keys(this.attributes).reduce(function (
                  attributes,
                  name
                ) {
                  attributes[name] = _this.attributes[name].value(
                    _this.domNode
                  );
                  return attributes;
                }, {});
              };
              return AttributorStore2;
            })();
          exports2.default = AttributorStore;
        },
        /* 32 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var attributor_1 = __webpack_require__(12);
          function match(node, prefix) {
            var className = node.getAttribute('class') || '';
            return className.split(/\s+/).filter(function (name) {
              return name.indexOf(prefix + '-') === 0;
            });
          }
          var ClassAttributor =
            /** @class */
            (function (_super) {
              __extends2(ClassAttributor2, _super);
              function ClassAttributor2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              ClassAttributor2.keys = function (node) {
                return (node.getAttribute('class') || '')
                  .split(/\s+/)
                  .map(function (name) {
                    return name.split('-').slice(0, -1).join('-');
                  });
              };
              ClassAttributor2.prototype.add = function (node, value) {
                if (!this.canAdd(node, value)) return false;
                this.remove(node);
                node.classList.add(this.keyName + '-' + value);
                return true;
              };
              ClassAttributor2.prototype.remove = function (node) {
                var matches = match(node, this.keyName);
                matches.forEach(function (name) {
                  node.classList.remove(name);
                });
                if (node.classList.length === 0) {
                  node.removeAttribute('class');
                }
              };
              ClassAttributor2.prototype.value = function (node) {
                var result = match(node, this.keyName)[0] || '';
                var value = result.slice(this.keyName.length + 1);
                return this.canAdd(node, value) ? value : '';
              };
              return ClassAttributor2;
            })(attributor_1.default);
          exports2.default = ClassAttributor;
        },
        /* 33 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var attributor_1 = __webpack_require__(12);
          function camelize(name) {
            var parts = name.split('-');
            var rest = parts
              .slice(1)
              .map(function (part) {
                return part[0].toUpperCase() + part.slice(1);
              })
              .join('');
            return parts[0] + rest;
          }
          var StyleAttributor =
            /** @class */
            (function (_super) {
              __extends2(StyleAttributor2, _super);
              function StyleAttributor2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              StyleAttributor2.keys = function (node) {
                return (node.getAttribute('style') || '')
                  .split(';')
                  .map(function (value) {
                    var arr = value.split(':');
                    return arr[0].trim();
                  });
              };
              StyleAttributor2.prototype.add = function (node, value) {
                if (!this.canAdd(node, value)) return false;
                node.style[camelize(this.keyName)] = value;
                return true;
              };
              StyleAttributor2.prototype.remove = function (node) {
                node.style[camelize(this.keyName)] = '';
                if (!node.getAttribute('style')) {
                  node.removeAttribute('style');
                }
              };
              StyleAttributor2.prototype.value = function (node) {
                var value = node.style[camelize(this.keyName)];
                return this.canAdd(node, value) ? value : '';
              };
              return StyleAttributor2;
            })(attributor_1.default);
          exports2.default = StyleAttributor;
        },
        /* 34 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var Theme = (function () {
            function Theme2(quill2, options) {
              _classCallCheck(this, Theme2);
              this.quill = quill2;
              this.options = options;
              this.modules = {};
            }
            _createClass(Theme2, [
              {
                key: 'init',
                value: function init() {
                  var _this = this;
                  Object.keys(this.options.modules).forEach(function (name) {
                    if (_this.modules[name] == null) {
                      _this.addModule(name);
                    }
                  });
                },
              },
              {
                key: 'addModule',
                value: function addModule(name) {
                  var moduleClass = this.quill.constructor.import(
                    'modules/' + name
                  );
                  this.modules[name] = new moduleClass(
                    this.quill,
                    this.options.modules[name] || {}
                  );
                  return this.modules[name];
                },
              },
            ]);
            return Theme2;
          })();
          Theme.DEFAULTS = {
            modules: {},
          };
          Theme.themes = {
            default: Theme,
          };
          exports2.default = Theme;
        },
        /* 35 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var GUARD_TEXT = '\uFEFF';
          var Embed = (function (_Parchment$Embed) {
            _inherits(Embed2, _Parchment$Embed);
            function Embed2(node) {
              _classCallCheck(this, Embed2);
              var _this = _possibleConstructorReturn(
                this,
                (Embed2.__proto__ || Object.getPrototypeOf(Embed2)).call(
                  this,
                  node
                )
              );
              _this.contentNode = document.createElement('span');
              _this.contentNode.setAttribute('contenteditable', false);
              [].slice
                .call(_this.domNode.childNodes)
                .forEach(function (childNode) {
                  _this.contentNode.appendChild(childNode);
                });
              _this.leftGuard = document.createTextNode(GUARD_TEXT);
              _this.rightGuard = document.createTextNode(GUARD_TEXT);
              _this.domNode.appendChild(_this.leftGuard);
              _this.domNode.appendChild(_this.contentNode);
              _this.domNode.appendChild(_this.rightGuard);
              return _this;
            }
            _createClass(Embed2, [
              {
                key: 'index',
                value: function index(node, offset) {
                  if (node === this.leftGuard) return 0;
                  if (node === this.rightGuard) return 1;
                  return _get(
                    Embed2.prototype.__proto__ ||
                      Object.getPrototypeOf(Embed2.prototype),
                    'index',
                    this
                  ).call(this, node, offset);
                },
              },
              {
                key: 'restore',
                value: function restore(node) {
                  var range = void 0,
                    textNode = void 0;
                  var text = node.data.split(GUARD_TEXT).join('');
                  if (node === this.leftGuard) {
                    if (this.prev instanceof _text2.default) {
                      var prevLength = this.prev.length();
                      this.prev.insertAt(prevLength, text);
                      range = {
                        startNode: this.prev.domNode,
                        startOffset: prevLength + text.length,
                      };
                    } else {
                      textNode = document.createTextNode(text);
                      this.parent.insertBefore(
                        _parchment2.default.create(textNode),
                        this
                      );
                      range = {
                        startNode: textNode,
                        startOffset: text.length,
                      };
                    }
                  } else if (node === this.rightGuard) {
                    if (this.next instanceof _text2.default) {
                      this.next.insertAt(0, text);
                      range = {
                        startNode: this.next.domNode,
                        startOffset: text.length,
                      };
                    } else {
                      textNode = document.createTextNode(text);
                      this.parent.insertBefore(
                        _parchment2.default.create(textNode),
                        this.next
                      );
                      range = {
                        startNode: textNode,
                        startOffset: text.length,
                      };
                    }
                  }
                  node.data = GUARD_TEXT;
                  return range;
                },
              },
              {
                key: 'update',
                value: function update(mutations, context) {
                  var _this2 = this;
                  mutations.forEach(function (mutation) {
                    if (
                      mutation.type === 'characterData' &&
                      (mutation.target === _this2.leftGuard ||
                        mutation.target === _this2.rightGuard)
                    ) {
                      var range = _this2.restore(mutation.target);
                      if (range) context.range = range;
                    }
                  });
                },
              },
            ]);
            return Embed2;
          })(_parchment2.default.Embed);
          exports2.default = Embed;
        },
        /* 36 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.AlignStyle =
            exports2.AlignClass =
            exports2.AlignAttribute =
              void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var config = {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: ['right', 'center', 'justify'],
          };
          var AlignAttribute = new _parchment2.default.Attributor.Attribute(
            'align',
            'align',
            config
          );
          var AlignClass = new _parchment2.default.Attributor.Class(
            'align',
            'ql-align',
            config
          );
          var AlignStyle = new _parchment2.default.Attributor.Style(
            'align',
            'text-align',
            config
          );
          exports2.AlignAttribute = AlignAttribute;
          exports2.AlignClass = AlignClass;
          exports2.AlignStyle = AlignStyle;
        },
        /* 37 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.BackgroundStyle = exports2.BackgroundClass = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _color = __webpack_require__(26);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var BackgroundClass = new _parchment2.default.Attributor.Class(
            'background',
            'ql-bg',
            {
              scope: _parchment2.default.Scope.INLINE,
            }
          );
          var BackgroundStyle = new _color.ColorAttributor(
            'background',
            'background-color',
            {
              scope: _parchment2.default.Scope.INLINE,
            }
          );
          exports2.BackgroundClass = BackgroundClass;
          exports2.BackgroundStyle = BackgroundStyle;
        },
        /* 38 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.DirectionStyle =
            exports2.DirectionClass =
            exports2.DirectionAttribute =
              void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var config = {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: ['rtl'],
          };
          var DirectionAttribute = new _parchment2.default.Attributor.Attribute(
            'direction',
            'dir',
            config
          );
          var DirectionClass = new _parchment2.default.Attributor.Class(
            'direction',
            'ql-direction',
            config
          );
          var DirectionStyle = new _parchment2.default.Attributor.Style(
            'direction',
            'direction',
            config
          );
          exports2.DirectionAttribute = DirectionAttribute;
          exports2.DirectionClass = DirectionClass;
          exports2.DirectionStyle = DirectionStyle;
        },
        /* 39 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.FontClass = exports2.FontStyle = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var config = {
            scope: _parchment2.default.Scope.INLINE,
            whitelist: ['serif', 'monospace'],
          };
          var FontClass = new _parchment2.default.Attributor.Class(
            'font',
            'ql-font',
            config
          );
          var FontStyleAttributor = (function (_Parchment$Attributor) {
            _inherits(FontStyleAttributor2, _Parchment$Attributor);
            function FontStyleAttributor2() {
              _classCallCheck(this, FontStyleAttributor2);
              return _possibleConstructorReturn(
                this,
                (
                  FontStyleAttributor2.__proto__ ||
                  Object.getPrototypeOf(FontStyleAttributor2)
                ).apply(this, arguments)
              );
            }
            _createClass(FontStyleAttributor2, [
              {
                key: 'value',
                value: function value(node) {
                  return _get(
                    FontStyleAttributor2.prototype.__proto__ ||
                      Object.getPrototypeOf(FontStyleAttributor2.prototype),
                    'value',
                    this
                  )
                    .call(this, node)
                    .replace(/["']/g, '');
                },
              },
            ]);
            return FontStyleAttributor2;
          })(_parchment2.default.Attributor.Style);
          var FontStyle = new FontStyleAttributor(
            'font',
            'font-family',
            config
          );
          exports2.FontStyle = FontStyle;
          exports2.FontClass = FontClass;
        },
        /* 40 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.SizeStyle = exports2.SizeClass = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var SizeClass = new _parchment2.default.Attributor.Class(
            'size',
            'ql-size',
            {
              scope: _parchment2.default.Scope.INLINE,
              whitelist: ['small', 'large', 'huge'],
            }
          );
          var SizeStyle = new _parchment2.default.Attributor.Style(
            'size',
            'font-size',
            {
              scope: _parchment2.default.Scope.INLINE,
              whitelist: ['10px', '18px', '32px'],
            }
          );
          exports2.SizeClass = SizeClass;
          exports2.SizeStyle = SizeStyle;
        },
        /* 41 */
        /***/
        function (module2, exports2, __webpack_require__) {
          module2.exports = {
            align: {
              '': __webpack_require__(76),
              center: __webpack_require__(77),
              right: __webpack_require__(78),
              justify: __webpack_require__(79),
            },
            background: __webpack_require__(80),
            blockquote: __webpack_require__(81),
            bold: __webpack_require__(82),
            clean: __webpack_require__(83),
            code: __webpack_require__(58),
            'code-block': __webpack_require__(58),
            color: __webpack_require__(84),
            direction: {
              '': __webpack_require__(85),
              rtl: __webpack_require__(86),
            },
            float: {
              center: __webpack_require__(87),
              full: __webpack_require__(88),
              left: __webpack_require__(89),
              right: __webpack_require__(90),
            },
            formula: __webpack_require__(91),
            header: {
              1: __webpack_require__(92),
              2: __webpack_require__(93),
            },
            italic: __webpack_require__(94),
            image: __webpack_require__(95),
            indent: {
              '+1': __webpack_require__(96),
              '-1': __webpack_require__(97),
            },
            link: __webpack_require__(98),
            list: {
              ordered: __webpack_require__(99),
              bullet: __webpack_require__(100),
              check: __webpack_require__(101),
            },
            script: {
              sub: __webpack_require__(102),
              super: __webpack_require__(103),
            },
            strike: __webpack_require__(104),
            underline: __webpack_require__(105),
            video: __webpack_require__(106),
          };
        },
        /* 42 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.getLastChangeIndex = exports2.default = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var History = (function (_Module) {
            _inherits(History2, _Module);
            function History2(quill2, options) {
              _classCallCheck(this, History2);
              var _this = _possibleConstructorReturn(
                this,
                (History2.__proto__ || Object.getPrototypeOf(History2)).call(
                  this,
                  quill2,
                  options
                )
              );
              _this.lastRecorded = 0;
              _this.ignoreChange = false;
              _this.clear();
              _this.quill.on(
                _quill2.default.events.EDITOR_CHANGE,
                function (eventName, delta, oldDelta, source) {
                  if (
                    eventName !== _quill2.default.events.TEXT_CHANGE ||
                    _this.ignoreChange
                  )
                    return;
                  if (
                    !_this.options.userOnly ||
                    source === _quill2.default.sources.USER
                  ) {
                    _this.record(delta, oldDelta);
                  } else {
                    _this.transform(delta);
                  }
                }
              );
              _this.quill.keyboard.addBinding(
                { key: 'Z', shortKey: true },
                _this.undo.bind(_this)
              );
              _this.quill.keyboard.addBinding(
                { key: 'Z', shortKey: true, shiftKey: true },
                _this.redo.bind(_this)
              );
              if (/Win/i.test(navigator.platform)) {
                _this.quill.keyboard.addBinding(
                  { key: 'Y', shortKey: true },
                  _this.redo.bind(_this)
                );
              }
              return _this;
            }
            _createClass(History2, [
              {
                key: 'change',
                value: function change(source, dest) {
                  if (this.stack[source].length === 0) return;
                  var delta = this.stack[source].pop();
                  this.stack[dest].push(delta);
                  this.lastRecorded = 0;
                  this.ignoreChange = true;
                  this.quill.updateContents(
                    delta[source],
                    _quill2.default.sources.USER
                  );
                  this.ignoreChange = false;
                  var index = getLastChangeIndex(delta[source]);
                  this.quill.setSelection(index);
                },
              },
              {
                key: 'clear',
                value: function clear() {
                  this.stack = { undo: [], redo: [] };
                },
              },
              {
                key: 'cutoff',
                value: function cutoff() {
                  this.lastRecorded = 0;
                },
              },
              {
                key: 'record',
                value: function record(changeDelta, oldDelta) {
                  if (changeDelta.ops.length === 0) return;
                  this.stack.redo = [];
                  var undoDelta = this.quill.getContents().diff(oldDelta);
                  var timestamp = Date.now();
                  if (
                    this.lastRecorded + this.options.delay > timestamp &&
                    this.stack.undo.length > 0
                  ) {
                    var delta = this.stack.undo.pop();
                    undoDelta = undoDelta.compose(delta.undo);
                    changeDelta = delta.redo.compose(changeDelta);
                  } else {
                    this.lastRecorded = timestamp;
                  }
                  this.stack.undo.push({
                    redo: changeDelta,
                    undo: undoDelta,
                  });
                  if (this.stack.undo.length > this.options.maxStack) {
                    this.stack.undo.shift();
                  }
                },
              },
              {
                key: 'redo',
                value: function redo() {
                  this.change('redo', 'undo');
                },
              },
              {
                key: 'transform',
                value: function transform(delta) {
                  this.stack.undo.forEach(function (change) {
                    change.undo = delta.transform(change.undo, true);
                    change.redo = delta.transform(change.redo, true);
                  });
                  this.stack.redo.forEach(function (change) {
                    change.undo = delta.transform(change.undo, true);
                    change.redo = delta.transform(change.redo, true);
                  });
                },
              },
              {
                key: 'undo',
                value: function undo() {
                  this.change('undo', 'redo');
                },
              },
            ]);
            return History2;
          })(_module2.default);
          History.DEFAULTS = {
            delay: 1e3,
            maxStack: 100,
            userOnly: false,
          };
          function endsWithNewlineChange(delta) {
            var lastOp = delta.ops[delta.ops.length - 1];
            if (lastOp == null) return false;
            if (lastOp.insert != null) {
              return (
                typeof lastOp.insert === 'string' &&
                lastOp.insert.endsWith('\n')
              );
            }
            if (lastOp.attributes != null) {
              return Object.keys(lastOp.attributes).some(function (attr) {
                return (
                  _parchment2.default.query(
                    attr,
                    _parchment2.default.Scope.BLOCK
                  ) != null
                );
              });
            }
            return false;
          }
          function getLastChangeIndex(delta) {
            var deleteLength = delta.reduce(function (length, op) {
              length += op.delete || 0;
              return length;
            }, 0);
            var changeIndex = delta.length() - deleteLength;
            if (endsWithNewlineChange(delta)) {
              changeIndex -= 1;
            }
            return changeIndex;
          }
          exports2.default = History;
          exports2.getLastChangeIndex = getLastChangeIndex;
        },
        /* 43 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.BaseTooltip = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          var _theme = __webpack_require__(34);
          var _theme2 = _interopRequireDefault(_theme);
          var _colorPicker = __webpack_require__(59);
          var _colorPicker2 = _interopRequireDefault(_colorPicker);
          var _iconPicker = __webpack_require__(60);
          var _iconPicker2 = _interopRequireDefault(_iconPicker);
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          var _tooltip = __webpack_require__(61);
          var _tooltip2 = _interopRequireDefault(_tooltip);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ALIGNS = [false, 'center', 'right', 'justify'];
          var COLORS = [
            '#000000',
            '#e60000',
            '#ff9900',
            '#ffff00',
            '#008a00',
            '#0066cc',
            '#9933ff',
            '#ffffff',
            '#facccc',
            '#ffebcc',
            '#ffffcc',
            '#cce8cc',
            '#cce0f5',
            '#ebd6ff',
            '#bbbbbb',
            '#f06666',
            '#ffc266',
            '#ffff66',
            '#66b966',
            '#66a3e0',
            '#c285ff',
            '#888888',
            '#a10000',
            '#b26b00',
            '#b2b200',
            '#006100',
            '#0047b2',
            '#6b24b2',
            '#444444',
            '#5c0000',
            '#663d00',
            '#666600',
            '#003700',
            '#002966',
            '#3d1466',
          ];
          var FONTS = [false, 'serif', 'monospace'];
          var HEADERS = ['1', '2', '3', false];
          var SIZES = ['small', false, 'large', 'huge'];
          var BaseTheme = (function (_Theme) {
            _inherits(BaseTheme2, _Theme);
            function BaseTheme2(quill2, options) {
              _classCallCheck(this, BaseTheme2);
              var _this = _possibleConstructorReturn(
                this,
                (
                  BaseTheme2.__proto__ || Object.getPrototypeOf(BaseTheme2)
                ).call(this, quill2, options)
              );
              var listener = function listener2(e) {
                if (!document.body.contains(quill2.root)) {
                  return document.body.removeEventListener('click', listener2);
                }
                if (
                  _this.tooltip != null &&
                  !_this.tooltip.root.contains(e.target) &&
                  document.activeElement !== _this.tooltip.textbox &&
                  !_this.quill.hasFocus()
                ) {
                  _this.tooltip.hide();
                }
                if (_this.pickers != null) {
                  _this.pickers.forEach(function (picker) {
                    if (!picker.container.contains(e.target)) {
                      picker.close();
                    }
                  });
                }
              };
              quill2.emitter.listenDOM('click', document.body, listener);
              return _this;
            }
            _createClass(BaseTheme2, [
              {
                key: 'addModule',
                value: function addModule(name) {
                  var module3 = _get(
                    BaseTheme2.prototype.__proto__ ||
                      Object.getPrototypeOf(BaseTheme2.prototype),
                    'addModule',
                    this
                  ).call(this, name);
                  if (name === 'toolbar') {
                    this.extendToolbar(module3);
                  }
                  return module3;
                },
              },
              {
                key: 'buildButtons',
                value: function buildButtons(buttons, icons2) {
                  buttons.forEach(function (button) {
                    var className = button.getAttribute('class') || '';
                    className.split(/\s+/).forEach(function (name) {
                      if (!name.startsWith('ql-')) return;
                      name = name.slice('ql-'.length);
                      if (icons2[name] == null) return;
                      if (name === 'direction') {
                        button.innerHTML =
                          icons2[name][''] + icons2[name]['rtl'];
                      } else if (typeof icons2[name] === 'string') {
                        button.innerHTML = icons2[name];
                      } else {
                        var value = button.value || '';
                        if (value != null && icons2[name][value]) {
                          button.innerHTML = icons2[name][value];
                        }
                      }
                    });
                  });
                },
              },
              {
                key: 'buildPickers',
                value: function buildPickers(selects, icons2) {
                  var _this2 = this;
                  this.pickers = selects.map(function (select) {
                    if (select.classList.contains('ql-align')) {
                      if (select.querySelector('option') == null) {
                        fillSelect(select, ALIGNS);
                      }
                      return new _iconPicker2.default(select, icons2.align);
                    } else if (
                      select.classList.contains('ql-background') ||
                      select.classList.contains('ql-color')
                    ) {
                      var format = select.classList.contains('ql-background')
                        ? 'background'
                        : 'color';
                      if (select.querySelector('option') == null) {
                        fillSelect(
                          select,
                          COLORS,
                          format === 'background' ? '#ffffff' : '#000000'
                        );
                      }
                      return new _colorPicker2.default(select, icons2[format]);
                    } else {
                      if (select.querySelector('option') == null) {
                        if (select.classList.contains('ql-font')) {
                          fillSelect(select, FONTS);
                        } else if (select.classList.contains('ql-header')) {
                          fillSelect(select, HEADERS);
                        } else if (select.classList.contains('ql-size')) {
                          fillSelect(select, SIZES);
                        }
                      }
                      return new _picker2.default(select);
                    }
                  });
                  var update = function update2() {
                    _this2.pickers.forEach(function (picker) {
                      picker.update();
                    });
                  };
                  this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);
                },
              },
            ]);
            return BaseTheme2;
          })(_theme2.default);
          BaseTheme.DEFAULTS = (0, _extend2.default)(
            true,
            {},
            _theme2.default.DEFAULTS,
            {
              modules: {
                toolbar: {
                  handlers: {
                    formula: function formula() {
                      this.quill.theme.tooltip.edit('formula');
                    },
                    image: function image() {
                      var _this3 = this;
                      var fileInput2 = this.container.querySelector(
                        'input.ql-image[type=file]'
                      );
                      if (fileInput2 == null) {
                        fileInput2 = document.createElement('input');
                        fileInput2.setAttribute('type', 'file');
                        fileInput2.setAttribute(
                          'accept',
                          'image/png, image/gif, image/jpeg, image/bmp, image/x-icon'
                        );
                        fileInput2.classList.add('ql-image');
                        fileInput2.addEventListener('change', function () {
                          if (
                            fileInput2.files != null &&
                            fileInput2.files[0] != null
                          ) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                              var range = _this3.quill.getSelection(true);
                              _this3.quill.updateContents(
                                new _quillDelta2.default()
                                  .retain(range.index)
                                  .delete(range.length)
                                  .insert({ image: e.target.result }),
                                _emitter2.default.sources.USER
                              );
                              _this3.quill.setSelection(
                                range.index + 1,
                                _emitter2.default.sources.SILENT
                              );
                              fileInput2.value = '';
                            };
                            reader.readAsDataURL(fileInput2.files[0]);
                          }
                        });
                        this.container.appendChild(fileInput2);
                      }
                      fileInput2.click();
                    },
                    video: function video() {
                      this.quill.theme.tooltip.edit('video');
                    },
                  },
                },
              },
            }
          );
          var BaseTooltip = (function (_Tooltip) {
            _inherits(BaseTooltip2, _Tooltip);
            function BaseTooltip2(quill2, boundsContainer) {
              _classCallCheck(this, BaseTooltip2);
              var _this4 = _possibleConstructorReturn(
                this,
                (
                  BaseTooltip2.__proto__ || Object.getPrototypeOf(BaseTooltip2)
                ).call(this, quill2, boundsContainer)
              );
              _this4.textbox = _this4.root.querySelector('input[type="text"]');
              _this4.listen();
              return _this4;
            }
            _createClass(BaseTooltip2, [
              {
                key: 'listen',
                value: function listen() {
                  var _this5 = this;
                  this.textbox.addEventListener('keydown', function (event) {
                    if (_keyboard2.default.match(event, 'enter')) {
                      _this5.save();
                      event.preventDefault();
                    } else if (_keyboard2.default.match(event, 'escape')) {
                      _this5.cancel();
                      event.preventDefault();
                    }
                  });
                },
              },
              {
                key: 'cancel',
                value: function cancel() {
                  this.hide();
                },
              },
              {
                key: 'edit',
                value: function edit() {
                  var mode =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 'link';
                  var preview =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : null;
                  this.root.classList.remove('ql-hidden');
                  this.root.classList.add('ql-editing');
                  if (preview != null) {
                    this.textbox.value = preview;
                  } else if (mode !== this.root.getAttribute('data-mode')) {
                    this.textbox.value = '';
                  }
                  this.position(
                    this.quill.getBounds(this.quill.selection.savedRange)
                  );
                  this.textbox.select();
                  this.textbox.setAttribute(
                    'placeholder',
                    this.textbox.getAttribute('data-' + mode) || ''
                  );
                  this.root.setAttribute('data-mode', mode);
                },
              },
              {
                key: 'restoreFocus',
                value: function restoreFocus() {
                  var scrollTop = this.quill.scrollingContainer.scrollTop;
                  this.quill.focus();
                  this.quill.scrollingContainer.scrollTop = scrollTop;
                },
              },
              {
                key: 'save',
                value: function save() {
                  var value = this.textbox.value;
                  switch (this.root.getAttribute('data-mode')) {
                    case 'link': {
                      var scrollTop = this.quill.root.scrollTop;
                      if (this.linkRange) {
                        this.quill.formatText(
                          this.linkRange,
                          'link',
                          value,
                          _emitter2.default.sources.USER
                        );
                        delete this.linkRange;
                      } else {
                        this.restoreFocus();
                        this.quill.format(
                          'link',
                          value,
                          _emitter2.default.sources.USER
                        );
                      }
                      this.quill.root.scrollTop = scrollTop;
                      break;
                    }
                    case 'video': {
                      value = extractVideoUrl(value);
                    }
                    case 'formula': {
                      if (!value) break;
                      var range = this.quill.getSelection(true);
                      if (range != null) {
                        var index = range.index + range.length;
                        this.quill.insertEmbed(
                          index,
                          this.root.getAttribute('data-mode'),
                          value,
                          _emitter2.default.sources.USER
                        );
                        if (this.root.getAttribute('data-mode') === 'formula') {
                          this.quill.insertText(
                            index + 1,
                            ' ',
                            _emitter2.default.sources.USER
                          );
                        }
                        this.quill.setSelection(
                          index + 2,
                          _emitter2.default.sources.USER
                        );
                      }
                      break;
                    }
                  }
                  this.textbox.value = '';
                  this.hide();
                },
              },
            ]);
            return BaseTooltip2;
          })(_tooltip2.default);
          function extractVideoUrl(url) {
            var match =
              url.match(
                /^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/
              ) ||
              url.match(
                /^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/
              );
            if (match) {
              return (
                (match[1] || 'https') +
                '://www.youtube.com/embed/' +
                match[2] +
                '?showinfo=0'
              );
            }
            if (
              (match = url.match(
                /^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/
              ))
            ) {
              return (
                (match[1] || 'https') +
                '://player.vimeo.com/video/' +
                match[2] +
                '/'
              );
            }
            return url;
          }
          function fillSelect(select, values) {
            var defaultValue =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : false;
            values.forEach(function (value) {
              var option = document.createElement('option');
              if (value === defaultValue) {
                option.setAttribute('selected', 'selected');
              } else {
                option.setAttribute('value', value);
              }
              select.appendChild(option);
            });
          }
          exports2.BaseTooltip = BaseTooltip;
          exports2.default = BaseTheme;
        },
        /* 44 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', { value: true });
          var LinkedList =
            /** @class */
            (function () {
              function LinkedList2() {
                this.head = this.tail = null;
                this.length = 0;
              }
              LinkedList2.prototype.append = function () {
                var nodes = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                  nodes[_i] = arguments[_i];
                }
                this.insertBefore(nodes[0], null);
                if (nodes.length > 1) {
                  this.append.apply(this, nodes.slice(1));
                }
              };
              LinkedList2.prototype.contains = function (node) {
                var cur,
                  next = this.iterator();
                while ((cur = next())) {
                  if (cur === node) return true;
                }
                return false;
              };
              LinkedList2.prototype.insertBefore = function (node, refNode) {
                if (!node) return;
                node.next = refNode;
                if (refNode != null) {
                  node.prev = refNode.prev;
                  if (refNode.prev != null) {
                    refNode.prev.next = node;
                  }
                  refNode.prev = node;
                  if (refNode === this.head) {
                    this.head = node;
                  }
                } else if (this.tail != null) {
                  this.tail.next = node;
                  node.prev = this.tail;
                  this.tail = node;
                } else {
                  node.prev = null;
                  this.head = this.tail = node;
                }
                this.length += 1;
              };
              LinkedList2.prototype.offset = function (target) {
                var index = 0,
                  cur = this.head;
                while (cur != null) {
                  if (cur === target) return index;
                  index += cur.length();
                  cur = cur.next;
                }
                return -1;
              };
              LinkedList2.prototype.remove = function (node) {
                if (!this.contains(node)) return;
                if (node.prev != null) node.prev.next = node.next;
                if (node.next != null) node.next.prev = node.prev;
                if (node === this.head) this.head = node.next;
                if (node === this.tail) this.tail = node.prev;
                this.length -= 1;
              };
              LinkedList2.prototype.iterator = function (curNode) {
                if (curNode === void 0) {
                  curNode = this.head;
                }
                return function () {
                  var ret = curNode;
                  if (curNode != null) curNode = curNode.next;
                  return ret;
                };
              };
              LinkedList2.prototype.find = function (index, inclusive) {
                if (inclusive === void 0) {
                  inclusive = false;
                }
                var cur,
                  next = this.iterator();
                while ((cur = next())) {
                  var length = cur.length();
                  if (
                    index < length ||
                    (inclusive &&
                      index === length &&
                      (cur.next == null || cur.next.length() !== 0))
                  ) {
                    return [cur, index];
                  }
                  index -= length;
                }
                return [null, 0];
              };
              LinkedList2.prototype.forEach = function (callback) {
                var cur,
                  next = this.iterator();
                while ((cur = next())) {
                  callback(cur);
                }
              };
              LinkedList2.prototype.forEachAt = function (
                index,
                length,
                callback
              ) {
                if (length <= 0) return;
                var _a = this.find(index),
                  startNode = _a[0],
                  offset = _a[1];
                var cur,
                  curIndex = index - offset,
                  next = this.iterator(startNode);
                while ((cur = next()) && curIndex < index + length) {
                  var curLength = cur.length();
                  if (index > curIndex) {
                    callback(
                      cur,
                      index - curIndex,
                      Math.min(length, curIndex + curLength - index)
                    );
                  } else {
                    callback(
                      cur,
                      0,
                      Math.min(curLength, index + length - curIndex)
                    );
                  }
                  curIndex += curLength;
                }
              };
              LinkedList2.prototype.map = function (callback) {
                return this.reduce(function (memo, cur) {
                  memo.push(callback(cur));
                  return memo;
                }, []);
              };
              LinkedList2.prototype.reduce = function (callback, memo) {
                var cur,
                  next = this.iterator();
                while ((cur = next())) {
                  memo = callback(memo, cur);
                }
                return memo;
              };
              return LinkedList2;
            })();
          exports2.default = LinkedList;
        },
        /* 45 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var container_1 = __webpack_require__(17);
          var Registry = __webpack_require__(1);
          var OBSERVER_CONFIG = {
            attributes: true,
            characterData: true,
            characterDataOldValue: true,
            childList: true,
            subtree: true,
          };
          var MAX_OPTIMIZE_ITERATIONS = 100;
          var ScrollBlot =
            /** @class */
            (function (_super) {
              __extends2(ScrollBlot2, _super);
              function ScrollBlot2(node) {
                var _this = _super.call(this, node) || this;
                _this.scroll = _this;
                _this.observer = new MutationObserver(function (mutations) {
                  _this.update(mutations);
                });
                _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
                _this.attach();
                return _this;
              }
              ScrollBlot2.prototype.detach = function () {
                _super.prototype.detach.call(this);
                this.observer.disconnect();
              };
              ScrollBlot2.prototype.deleteAt = function (index, length) {
                this.update();
                if (index === 0 && length === this.length()) {
                  this.children.forEach(function (child) {
                    child.remove();
                  });
                } else {
                  _super.prototype.deleteAt.call(this, index, length);
                }
              };
              ScrollBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                this.update();
                _super.prototype.formatAt.call(
                  this,
                  index,
                  length,
                  name,
                  value
                );
              };
              ScrollBlot2.prototype.insertAt = function (index, value, def) {
                this.update();
                _super.prototype.insertAt.call(this, index, value, def);
              };
              ScrollBlot2.prototype.optimize = function (mutations, context) {
                var _this = this;
                if (mutations === void 0) {
                  mutations = [];
                }
                if (context === void 0) {
                  context = {};
                }
                _super.prototype.optimize.call(this, context);
                var records = [].slice.call(this.observer.takeRecords());
                while (records.length > 0) mutations.push(records.pop());
                var mark = function (blot, markParent) {
                  if (markParent === void 0) {
                    markParent = true;
                  }
                  if (blot == null || blot === _this) return;
                  if (blot.domNode.parentNode == null) return;
                  if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                    blot.domNode[Registry.DATA_KEY].mutations = [];
                  }
                  if (markParent) mark(blot.parent);
                };
                var optimize = function (blot) {
                  if (
                    // @ts-ignore
                    blot.domNode[Registry.DATA_KEY] == null || // @ts-ignore
                    blot.domNode[Registry.DATA_KEY].mutations == null
                  ) {
                    return;
                  }
                  if (blot instanceof container_1.default) {
                    blot.children.forEach(optimize);
                  }
                  blot.optimize(context);
                };
                var remaining = mutations;
                for (var i = 0; remaining.length > 0; i += 1) {
                  if (i >= MAX_OPTIMIZE_ITERATIONS) {
                    throw new Error(
                      '[Parchment] Maximum optimize iterations reached'
                    );
                  }
                  remaining.forEach(function (mutation) {
                    var blot = Registry.find(mutation.target, true);
                    if (blot == null) return;
                    if (blot.domNode === mutation.target) {
                      if (mutation.type === 'childList') {
                        mark(Registry.find(mutation.previousSibling, false));
                        [].forEach.call(mutation.addedNodes, function (node) {
                          var child = Registry.find(node, false);
                          mark(child, false);
                          if (child instanceof container_1.default) {
                            child.children.forEach(function (grandChild) {
                              mark(grandChild, false);
                            });
                          }
                        });
                      } else if (mutation.type === 'attributes') {
                        mark(blot.prev);
                      }
                    }
                    mark(blot);
                  });
                  this.children.forEach(optimize);
                  remaining = [].slice.call(this.observer.takeRecords());
                  records = remaining.slice();
                  while (records.length > 0) mutations.push(records.pop());
                }
              };
              ScrollBlot2.prototype.update = function (mutations, context) {
                var _this = this;
                if (context === void 0) {
                  context = {};
                }
                mutations = mutations || this.observer.takeRecords();
                mutations
                  .map(function (mutation) {
                    var blot = Registry.find(mutation.target, true);
                    if (blot == null) return null;
                    if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                      blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                      return blot;
                    } else {
                      blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                      return null;
                    }
                  })
                  .forEach(function (blot) {
                    if (
                      blot == null ||
                      blot === _this || //@ts-ignore
                      blot.domNode[Registry.DATA_KEY] == null
                    )
                      return;
                    blot.update(
                      blot.domNode[Registry.DATA_KEY].mutations || [],
                      context
                    );
                  });
                if (this.domNode[Registry.DATA_KEY].mutations != null) {
                  _super.prototype.update.call(
                    this,
                    this.domNode[Registry.DATA_KEY].mutations,
                    context
                  );
                }
                this.optimize(mutations, context);
              };
              ScrollBlot2.blotName = 'scroll';
              ScrollBlot2.defaultChild = 'block';
              ScrollBlot2.scope = Registry.Scope.BLOCK_BLOT;
              ScrollBlot2.tagName = 'DIV';
              return ScrollBlot2;
            })(container_1.default);
          exports2.default = ScrollBlot;
        },
        /* 46 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var format_1 = __webpack_require__(18);
          var Registry = __webpack_require__(1);
          function isEqual2(obj1, obj2) {
            if (Object.keys(obj1).length !== Object.keys(obj2).length)
              return false;
            for (var prop in obj1) {
              if (obj1[prop] !== obj2[prop]) return false;
            }
            return true;
          }
          var InlineBlot =
            /** @class */
            (function (_super) {
              __extends2(InlineBlot2, _super);
              function InlineBlot2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              InlineBlot2.formats = function (domNode) {
                if (domNode.tagName === InlineBlot2.tagName) return void 0;
                return _super.formats.call(this, domNode);
              };
              InlineBlot2.prototype.format = function (name, value) {
                var _this = this;
                if (name === this.statics.blotName && !value) {
                  this.children.forEach(function (child) {
                    if (!(child instanceof format_1.default)) {
                      child = child.wrap(InlineBlot2.blotName, true);
                    }
                    _this.attributes.copy(child);
                  });
                  this.unwrap();
                } else {
                  _super.prototype.format.call(this, name, value);
                }
              };
              InlineBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                if (
                  this.formats()[name] != null ||
                  Registry.query(name, Registry.Scope.ATTRIBUTE)
                ) {
                  var blot = this.isolate(index, length);
                  blot.format(name, value);
                } else {
                  _super.prototype.formatAt.call(
                    this,
                    index,
                    length,
                    name,
                    value
                  );
                }
              };
              InlineBlot2.prototype.optimize = function (context) {
                _super.prototype.optimize.call(this, context);
                var formats = this.formats();
                if (Object.keys(formats).length === 0) {
                  return this.unwrap();
                }
                var next = this.next;
                if (
                  next instanceof InlineBlot2 &&
                  next.prev === this &&
                  isEqual2(formats, next.formats())
                ) {
                  next.moveChildren(this);
                  next.remove();
                }
              };
              InlineBlot2.blotName = 'inline';
              InlineBlot2.scope = Registry.Scope.INLINE_BLOT;
              InlineBlot2.tagName = 'SPAN';
              return InlineBlot2;
            })(format_1.default);
          exports2.default = InlineBlot;
        },
        /* 47 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var format_1 = __webpack_require__(18);
          var Registry = __webpack_require__(1);
          var BlockBlot =
            /** @class */
            (function (_super) {
              __extends2(BlockBlot2, _super);
              function BlockBlot2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              BlockBlot2.formats = function (domNode) {
                var tagName = Registry.query(BlockBlot2.blotName).tagName;
                if (domNode.tagName === tagName) return void 0;
                return _super.formats.call(this, domNode);
              };
              BlockBlot2.prototype.format = function (name, value) {
                if (Registry.query(name, Registry.Scope.BLOCK) == null) {
                  return;
                } else if (name === this.statics.blotName && !value) {
                  this.replaceWith(BlockBlot2.blotName);
                } else {
                  _super.prototype.format.call(this, name, value);
                }
              };
              BlockBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                if (Registry.query(name, Registry.Scope.BLOCK) != null) {
                  this.format(name, value);
                } else {
                  _super.prototype.formatAt.call(
                    this,
                    index,
                    length,
                    name,
                    value
                  );
                }
              };
              BlockBlot2.prototype.insertAt = function (index, value, def) {
                if (
                  def == null ||
                  Registry.query(value, Registry.Scope.INLINE) != null
                ) {
                  _super.prototype.insertAt.call(this, index, value, def);
                } else {
                  var after = this.split(index);
                  var blot = Registry.create(value, def);
                  after.parent.insertBefore(blot, after);
                }
              };
              BlockBlot2.prototype.update = function (mutations, context) {
                if (navigator.userAgent.match(/Trident/)) {
                  this.build();
                } else {
                  _super.prototype.update.call(this, mutations, context);
                }
              };
              BlockBlot2.blotName = 'block';
              BlockBlot2.scope = Registry.Scope.BLOCK_BLOT;
              BlockBlot2.tagName = 'P';
              return BlockBlot2;
            })(format_1.default);
          exports2.default = BlockBlot;
        },
        /* 48 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var leaf_1 = __webpack_require__(19);
          var EmbedBlot =
            /** @class */
            (function (_super) {
              __extends2(EmbedBlot2, _super);
              function EmbedBlot2() {
                return (
                  (_super !== null && _super.apply(this, arguments)) || this
                );
              }
              EmbedBlot2.formats = function (domNode) {
                return void 0;
              };
              EmbedBlot2.prototype.format = function (name, value) {
                _super.prototype.formatAt.call(
                  this,
                  0,
                  this.length(),
                  name,
                  value
                );
              };
              EmbedBlot2.prototype.formatAt = function (
                index,
                length,
                name,
                value
              ) {
                if (index === 0 && length === this.length()) {
                  this.format(name, value);
                } else {
                  _super.prototype.formatAt.call(
                    this,
                    index,
                    length,
                    name,
                    value
                  );
                }
              };
              EmbedBlot2.prototype.formats = function () {
                return this.statics.formats(this.domNode);
              };
              return EmbedBlot2;
            })(leaf_1.default);
          exports2.default = EmbedBlot;
        },
        /* 49 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var __extends2 =
            (this && this.__extends) ||
            (function () {
              var extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (d, b) {
                    d.__proto__ = b;
                  }) ||
                function (d, b) {
                  for (var p2 in b) if (b.hasOwnProperty(p2)) d[p2] = b[p2];
                };
              return function (d, b) {
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype =
                  b === null
                    ? Object.create(b)
                    : ((__.prototype = b.prototype), new __());
              };
            })();
          Object.defineProperty(exports2, '__esModule', { value: true });
          var leaf_1 = __webpack_require__(19);
          var Registry = __webpack_require__(1);
          var TextBlot =
            /** @class */
            (function (_super) {
              __extends2(TextBlot2, _super);
              function TextBlot2(node) {
                var _this = _super.call(this, node) || this;
                _this.text = _this.statics.value(_this.domNode);
                return _this;
              }
              TextBlot2.create = function (value) {
                return document.createTextNode(value);
              };
              TextBlot2.value = function (domNode) {
                var text = domNode.data;
                if (text['normalize']) text = text['normalize']();
                return text;
              };
              TextBlot2.prototype.deleteAt = function (index, length) {
                this.domNode.data = this.text =
                  this.text.slice(0, index) + this.text.slice(index + length);
              };
              TextBlot2.prototype.index = function (node, offset) {
                if (this.domNode === node) {
                  return offset;
                }
                return -1;
              };
              TextBlot2.prototype.insertAt = function (index, value, def) {
                if (def == null) {
                  this.text =
                    this.text.slice(0, index) + value + this.text.slice(index);
                  this.domNode.data = this.text;
                } else {
                  _super.prototype.insertAt.call(this, index, value, def);
                }
              };
              TextBlot2.prototype.length = function () {
                return this.text.length;
              };
              TextBlot2.prototype.optimize = function (context) {
                _super.prototype.optimize.call(this, context);
                this.text = this.statics.value(this.domNode);
                if (this.text.length === 0) {
                  this.remove();
                } else if (
                  this.next instanceof TextBlot2 &&
                  this.next.prev === this
                ) {
                  this.insertAt(this.length(), this.next.value());
                  this.next.remove();
                }
              };
              TextBlot2.prototype.position = function (index, inclusive) {
                return [this.domNode, index];
              };
              TextBlot2.prototype.split = function (index, force) {
                if (force === void 0) {
                  force = false;
                }
                if (!force) {
                  if (index === 0) return this;
                  if (index === this.length()) return this.next;
                }
                var after = Registry.create(this.domNode.splitText(index));
                this.parent.insertBefore(after, this.next);
                this.text = this.statics.value(this.domNode);
                return after;
              };
              TextBlot2.prototype.update = function (mutations, context) {
                var _this = this;
                if (
                  mutations.some(function (mutation) {
                    return (
                      mutation.type === 'characterData' &&
                      mutation.target === _this.domNode
                    );
                  })
                ) {
                  this.text = this.statics.value(this.domNode);
                }
              };
              TextBlot2.prototype.value = function () {
                return this.text;
              };
              TextBlot2.blotName = 'text';
              TextBlot2.scope = Registry.Scope.INLINE_BLOT;
              return TextBlot2;
            })(leaf_1.default);
          exports2.default = TextBlot;
        },
        /* 50 */
        /***/
        function (module2, exports2, __webpack_require__) {
          var elem = document.createElement('div');
          elem.classList.toggle('test-class', false);
          if (elem.classList.contains('test-class')) {
            var _toggle = DOMTokenList.prototype.toggle;
            DOMTokenList.prototype.toggle = function (token, force) {
              if (arguments.length > 1 && !this.contains(token) === !force) {
                return force;
              } else {
                return _toggle.call(this, token);
              }
            };
          }
          if (!String.prototype.startsWith) {
            String.prototype.startsWith = function (searchString, position) {
              position = position || 0;
              return (
                this.substr(position, searchString.length) === searchString
              );
            };
          }
          if (!String.prototype.endsWith) {
            String.prototype.endsWith = function (searchString, position) {
              var subjectString = this.toString();
              if (
                typeof position !== 'number' ||
                !isFinite(position) ||
                Math.floor(position) !== position ||
                position > subjectString.length
              ) {
                position = subjectString.length;
              }
              position -= searchString.length;
              var lastIndex = subjectString.indexOf(searchString, position);
              return lastIndex !== -1 && lastIndex === position;
            };
          }
          if (!Array.prototype.find) {
            Object.defineProperty(Array.prototype, 'find', {
              value: function value(predicate) {
                if (this === null) {
                  throw new TypeError(
                    'Array.prototype.find called on null or undefined'
                  );
                }
                if (typeof predicate !== 'function') {
                  throw new TypeError('predicate must be a function');
                }
                var list = Object(this);
                var length = list.length >>> 0;
                var thisArg = arguments[1];
                var value2;
                for (var i = 0; i < length; i++) {
                  value2 = list[i];
                  if (predicate.call(thisArg, value2, i, list)) {
                    return value2;
                  }
                }
                return void 0;
              },
            });
          }
          document.addEventListener('DOMContentLoaded', function () {
            document.execCommand('enableObjectResizing', false, false);
            document.execCommand('autoUrlDetect', false, false);
          });
        },
        /* 51 */
        /***/
        function (module2, exports2) {
          var DIFF_DELETE = -1;
          var DIFF_INSERT = 1;
          var DIFF_EQUAL = 0;
          function diff_main(text1, text2, cursor_pos) {
            if (text1 == text2) {
              if (text1) {
                return [[DIFF_EQUAL, text1]];
              }
              return [];
            }
            if (cursor_pos < 0 || text1.length < cursor_pos) {
              cursor_pos = null;
            }
            var commonlength = diff_commonPrefix(text1, text2);
            var commonprefix = text1.substring(0, commonlength);
            text1 = text1.substring(commonlength);
            text2 = text2.substring(commonlength);
            commonlength = diff_commonSuffix(text1, text2);
            var commonsuffix = text1.substring(text1.length - commonlength);
            text1 = text1.substring(0, text1.length - commonlength);
            text2 = text2.substring(0, text2.length - commonlength);
            var diffs = diff_compute_(text1, text2);
            if (commonprefix) {
              diffs.unshift([DIFF_EQUAL, commonprefix]);
            }
            if (commonsuffix) {
              diffs.push([DIFF_EQUAL, commonsuffix]);
            }
            diff_cleanupMerge(diffs);
            if (cursor_pos != null) {
              diffs = fix_cursor(diffs, cursor_pos);
            }
            diffs = fix_emoji(diffs);
            return diffs;
          }
          function diff_compute_(text1, text2) {
            var diffs;
            if (!text1) {
              return [[DIFF_INSERT, text2]];
            }
            if (!text2) {
              return [[DIFF_DELETE, text1]];
            }
            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;
            var i = longtext.indexOf(shorttext);
            if (i != -1) {
              diffs = [
                [DIFF_INSERT, longtext.substring(0, i)],
                [DIFF_EQUAL, shorttext],
                [DIFF_INSERT, longtext.substring(i + shorttext.length)],
              ];
              if (text1.length > text2.length) {
                diffs[0][0] = diffs[2][0] = DIFF_DELETE;
              }
              return diffs;
            }
            if (shorttext.length == 1) {
              return [
                [DIFF_DELETE, text1],
                [DIFF_INSERT, text2],
              ];
            }
            var hm = diff_halfMatch_(text1, text2);
            if (hm) {
              var text1_a = hm[0];
              var text1_b = hm[1];
              var text2_a = hm[2];
              var text2_b = hm[3];
              var mid_common = hm[4];
              var diffs_a = diff_main(text1_a, text2_a);
              var diffs_b = diff_main(text1_b, text2_b);
              return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
            }
            return diff_bisect_(text1, text2);
          }
          function diff_bisect_(text1, text2) {
            var text1_length = text1.length;
            var text2_length = text2.length;
            var max_d = Math.ceil((text1_length + text2_length) / 2);
            var v_offset = max_d;
            var v_length = 2 * max_d;
            var v1 = new Array(v_length);
            var v2 = new Array(v_length);
            for (var x2 = 0; x2 < v_length; x2++) {
              v1[x2] = -1;
              v2[x2] = -1;
            }
            v1[v_offset + 1] = 0;
            v2[v_offset + 1] = 0;
            var delta = text1_length - text2_length;
            var front = delta % 2 != 0;
            var k1start = 0;
            var k1end = 0;
            var k2start = 0;
            var k2end = 0;
            for (var d = 0; d < max_d; d++) {
              for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
                var k1_offset = v_offset + k1;
                var x1;
                if (
                  k1 == -d ||
                  (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])
                ) {
                  x1 = v1[k1_offset + 1];
                } else {
                  x1 = v1[k1_offset - 1] + 1;
                }
                var y1 = x1 - k1;
                while (
                  x1 < text1_length &&
                  y1 < text2_length &&
                  text1.charAt(x1) == text2.charAt(y1)
                ) {
                  x1++;
                  y1++;
                }
                v1[k1_offset] = x1;
                if (x1 > text1_length) {
                  k1end += 2;
                } else if (y1 > text2_length) {
                  k1start += 2;
                } else if (front) {
                  var k2_offset = v_offset + delta - k1;
                  if (
                    k2_offset >= 0 &&
                    k2_offset < v_length &&
                    v2[k2_offset] != -1
                  ) {
                    var x22 = text1_length - v2[k2_offset];
                    if (x1 >= x22) {
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              }
              for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
                var k2_offset = v_offset + k2;
                var x22;
                if (
                  k2 == -d ||
                  (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])
                ) {
                  x22 = v2[k2_offset + 1];
                } else {
                  x22 = v2[k2_offset - 1] + 1;
                }
                var y2 = x22 - k2;
                while (
                  x22 < text1_length &&
                  y2 < text2_length &&
                  text1.charAt(text1_length - x22 - 1) ==
                    text2.charAt(text2_length - y2 - 1)
                ) {
                  x22++;
                  y2++;
                }
                v2[k2_offset] = x22;
                if (x22 > text1_length) {
                  k2end += 2;
                } else if (y2 > text2_length) {
                  k2start += 2;
                } else if (!front) {
                  var k1_offset = v_offset + delta - k2;
                  if (
                    k1_offset >= 0 &&
                    k1_offset < v_length &&
                    v1[k1_offset] != -1
                  ) {
                    var x1 = v1[k1_offset];
                    var y1 = v_offset + x1 - k1_offset;
                    x22 = text1_length - x22;
                    if (x1 >= x22) {
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              }
            }
            return [
              [DIFF_DELETE, text1],
              [DIFF_INSERT, text2],
            ];
          }
          function diff_bisectSplit_(text1, text2, x2, y2) {
            var text1a = text1.substring(0, x2);
            var text2a = text2.substring(0, y2);
            var text1b = text1.substring(x2);
            var text2b = text2.substring(y2);
            var diffs = diff_main(text1a, text2a);
            var diffsb = diff_main(text1b, text2b);
            return diffs.concat(diffsb);
          }
          function diff_commonPrefix(text1, text2) {
            if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
              return 0;
            }
            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerstart = 0;
            while (pointermin < pointermid) {
              if (
                text1.substring(pointerstart, pointermid) ==
                text2.substring(pointerstart, pointermid)
              ) {
                pointermin = pointermid;
                pointerstart = pointermin;
              } else {
                pointermax = pointermid;
              }
              pointermid = Math.floor(
                (pointermax - pointermin) / 2 + pointermin
              );
            }
            return pointermid;
          }
          function diff_commonSuffix(text1, text2) {
            if (
              !text1 ||
              !text2 ||
              text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)
            ) {
              return 0;
            }
            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerend = 0;
            while (pointermin < pointermid) {
              if (
                text1.substring(
                  text1.length - pointermid,
                  text1.length - pointerend
                ) ==
                text2.substring(
                  text2.length - pointermid,
                  text2.length - pointerend
                )
              ) {
                pointermin = pointermid;
                pointerend = pointermin;
              } else {
                pointermax = pointermid;
              }
              pointermid = Math.floor(
                (pointermax - pointermin) / 2 + pointermin
              );
            }
            return pointermid;
          }
          function diff_halfMatch_(text1, text2) {
            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;
            if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
              return null;
            }
            function diff_halfMatchI_(longtext2, shorttext2, i) {
              var seed = longtext2.substring(
                i,
                i + Math.floor(longtext2.length / 4)
              );
              var j = -1;
              var best_common = '';
              var best_longtext_a,
                best_longtext_b,
                best_shorttext_a,
                best_shorttext_b;
              while ((j = shorttext2.indexOf(seed, j + 1)) != -1) {
                var prefixLength = diff_commonPrefix(
                  longtext2.substring(i),
                  shorttext2.substring(j)
                );
                var suffixLength = diff_commonSuffix(
                  longtext2.substring(0, i),
                  shorttext2.substring(0, j)
                );
                if (best_common.length < suffixLength + prefixLength) {
                  best_common =
                    shorttext2.substring(j - suffixLength, j) +
                    shorttext2.substring(j, j + prefixLength);
                  best_longtext_a = longtext2.substring(0, i - suffixLength);
                  best_longtext_b = longtext2.substring(i + prefixLength);
                  best_shorttext_a = shorttext2.substring(0, j - suffixLength);
                  best_shorttext_b = shorttext2.substring(j + prefixLength);
                }
              }
              if (best_common.length * 2 >= longtext2.length) {
                return [
                  best_longtext_a,
                  best_longtext_b,
                  best_shorttext_a,
                  best_shorttext_b,
                  best_common,
                ];
              } else {
                return null;
              }
            }
            var hm1 = diff_halfMatchI_(
              longtext,
              shorttext,
              Math.ceil(longtext.length / 4)
            );
            var hm2 = diff_halfMatchI_(
              longtext,
              shorttext,
              Math.ceil(longtext.length / 2)
            );
            var hm;
            if (!hm1 && !hm2) {
              return null;
            } else if (!hm2) {
              hm = hm1;
            } else if (!hm1) {
              hm = hm2;
            } else {
              hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
            }
            var text1_a, text1_b, text2_a, text2_b;
            if (text1.length > text2.length) {
              text1_a = hm[0];
              text1_b = hm[1];
              text2_a = hm[2];
              text2_b = hm[3];
            } else {
              text2_a = hm[0];
              text2_b = hm[1];
              text1_a = hm[2];
              text1_b = hm[3];
            }
            var mid_common = hm[4];
            return [text1_a, text1_b, text2_a, text2_b, mid_common];
          }
          function diff_cleanupMerge(diffs) {
            diffs.push([DIFF_EQUAL, '']);
            var pointer = 0;
            var count_delete = 0;
            var count_insert = 0;
            var text_delete = '';
            var text_insert = '';
            var commonlength;
            while (pointer < diffs.length) {
              switch (diffs[pointer][0]) {
                case DIFF_INSERT:
                  count_insert++;
                  text_insert += diffs[pointer][1];
                  pointer++;
                  break;
                case DIFF_DELETE:
                  count_delete++;
                  text_delete += diffs[pointer][1];
                  pointer++;
                  break;
                case DIFF_EQUAL:
                  if (count_delete + count_insert > 1) {
                    if (count_delete !== 0 && count_insert !== 0) {
                      commonlength = diff_commonPrefix(
                        text_insert,
                        text_delete
                      );
                      if (commonlength !== 0) {
                        if (
                          pointer - count_delete - count_insert > 0 &&
                          diffs[pointer - count_delete - count_insert - 1][0] ==
                            DIFF_EQUAL
                        ) {
                          diffs[pointer - count_delete - count_insert - 1][1] +=
                            text_insert.substring(0, commonlength);
                        } else {
                          diffs.splice(0, 0, [
                            DIFF_EQUAL,
                            text_insert.substring(0, commonlength),
                          ]);
                          pointer++;
                        }
                        text_insert = text_insert.substring(commonlength);
                        text_delete = text_delete.substring(commonlength);
                      }
                      commonlength = diff_commonSuffix(
                        text_insert,
                        text_delete
                      );
                      if (commonlength !== 0) {
                        diffs[pointer][1] =
                          text_insert.substring(
                            text_insert.length - commonlength
                          ) + diffs[pointer][1];
                        text_insert = text_insert.substring(
                          0,
                          text_insert.length - commonlength
                        );
                        text_delete = text_delete.substring(
                          0,
                          text_delete.length - commonlength
                        );
                      }
                    }
                    if (count_delete === 0) {
                      diffs.splice(
                        pointer - count_insert,
                        count_delete + count_insert,
                        [DIFF_INSERT, text_insert]
                      );
                    } else if (count_insert === 0) {
                      diffs.splice(
                        pointer - count_delete,
                        count_delete + count_insert,
                        [DIFF_DELETE, text_delete]
                      );
                    } else {
                      diffs.splice(
                        pointer - count_delete - count_insert,
                        count_delete + count_insert,
                        [DIFF_DELETE, text_delete],
                        [DIFF_INSERT, text_insert]
                      );
                    }
                    pointer =
                      pointer -
                      count_delete -
                      count_insert +
                      (count_delete ? 1 : 0) +
                      (count_insert ? 1 : 0) +
                      1;
                  } else if (
                    pointer !== 0 &&
                    diffs[pointer - 1][0] == DIFF_EQUAL
                  ) {
                    diffs[pointer - 1][1] += diffs[pointer][1];
                    diffs.splice(pointer, 1);
                  } else {
                    pointer++;
                  }
                  count_insert = 0;
                  count_delete = 0;
                  text_delete = '';
                  text_insert = '';
                  break;
              }
            }
            if (diffs[diffs.length - 1][1] === '') {
              diffs.pop();
            }
            var changes = false;
            pointer = 1;
            while (pointer < diffs.length - 1) {
              if (
                diffs[pointer - 1][0] == DIFF_EQUAL &&
                diffs[pointer + 1][0] == DIFF_EQUAL
              ) {
                if (
                  diffs[pointer][1].substring(
                    diffs[pointer][1].length - diffs[pointer - 1][1].length
                  ) == diffs[pointer - 1][1]
                ) {
                  diffs[pointer][1] =
                    diffs[pointer - 1][1] +
                    diffs[pointer][1].substring(
                      0,
                      diffs[pointer][1].length - diffs[pointer - 1][1].length
                    );
                  diffs[pointer + 1][1] =
                    diffs[pointer - 1][1] + diffs[pointer + 1][1];
                  diffs.splice(pointer - 1, 1);
                  changes = true;
                } else if (
                  diffs[pointer][1].substring(
                    0,
                    diffs[pointer + 1][1].length
                  ) == diffs[pointer + 1][1]
                ) {
                  diffs[pointer - 1][1] += diffs[pointer + 1][1];
                  diffs[pointer][1] =
                    diffs[pointer][1].substring(diffs[pointer + 1][1].length) +
                    diffs[pointer + 1][1];
                  diffs.splice(pointer + 1, 1);
                  changes = true;
                }
              }
              pointer++;
            }
            if (changes) {
              diff_cleanupMerge(diffs);
            }
          }
          var diff = diff_main;
          diff.INSERT = DIFF_INSERT;
          diff.DELETE = DIFF_DELETE;
          diff.EQUAL = DIFF_EQUAL;
          module2.exports = diff;
          function cursor_normalize_diff(diffs, cursor_pos) {
            if (cursor_pos === 0) {
              return [DIFF_EQUAL, diffs];
            }
            for (var current_pos = 0, i = 0; i < diffs.length; i++) {
              var d = diffs[i];
              if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
                var next_pos = current_pos + d[1].length;
                if (cursor_pos === next_pos) {
                  return [i + 1, diffs];
                } else if (cursor_pos < next_pos) {
                  diffs = diffs.slice();
                  var split_pos = cursor_pos - current_pos;
                  var d_left = [d[0], d[1].slice(0, split_pos)];
                  var d_right = [d[0], d[1].slice(split_pos)];
                  diffs.splice(i, 1, d_left, d_right);
                  return [i + 1, diffs];
                } else {
                  current_pos = next_pos;
                }
              }
            }
            throw new Error('cursor_pos is out of bounds!');
          }
          function fix_cursor(diffs, cursor_pos) {
            var norm = cursor_normalize_diff(diffs, cursor_pos);
            var ndiffs = norm[1];
            var cursor_pointer = norm[0];
            var d = ndiffs[cursor_pointer];
            var d_next = ndiffs[cursor_pointer + 1];
            if (d == null) {
              return diffs;
            } else if (d[0] !== DIFF_EQUAL) {
              return diffs;
            } else {
              if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
                ndiffs.splice(cursor_pointer, 2, d_next, d);
                return merge_tuples(ndiffs, cursor_pointer, 2);
              } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
                ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
                var suffix = d_next[1].slice(d[1].length);
                if (suffix.length > 0) {
                  ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
                }
                return merge_tuples(ndiffs, cursor_pointer, 3);
              } else {
                return diffs;
              }
            }
          }
          function fix_emoji(diffs) {
            var compact = false;
            var starts_with_pair_end = function (str) {
              return str.charCodeAt(0) >= 56320 && str.charCodeAt(0) <= 57343;
            };
            var ends_with_pair_start = function (str) {
              return (
                str.charCodeAt(str.length - 1) >= 55296 &&
                str.charCodeAt(str.length - 1) <= 56319
              );
            };
            for (var i = 2; i < diffs.length; i += 1) {
              if (
                diffs[i - 2][0] === DIFF_EQUAL &&
                ends_with_pair_start(diffs[i - 2][1]) &&
                diffs[i - 1][0] === DIFF_DELETE &&
                starts_with_pair_end(diffs[i - 1][1]) &&
                diffs[i][0] === DIFF_INSERT &&
                starts_with_pair_end(diffs[i][1])
              ) {
                compact = true;
                diffs[i - 1][1] = diffs[i - 2][1].slice(-1) + diffs[i - 1][1];
                diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];
                diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);
              }
            }
            if (!compact) {
              return diffs;
            }
            var fixed_diffs = [];
            for (var i = 0; i < diffs.length; i += 1) {
              if (diffs[i][1].length > 0) {
                fixed_diffs.push(diffs[i]);
              }
            }
            return fixed_diffs;
          }
          function merge_tuples(diffs, start, length) {
            for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
              if (i + 1 < diffs.length) {
                var left_d = diffs[i];
                var right_d = diffs[i + 1];
                if (left_d[0] === right_d[1]) {
                  diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
                }
              }
            }
            return diffs;
          }
        },
        /* 52 */
        /***/
        function (module2, exports2) {
          exports2 = module2.exports =
            typeof Object.keys === 'function' ? Object.keys : shim;
          exports2.shim = shim;
          function shim(obj) {
            var keys2 = [];
            for (var key in obj) keys2.push(key);
            return keys2;
          }
        },
        /* 53 */
        /***/
        function (module2, exports2) {
          var supportsArgumentsClass =
            (function () {
              return Object.prototype.toString.call(arguments);
            })() == '[object Arguments]';
          exports2 = module2.exports = supportsArgumentsClass
            ? supported
            : unsupported;
          exports2.supported = supported;
          function supported(object) {
            return (
              Object.prototype.toString.call(object) == '[object Arguments]'
            );
          }
          exports2.unsupported = unsupported;
          function unsupported(object) {
            return (
              (object &&
                typeof object == 'object' &&
                typeof object.length == 'number' &&
                Object.prototype.hasOwnProperty.call(object, 'callee') &&
                !Object.prototype.propertyIsEnumerable.call(
                  object,
                  'callee'
                )) ||
              false
            );
          }
        },
        /* 54 */
        /***/
        function (module2, exports2) {
          var has = Object.prototype.hasOwnProperty,
            prefix = '~';
          function Events() {}
          if (Object.create) {
            Events.prototype = /* @__PURE__ */ Object.create(null);
            if (!new Events().__proto__) prefix = false;
          }
          function EE(fn, context, once) {
            this.fn = fn;
            this.context = context;
            this.once = once || false;
          }
          function EventEmitter() {
            this._events = new Events();
            this._eventsCount = 0;
          }
          EventEmitter.prototype.eventNames = function eventNames() {
            var names = [],
              events,
              name;
            if (this._eventsCount === 0) return names;
            for (name in (events = this._events)) {
              if (has.call(events, name))
                names.push(prefix ? name.slice(1) : name);
            }
            if (Object.getOwnPropertySymbols) {
              return names.concat(Object.getOwnPropertySymbols(events));
            }
            return names;
          };
          EventEmitter.prototype.listeners = function listeners(event, exists) {
            var evt = prefix ? prefix + event : event,
              available = this._events[evt];
            if (exists) return !!available;
            if (!available) return [];
            if (available.fn) return [available.fn];
            for (
              var i = 0, l2 = available.length, ee2 = new Array(l2);
              i < l2;
              i++
            ) {
              ee2[i] = available[i].fn;
            }
            return ee2;
          };
          EventEmitter.prototype.emit = function emit(
            event,
            a1,
            a2,
            a3,
            a4,
            a5
          ) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return false;
            var listeners = this._events[evt],
              len = arguments.length,
              args,
              i;
            if (listeners.fn) {
              if (listeners.once)
                this.removeListener(event, listeners.fn, void 0, true);
              switch (len) {
                case 1:
                  return listeners.fn.call(listeners.context), true;
                case 2:
                  return listeners.fn.call(listeners.context, a1), true;
                case 3:
                  return listeners.fn.call(listeners.context, a1, a2), true;
                case 4:
                  return listeners.fn.call(listeners.context, a1, a2, a3), true;
                case 5:
                  return (
                    listeners.fn.call(listeners.context, a1, a2, a3, a4), true
                  );
                case 6:
                  return (
                    listeners.fn.call(listeners.context, a1, a2, a3, a4, a5),
                    true
                  );
              }
              for (i = 1, args = new Array(len - 1); i < len; i++) {
                args[i - 1] = arguments[i];
              }
              listeners.fn.apply(listeners.context, args);
            } else {
              var length = listeners.length,
                j;
              for (i = 0; i < length; i++) {
                if (listeners[i].once)
                  this.removeListener(event, listeners[i].fn, void 0, true);
                switch (len) {
                  case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                  case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                  case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                  case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                  default:
                    if (!args)
                      for (j = 1, args = new Array(len - 1); j < len; j++) {
                        args[j - 1] = arguments[j];
                      }
                    listeners[i].fn.apply(listeners[i].context, args);
                }
              }
            }
            return true;
          };
          EventEmitter.prototype.on = function on(event, fn, context) {
            var listener = new EE(fn, context || this),
              evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              (this._events[evt] = listener), this._eventsCount++;
            else if (!this._events[evt].fn) this._events[evt].push(listener);
            else this._events[evt] = [this._events[evt], listener];
            return this;
          };
          EventEmitter.prototype.once = function once(event, fn, context) {
            var listener = new EE(fn, context || this, true),
              evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              (this._events[evt] = listener), this._eventsCount++;
            else if (!this._events[evt].fn) this._events[evt].push(listener);
            else this._events[evt] = [this._events[evt], listener];
            return this;
          };
          EventEmitter.prototype.removeListener = function removeListener(
            event,
            fn,
            context,
            once
          ) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return this;
            if (!fn) {
              if (--this._eventsCount === 0) this._events = new Events();
              else delete this._events[evt];
              return this;
            }
            var listeners = this._events[evt];
            if (listeners.fn) {
              if (
                listeners.fn === fn &&
                (!once || listeners.once) &&
                (!context || listeners.context === context)
              ) {
                if (--this._eventsCount === 0) this._events = new Events();
                else delete this._events[evt];
              }
            } else {
              for (
                var i = 0, events = [], length = listeners.length;
                i < length;
                i++
              ) {
                if (
                  listeners[i].fn !== fn ||
                  (once && !listeners[i].once) ||
                  (context && listeners[i].context !== context)
                ) {
                  events.push(listeners[i]);
                }
              }
              if (events.length)
                this._events[evt] = events.length === 1 ? events[0] : events;
              else if (--this._eventsCount === 0) this._events = new Events();
              else delete this._events[evt];
            }
            return this;
          };
          EventEmitter.prototype.removeAllListeners =
            function removeAllListeners(event) {
              var evt;
              if (event) {
                evt = prefix ? prefix + event : event;
                if (this._events[evt]) {
                  if (--this._eventsCount === 0) this._events = new Events();
                  else delete this._events[evt];
                }
              } else {
                this._events = new Events();
                this._eventsCount = 0;
              }
              return this;
            };
          EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
          EventEmitter.prototype.addListener = EventEmitter.prototype.on;
          EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
            return this;
          };
          EventEmitter.prefixed = prefix;
          EventEmitter.EventEmitter = EventEmitter;
          if ('undefined' !== typeof module2) {
            module2.exports = EventEmitter;
          }
        },
        /* 55 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.matchText =
            exports2.matchSpacing =
            exports2.matchNewline =
            exports2.matchBlot =
            exports2.matchAttributor =
            exports2.default =
              void 0;
          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _extend2 = __webpack_require__(3);
          var _extend3 = _interopRequireDefault(_extend2);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _align = __webpack_require__(36);
          var _background = __webpack_require__(37);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _color = __webpack_require__(26);
          var _direction = __webpack_require__(38);
          var _font = __webpack_require__(39);
          var _size = __webpack_require__(40);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var debug = (0, _logger2.default)('quill:clipboard');
          var DOM_KEY = '__ql-matcher';
          var CLIPBOARD_CONFIG = [
            [Node.TEXT_NODE, matchText],
            [Node.TEXT_NODE, matchNewline],
            ['br', matchBreak],
            [Node.ELEMENT_NODE, matchNewline],
            [Node.ELEMENT_NODE, matchBlot],
            [Node.ELEMENT_NODE, matchSpacing],
            [Node.ELEMENT_NODE, matchAttributor],
            [Node.ELEMENT_NODE, matchStyles],
            ['li', matchIndent],
            ['b', matchAlias.bind(matchAlias, 'bold')],
            ['i', matchAlias.bind(matchAlias, 'italic')],
            ['style', matchIgnore],
          ];
          var ATTRIBUTE_ATTRIBUTORS = [
            _align.AlignAttribute,
            _direction.DirectionAttribute,
          ].reduce(function (memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});
          var STYLE_ATTRIBUTORS = [
            _align.AlignStyle,
            _background.BackgroundStyle,
            _color.ColorStyle,
            _direction.DirectionStyle,
            _font.FontStyle,
            _size.SizeStyle,
          ].reduce(function (memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});
          var Clipboard = (function (_Module) {
            _inherits(Clipboard2, _Module);
            function Clipboard2(quill2, options) {
              _classCallCheck(this, Clipboard2);
              var _this = _possibleConstructorReturn(
                this,
                (
                  Clipboard2.__proto__ || Object.getPrototypeOf(Clipboard2)
                ).call(this, quill2, options)
              );
              _this.quill.root.addEventListener(
                'paste',
                _this.onPaste.bind(_this)
              );
              _this.container = _this.quill.addContainer('ql-clipboard');
              _this.container.setAttribute('contenteditable', true);
              _this.container.setAttribute('tabindex', -1);
              _this.matchers = [];
              CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(
                function (_ref) {
                  var _ref2 = _slicedToArray(_ref, 2),
                    selector = _ref2[0],
                    matcher = _ref2[1];
                  if (!options.matchVisual && matcher === matchSpacing) return;
                  _this.addMatcher(selector, matcher);
                }
              );
              return _this;
            }
            _createClass(Clipboard2, [
              {
                key: 'addMatcher',
                value: function addMatcher(selector, matcher) {
                  this.matchers.push([selector, matcher]);
                },
              },
              {
                key: 'convert',
                value: function convert(html) {
                  if (typeof html === 'string') {
                    this.container.innerHTML = html.replace(
                      /\>\r?\n +\</g,
                      '><'
                    );
                    return this.convert();
                  }
                  var formats = this.quill.getFormat(
                    this.quill.selection.savedRange.index
                  );
                  if (formats[_code2.default.blotName]) {
                    var text = this.container.innerText;
                    this.container.innerHTML = '';
                    return new _quillDelta2.default().insert(
                      text,
                      _defineProperty2(
                        {},
                        _code2.default.blotName,
                        formats[_code2.default.blotName]
                      )
                    );
                  }
                  var _prepareMatching = this.prepareMatching(),
                    _prepareMatching2 = _slicedToArray(_prepareMatching, 2),
                    elementMatchers = _prepareMatching2[0],
                    textMatchers = _prepareMatching2[1];
                  var delta = traverse(
                    this.container,
                    elementMatchers,
                    textMatchers
                  );
                  if (
                    deltaEndsWith(delta, '\n') &&
                    delta.ops[delta.ops.length - 1].attributes == null
                  ) {
                    delta = delta.compose(
                      new _quillDelta2.default()
                        .retain(delta.length() - 1)
                        .delete(1)
                    );
                  }
                  debug.log('convert', this.container.innerHTML, delta);
                  this.container.innerHTML = '';
                  return delta;
                },
              },
              {
                key: 'dangerouslyPasteHTML',
                value: function dangerouslyPasteHTML(index, html) {
                  var source =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : _quill2.default.sources.API;
                  if (typeof index === 'string') {
                    this.quill.setContents(this.convert(index), html);
                    this.quill.setSelection(0, _quill2.default.sources.SILENT);
                  } else {
                    var paste = this.convert(html);
                    this.quill.updateContents(
                      new _quillDelta2.default().retain(index).concat(paste),
                      source
                    );
                    this.quill.setSelection(
                      index + paste.length(),
                      _quill2.default.sources.SILENT
                    );
                  }
                },
              },
              {
                key: 'onPaste',
                value: function onPaste(e) {
                  var _this2 = this;
                  if (e.defaultPrevented || !this.quill.isEnabled()) return;
                  var range = this.quill.getSelection();
                  var delta = new _quillDelta2.default().retain(range.index);
                  var scrollTop = this.quill.scrollingContainer.scrollTop;
                  this.container.focus();
                  this.quill.selection.update(_quill2.default.sources.SILENT);
                  setTimeout(function () {
                    delta = delta.concat(_this2.convert()).delete(range.length);
                    _this2.quill.updateContents(
                      delta,
                      _quill2.default.sources.USER
                    );
                    _this2.quill.setSelection(
                      delta.length() - range.length,
                      _quill2.default.sources.SILENT
                    );
                    _this2.quill.scrollingContainer.scrollTop = scrollTop;
                    _this2.quill.focus();
                  }, 1);
                },
              },
              {
                key: 'prepareMatching',
                value: function prepareMatching() {
                  var _this3 = this;
                  var elementMatchers = [],
                    textMatchers = [];
                  this.matchers.forEach(function (pair) {
                    var _pair = _slicedToArray(pair, 2),
                      selector = _pair[0],
                      matcher = _pair[1];
                    switch (selector) {
                      case Node.TEXT_NODE:
                        textMatchers.push(matcher);
                        break;
                      case Node.ELEMENT_NODE:
                        elementMatchers.push(matcher);
                        break;
                      default:
                        [].forEach.call(
                          _this3.container.querySelectorAll(selector),
                          function (node) {
                            node[DOM_KEY] = node[DOM_KEY] || [];
                            node[DOM_KEY].push(matcher);
                          }
                        );
                        break;
                    }
                  });
                  return [elementMatchers, textMatchers];
                },
              },
            ]);
            return Clipboard2;
          })(_module2.default);
          Clipboard.DEFAULTS = {
            matchers: [],
            matchVisual: true,
          };
          function applyFormat(delta, format, value) {
            if (
              (typeof format === 'undefined'
                ? 'undefined'
                : _typeof(format)) === 'object'
            ) {
              return Object.keys(format).reduce(function (delta2, key) {
                return applyFormat(delta2, key, format[key]);
              }, delta);
            } else {
              return delta.reduce(function (delta2, op) {
                if (op.attributes && op.attributes[format]) {
                  return delta2.push(op);
                } else {
                  return delta2.insert(
                    op.insert,
                    (0, _extend3.default)(
                      {},
                      _defineProperty2({}, format, value),
                      op.attributes
                    )
                  );
                }
              }, new _quillDelta2.default());
            }
          }
          function computeStyle(node) {
            if (node.nodeType !== Node.ELEMENT_NODE) return {};
            var DOM_KEY2 = '__ql-computed-style';
            return (
              node[DOM_KEY2] || (node[DOM_KEY2] = window.getComputedStyle(node))
            );
          }
          function deltaEndsWith(delta, text) {
            var endText = '';
            for (
              var i = delta.ops.length - 1;
              i >= 0 && endText.length < text.length;
              --i
            ) {
              var op = delta.ops[i];
              if (typeof op.insert !== 'string') break;
              endText = op.insert + endText;
            }
            return endText.slice(-1 * text.length) === text;
          }
          function isLine(node) {
            if (node.childNodes.length === 0) return false;
            var style = computeStyle(node);
            return ['block', 'list-item'].indexOf(style.display) > -1;
          }
          function traverse(node, elementMatchers, textMatchers) {
            if (node.nodeType === node.TEXT_NODE) {
              return textMatchers.reduce(function (delta, matcher) {
                return matcher(node, delta);
              }, new _quillDelta2.default());
            } else if (node.nodeType === node.ELEMENT_NODE) {
              return [].reduce.call(
                node.childNodes || [],
                function (delta, childNode) {
                  var childrenDelta = traverse(
                    childNode,
                    elementMatchers,
                    textMatchers
                  );
                  if (childNode.nodeType === node.ELEMENT_NODE) {
                    childrenDelta = elementMatchers.reduce(function (
                      childrenDelta2,
                      matcher
                    ) {
                      return matcher(childNode, childrenDelta2);
                    }, childrenDelta);
                    childrenDelta = (childNode[DOM_KEY] || []).reduce(function (
                      childrenDelta2,
                      matcher
                    ) {
                      return matcher(childNode, childrenDelta2);
                    }, childrenDelta);
                  }
                  return delta.concat(childrenDelta);
                },
                new _quillDelta2.default()
              );
            } else {
              return new _quillDelta2.default();
            }
          }
          function matchAlias(format, node, delta) {
            return applyFormat(delta, format, true);
          }
          function matchAttributor(node, delta) {
            var attributes =
              _parchment2.default.Attributor.Attribute.keys(node);
            var classes = _parchment2.default.Attributor.Class.keys(node);
            var styles = _parchment2.default.Attributor.Style.keys(node);
            var formats = {};
            attributes
              .concat(classes)
              .concat(styles)
              .forEach(function (name) {
                var attr = _parchment2.default.query(
                  name,
                  _parchment2.default.Scope.ATTRIBUTE
                );
                if (attr != null) {
                  formats[attr.attrName] = attr.value(node);
                  if (formats[attr.attrName]) return;
                }
                attr = ATTRIBUTE_ATTRIBUTORS[name];
                if (
                  attr != null &&
                  (attr.attrName === name || attr.keyName === name)
                ) {
                  formats[attr.attrName] = attr.value(node) || void 0;
                }
                attr = STYLE_ATTRIBUTORS[name];
                if (
                  attr != null &&
                  (attr.attrName === name || attr.keyName === name)
                ) {
                  attr = STYLE_ATTRIBUTORS[name];
                  formats[attr.attrName] = attr.value(node) || void 0;
                }
              });
            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }
            return delta;
          }
          function matchBlot(node, delta) {
            var match = _parchment2.default.query(node);
            if (match == null) return delta;
            if (match.prototype instanceof _parchment2.default.Embed) {
              var embed = {};
              var value = match.value(node);
              if (value != null) {
                embed[match.blotName] = value;
                delta = new _quillDelta2.default().insert(
                  embed,
                  match.formats(node)
                );
              }
            } else if (typeof match.formats === 'function') {
              delta = applyFormat(delta, match.blotName, match.formats(node));
            }
            return delta;
          }
          function matchBreak(node, delta) {
            if (!deltaEndsWith(delta, '\n')) {
              delta.insert('\n');
            }
            return delta;
          }
          function matchIgnore() {
            return new _quillDelta2.default();
          }
          function matchIndent(node, delta) {
            var match = _parchment2.default.query(node);
            if (
              match == null ||
              match.blotName !== 'list-item' ||
              !deltaEndsWith(delta, '\n')
            ) {
              return delta;
            }
            var indent = -1,
              parent = node.parentNode;
            while (!parent.classList.contains('ql-clipboard')) {
              if (
                (_parchment2.default.query(parent) || {}).blotName === 'list'
              ) {
                indent += 1;
              }
              parent = parent.parentNode;
            }
            if (indent <= 0) return delta;
            return delta.compose(
              new _quillDelta2.default()
                .retain(delta.length() - 1)
                .retain(1, { indent })
            );
          }
          function matchNewline(node, delta) {
            if (!deltaEndsWith(delta, '\n')) {
              if (
                isLine(node) ||
                (delta.length() > 0 &&
                  node.nextSibling &&
                  isLine(node.nextSibling))
              ) {
                delta.insert('\n');
              }
            }
            return delta;
          }
          function matchSpacing(node, delta) {
            if (
              isLine(node) &&
              node.nextElementSibling != null &&
              !deltaEndsWith(delta, '\n\n')
            ) {
              var nodeHeight =
                node.offsetHeight +
                parseFloat(computeStyle(node).marginTop) +
                parseFloat(computeStyle(node).marginBottom);
              if (
                node.nextElementSibling.offsetTop >
                node.offsetTop + nodeHeight * 1.5
              ) {
                delta.insert('\n');
              }
            }
            return delta;
          }
          function matchStyles(node, delta) {
            var formats = {};
            var style = node.style || {};
            if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {
              formats.italic = true;
            }
            if (
              style.fontWeight &&
              (computeStyle(node).fontWeight.startsWith('bold') ||
                parseInt(computeStyle(node).fontWeight) >= 700)
            ) {
              formats.bold = true;
            }
            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }
            if (parseFloat(style.textIndent || 0) > 0) {
              delta = new _quillDelta2.default().insert('	').concat(delta);
            }
            return delta;
          }
          function matchText(node, delta) {
            var text = node.data;
            if (node.parentNode.tagName === 'O:P') {
              return delta.insert(text.trim());
            }
            if (
              text.trim().length === 0 &&
              node.parentNode.classList.contains('ql-clipboard')
            ) {
              return delta;
            }
            if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {
              var replacer = function replacer2(collapse, match) {
                match = match.replace(/[^\u00a0]/g, '');
                return match.length < 1 && collapse ? ' ' : match;
              };
              text = text.replace(/\r\n/g, ' ').replace(/\n/g, ' ');
              text = text.replace(/\s\s+/g, replacer.bind(replacer, true));
              if (
                (node.previousSibling == null && isLine(node.parentNode)) ||
                (node.previousSibling != null && isLine(node.previousSibling))
              ) {
                text = text.replace(/^\s+/, replacer.bind(replacer, false));
              }
              if (
                (node.nextSibling == null && isLine(node.parentNode)) ||
                (node.nextSibling != null && isLine(node.nextSibling))
              ) {
                text = text.replace(/\s+$/, replacer.bind(replacer, false));
              }
            }
            return delta.insert(text);
          }
          exports2.default = Clipboard;
          exports2.matchAttributor = matchAttributor;
          exports2.matchBlot = matchBlot;
          exports2.matchNewline = matchNewline;
          exports2.matchSpacing = matchSpacing;
          exports2.matchText = matchText;
        },
        /* 56 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Bold = (function (_Inline) {
            _inherits(Bold2, _Inline);
            function Bold2() {
              _classCallCheck(this, Bold2);
              return _possibleConstructorReturn(
                this,
                (Bold2.__proto__ || Object.getPrototypeOf(Bold2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Bold2,
              [
                {
                  key: 'optimize',
                  value: function optimize(context) {
                    _get(
                      Bold2.prototype.__proto__ ||
                        Object.getPrototypeOf(Bold2.prototype),
                      'optimize',
                      this
                    ).call(this, context);
                    if (this.domNode.tagName !== this.statics.tagName[0]) {
                      this.replaceWith(this.statics.blotName);
                    }
                  },
                },
              ],
              [
                {
                  key: 'create',
                  value: function create() {
                    return _get(
                      Bold2.__proto__ || Object.getPrototypeOf(Bold2),
                      'create',
                      this
                    ).call(this);
                  },
                },
                {
                  key: 'formats',
                  value: function formats() {
                    return true;
                  },
                },
              ]
            );
            return Bold2;
          })(_inline2.default);
          Bold.blotName = 'bold';
          Bold.tagName = ['STRONG', 'B'];
          exports2.default = Bold;
        },
        /* 57 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.addControls = exports2.default = void 0;
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var debug = (0, _logger2.default)('quill:toolbar');
          var Toolbar = (function (_Module) {
            _inherits(Toolbar2, _Module);
            function Toolbar2(quill2, options) {
              _classCallCheck(this, Toolbar2);
              var _this = _possibleConstructorReturn(
                this,
                (Toolbar2.__proto__ || Object.getPrototypeOf(Toolbar2)).call(
                  this,
                  quill2,
                  options
                )
              );
              if (Array.isArray(_this.options.container)) {
                var container2 = document.createElement('div');
                addControls(container2, _this.options.container);
                quill2.container.parentNode.insertBefore(
                  container2,
                  quill2.container
                );
                _this.container = container2;
              } else if (typeof _this.options.container === 'string') {
                _this.container = document.querySelector(
                  _this.options.container
                );
              } else {
                _this.container = _this.options.container;
              }
              if (!(_this.container instanceof HTMLElement)) {
                var _ret;
                return (
                  (_ret = debug.error(
                    'Container required for toolbar',
                    _this.options
                  )),
                  _possibleConstructorReturn(_this, _ret)
                );
              }
              _this.container.classList.add('ql-toolbar');
              _this.controls = [];
              _this.handlers = {};
              Object.keys(_this.options.handlers).forEach(function (format) {
                _this.addHandler(format, _this.options.handlers[format]);
              });
              [].forEach.call(
                _this.container.querySelectorAll('button, select'),
                function (input2) {
                  _this.attach(input2);
                }
              );
              _this.quill.on(
                _quill2.default.events.EDITOR_CHANGE,
                function (type, range) {
                  if (type === _quill2.default.events.SELECTION_CHANGE) {
                    _this.update(range);
                  }
                }
              );
              _this.quill.on(
                _quill2.default.events.SCROLL_OPTIMIZE,
                function () {
                  var _this$quill$selection = _this.quill.selection.getRange(),
                    _this$quill$selection2 = _slicedToArray(
                      _this$quill$selection,
                      1
                    ),
                    range = _this$quill$selection2[0];
                  _this.update(range);
                }
              );
              return _this;
            }
            _createClass(Toolbar2, [
              {
                key: 'addHandler',
                value: function addHandler(format, handler) {
                  this.handlers[format] = handler;
                },
              },
              {
                key: 'attach',
                value: function attach(input2) {
                  var _this2 = this;
                  var format = [].find.call(
                    input2.classList,
                    function (className) {
                      return className.indexOf('ql-') === 0;
                    }
                  );
                  if (!format) return;
                  format = format.slice('ql-'.length);
                  if (input2.tagName === 'BUTTON') {
                    input2.setAttribute('type', 'button');
                  }
                  if (this.handlers[format] == null) {
                    if (
                      this.quill.scroll.whitelist != null &&
                      this.quill.scroll.whitelist[format] == null
                    ) {
                      debug.warn(
                        'ignoring attaching to disabled format',
                        format,
                        input2
                      );
                      return;
                    }
                    if (_parchment2.default.query(format) == null) {
                      debug.warn(
                        'ignoring attaching to nonexistent format',
                        format,
                        input2
                      );
                      return;
                    }
                  }
                  var eventName =
                    input2.tagName === 'SELECT' ? 'change' : 'click';
                  input2.addEventListener(eventName, function (e) {
                    var value = void 0;
                    if (input2.tagName === 'SELECT') {
                      if (input2.selectedIndex < 0) return;
                      var selected2 = input2.options[input2.selectedIndex];
                      if (selected2.hasAttribute('selected')) {
                        value = false;
                      } else {
                        value = selected2.value || false;
                      }
                    } else {
                      if (input2.classList.contains('ql-active')) {
                        value = false;
                      } else {
                        value = input2.value || !input2.hasAttribute('value');
                      }
                      e.preventDefault();
                    }
                    _this2.quill.focus();
                    var _quill$selection$getR =
                        _this2.quill.selection.getRange(),
                      _quill$selection$getR2 = _slicedToArray(
                        _quill$selection$getR,
                        1
                      ),
                      range = _quill$selection$getR2[0];
                    if (_this2.handlers[format] != null) {
                      _this2.handlers[format].call(_this2, value);
                    } else if (
                      _parchment2.default.query(format).prototype instanceof
                      _parchment2.default.Embed
                    ) {
                      value = prompt('Enter ' + format);
                      if (!value) return;
                      _this2.quill.updateContents(
                        new _quillDelta2.default()
                          .retain(range.index)
                          .delete(range.length)
                          .insert(_defineProperty2({}, format, value)),
                        _quill2.default.sources.USER
                      );
                    } else {
                      _this2.quill.format(
                        format,
                        value,
                        _quill2.default.sources.USER
                      );
                    }
                    _this2.update(range);
                  });
                  this.controls.push([format, input2]);
                },
              },
              {
                key: 'update',
                value: function update(range) {
                  var formats =
                    range == null ? {} : this.quill.getFormat(range);
                  this.controls.forEach(function (pair) {
                    var _pair = _slicedToArray(pair, 2),
                      format = _pair[0],
                      input2 = _pair[1];
                    if (input2.tagName === 'SELECT') {
                      var option = void 0;
                      if (range == null) {
                        option = null;
                      } else if (formats[format] == null) {
                        option = input2.querySelector('option[selected]');
                      } else if (!Array.isArray(formats[format])) {
                        var value = formats[format];
                        if (typeof value === 'string') {
                          value = value.replace(/\"/g, '\\"');
                        }
                        option = input2.querySelector(
                          'option[value="' + value + '"]'
                        );
                      }
                      if (option == null) {
                        input2.value = '';
                        input2.selectedIndex = -1;
                      } else {
                        option.selected = true;
                      }
                    } else {
                      if (range == null) {
                        input2.classList.remove('ql-active');
                      } else if (input2.hasAttribute('value')) {
                        var isActive =
                          formats[format] === input2.getAttribute('value') ||
                          (formats[format] != null &&
                            formats[format].toString() ===
                              input2.getAttribute('value')) ||
                          (formats[format] == null &&
                            !input2.getAttribute('value'));
                        input2.classList.toggle('ql-active', isActive);
                      } else {
                        input2.classList.toggle(
                          'ql-active',
                          formats[format] != null
                        );
                      }
                    }
                  });
                },
              },
            ]);
            return Toolbar2;
          })(_module2.default);
          Toolbar.DEFAULTS = {};
          function addButton(container2, format, value) {
            var input2 = document.createElement('button');
            input2.setAttribute('type', 'button');
            input2.classList.add('ql-' + format);
            if (value != null) {
              input2.value = value;
            }
            container2.appendChild(input2);
          }
          function addControls(container2, groups) {
            if (!Array.isArray(groups[0])) {
              groups = [groups];
            }
            groups.forEach(function (controls) {
              var group = document.createElement('span');
              group.classList.add('ql-formats');
              controls.forEach(function (control) {
                if (typeof control === 'string') {
                  addButton(group, control);
                } else {
                  var format = Object.keys(control)[0];
                  var value = control[format];
                  if (Array.isArray(value)) {
                    addSelect(group, format, value);
                  } else {
                    addButton(group, format, value);
                  }
                }
              });
              container2.appendChild(group);
            });
          }
          function addSelect(container2, format, values) {
            var input2 = document.createElement('select');
            input2.classList.add('ql-' + format);
            values.forEach(function (value) {
              var option = document.createElement('option');
              if (value !== false) {
                option.setAttribute('value', value);
              } else {
                option.setAttribute('selected', 'selected');
              }
              input2.appendChild(option);
            });
            container2.appendChild(input2);
          }
          Toolbar.DEFAULTS = {
            container: null,
            handlers: {
              clean: function clean() {
                var _this3 = this;
                var range = this.quill.getSelection();
                if (range == null) return;
                if (range.length == 0) {
                  var formats = this.quill.getFormat();
                  Object.keys(formats).forEach(function (name) {
                    if (
                      _parchment2.default.query(
                        name,
                        _parchment2.default.Scope.INLINE
                      ) != null
                    ) {
                      _this3.quill.format(name, false);
                    }
                  });
                } else {
                  this.quill.removeFormat(range, _quill2.default.sources.USER);
                }
              },
              direction: function direction(value) {
                var align = this.quill.getFormat()['align'];
                if (value === 'rtl' && align == null) {
                  this.quill.format(
                    'align',
                    'right',
                    _quill2.default.sources.USER
                  );
                } else if (!value && align === 'right') {
                  this.quill.format(
                    'align',
                    false,
                    _quill2.default.sources.USER
                  );
                }
                this.quill.format(
                  'direction',
                  value,
                  _quill2.default.sources.USER
                );
              },
              indent: function indent(value) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);
                var indent2 = parseInt(formats.indent || 0);
                if (value === '+1' || value === '-1') {
                  var modifier = value === '+1' ? 1 : -1;
                  if (formats.direction === 'rtl') modifier *= -1;
                  this.quill.format(
                    'indent',
                    indent2 + modifier,
                    _quill2.default.sources.USER
                  );
                }
              },
              link: function link(value) {
                if (value === true) {
                  value = prompt('Enter link URL:');
                }
                this.quill.format('link', value, _quill2.default.sources.USER);
              },
              list: function list(value) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);
                if (value === 'check') {
                  if (
                    formats['list'] === 'checked' ||
                    formats['list'] === 'unchecked'
                  ) {
                    this.quill.format(
                      'list',
                      false,
                      _quill2.default.sources.USER
                    );
                  } else {
                    this.quill.format(
                      'list',
                      'unchecked',
                      _quill2.default.sources.USER
                    );
                  }
                } else {
                  this.quill.format(
                    'list',
                    value,
                    _quill2.default.sources.USER
                  );
                }
              },
            },
          };
          exports2.default = Toolbar;
          exports2.addControls = addControls;
        },
        /* 58 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <polyline class="ql-even ql-stroke" points="5 7 3 9 5 11"></polyline> <polyline class="ql-even ql-stroke" points="13 7 15 9 13 11"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>';
        },
        /* 59 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ColorPicker = (function (_Picker) {
            _inherits(ColorPicker2, _Picker);
            function ColorPicker2(select, label2) {
              _classCallCheck(this, ColorPicker2);
              var _this = _possibleConstructorReturn(
                this,
                (
                  ColorPicker2.__proto__ || Object.getPrototypeOf(ColorPicker2)
                ).call(this, select)
              );
              _this.label.innerHTML = label2;
              _this.container.classList.add('ql-color-picker');
              [].slice
                .call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7)
                .forEach(function (item) {
                  item.classList.add('ql-primary');
                });
              return _this;
            }
            _createClass(ColorPicker2, [
              {
                key: 'buildItem',
                value: function buildItem(option) {
                  var item = _get(
                    ColorPicker2.prototype.__proto__ ||
                      Object.getPrototypeOf(ColorPicker2.prototype),
                    'buildItem',
                    this
                  ).call(this, option);
                  item.style.backgroundColor =
                    option.getAttribute('value') || '';
                  return item;
                },
              },
              {
                key: 'selectItem',
                value: function selectItem(item, trigger) {
                  _get(
                    ColorPicker2.prototype.__proto__ ||
                      Object.getPrototypeOf(ColorPicker2.prototype),
                    'selectItem',
                    this
                  ).call(this, item, trigger);
                  var colorLabel = this.label.querySelector('.ql-color-label');
                  var value = item ? item.getAttribute('data-value') || '' : '';
                  if (colorLabel) {
                    if (colorLabel.tagName === 'line') {
                      colorLabel.style.stroke = value;
                    } else {
                      colorLabel.style.fill = value;
                    }
                  }
                },
              },
            ]);
            return ColorPicker2;
          })(_picker2.default);
          exports2.default = ColorPicker;
        },
        /* 60 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var IconPicker = (function (_Picker) {
            _inherits(IconPicker2, _Picker);
            function IconPicker2(select, icons2) {
              _classCallCheck(this, IconPicker2);
              var _this = _possibleConstructorReturn(
                this,
                (
                  IconPicker2.__proto__ || Object.getPrototypeOf(IconPicker2)
                ).call(this, select)
              );
              _this.container.classList.add('ql-icon-picker');
              [].forEach.call(
                _this.container.querySelectorAll('.ql-picker-item'),
                function (item) {
                  item.innerHTML =
                    icons2[item.getAttribute('data-value') || ''];
                }
              );
              _this.defaultItem = _this.container.querySelector('.ql-selected');
              _this.selectItem(_this.defaultItem);
              return _this;
            }
            _createClass(IconPicker2, [
              {
                key: 'selectItem',
                value: function selectItem(item, trigger) {
                  _get(
                    IconPicker2.prototype.__proto__ ||
                      Object.getPrototypeOf(IconPicker2.prototype),
                    'selectItem',
                    this
                  ).call(this, item, trigger);
                  item = item || this.defaultItem;
                  this.label.innerHTML = item.innerHTML;
                },
              },
            ]);
            return IconPicker2;
          })(_picker2.default);
          exports2.default = IconPicker;
        },
        /* 61 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          var Tooltip = (function () {
            function Tooltip2(quill2, boundsContainer) {
              var _this = this;
              _classCallCheck(this, Tooltip2);
              this.quill = quill2;
              this.boundsContainer = boundsContainer || document.body;
              this.root = quill2.addContainer('ql-tooltip');
              this.root.innerHTML = this.constructor.TEMPLATE;
              if (this.quill.root === this.quill.scrollingContainer) {
                this.quill.root.addEventListener('scroll', function () {
                  _this.root.style.marginTop =
                    -1 * _this.quill.root.scrollTop + 'px';
                });
              }
              this.hide();
            }
            _createClass(Tooltip2, [
              {
                key: 'hide',
                value: function hide() {
                  this.root.classList.add('ql-hidden');
                },
              },
              {
                key: 'position',
                value: function position(reference) {
                  var left =
                    reference.left +
                    reference.width / 2 -
                    this.root.offsetWidth / 2;
                  var top = reference.bottom + this.quill.root.scrollTop;
                  this.root.style.left = left + 'px';
                  this.root.style.top = top + 'px';
                  this.root.classList.remove('ql-flip');
                  var containerBounds =
                    this.boundsContainer.getBoundingClientRect();
                  var rootBounds = this.root.getBoundingClientRect();
                  var shift = 0;
                  if (rootBounds.right > containerBounds.right) {
                    shift = containerBounds.right - rootBounds.right;
                    this.root.style.left = left + shift + 'px';
                  }
                  if (rootBounds.left < containerBounds.left) {
                    shift = containerBounds.left - rootBounds.left;
                    this.root.style.left = left + shift + 'px';
                  }
                  if (rootBounds.bottom > containerBounds.bottom) {
                    var height = rootBounds.bottom - rootBounds.top;
                    var verticalShift =
                      reference.bottom - reference.top + height;
                    this.root.style.top = top - verticalShift + 'px';
                    this.root.classList.add('ql-flip');
                  }
                  return shift;
                },
              },
              {
                key: 'show',
                value: function show() {
                  this.root.classList.remove('ql-editing');
                  this.root.classList.remove('ql-hidden');
                },
              },
            ]);
            return Tooltip2;
          })();
          exports2.default = Tooltip;
        },
        /* 62 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _slicedToArray = /* @__PURE__ */ (function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value);
                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']();
                } finally {
                  if (_d) throw _e;
                }
              }
              return _arr;
            }
            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                );
              }
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _base = __webpack_require__(43);
          var _base2 = _interopRequireDefault(_base);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          var _selection = __webpack_require__(15);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var TOOLBAR_CONFIG = [
            [{ header: ['1', '2', '3', false] }],
            ['bold', 'italic', 'underline', 'link'],
            [{ list: 'ordered' }, { list: 'bullet' }],
            ['clean'],
          ];
          var SnowTheme = (function (_BaseTheme) {
            _inherits(SnowTheme2, _BaseTheme);
            function SnowTheme2(quill2, options) {
              _classCallCheck(this, SnowTheme2);
              if (
                options.modules.toolbar != null &&
                options.modules.toolbar.container == null
              ) {
                options.modules.toolbar.container = TOOLBAR_CONFIG;
              }
              var _this = _possibleConstructorReturn(
                this,
                (
                  SnowTheme2.__proto__ || Object.getPrototypeOf(SnowTheme2)
                ).call(this, quill2, options)
              );
              _this.quill.container.classList.add('ql-snow');
              return _this;
            }
            _createClass(SnowTheme2, [
              {
                key: 'extendToolbar',
                value: function extendToolbar(toolbar) {
                  toolbar.container.classList.add('ql-snow');
                  this.buildButtons(
                    [].slice.call(toolbar.container.querySelectorAll('button')),
                    _icons2.default
                  );
                  this.buildPickers(
                    [].slice.call(toolbar.container.querySelectorAll('select')),
                    _icons2.default
                  );
                  this.tooltip = new SnowTooltip(
                    this.quill,
                    this.options.bounds
                  );
                  if (toolbar.container.querySelector('.ql-link')) {
                    this.quill.keyboard.addBinding(
                      { key: 'K', shortKey: true },
                      function (range, context) {
                        toolbar.handlers['link'].call(
                          toolbar,
                          !context.format.link
                        );
                      }
                    );
                  }
                },
              },
            ]);
            return SnowTheme2;
          })(_base2.default);
          SnowTheme.DEFAULTS = (0, _extend2.default)(
            true,
            {},
            _base2.default.DEFAULTS,
            {
              modules: {
                toolbar: {
                  handlers: {
                    link: function link(value) {
                      if (value) {
                        var range = this.quill.getSelection();
                        if (range == null || range.length == 0) return;
                        var preview = this.quill.getText(range);
                        if (
                          /^\S+@\S+\.\S+$/.test(preview) &&
                          preview.indexOf('mailto:') !== 0
                        ) {
                          preview = 'mailto:' + preview;
                        }
                        var tooltip = this.quill.theme.tooltip;
                        tooltip.edit('link', preview);
                      } else {
                        this.quill.format('link', false);
                      }
                    },
                  },
                },
              },
            }
          );
          var SnowTooltip = (function (_BaseTooltip) {
            _inherits(SnowTooltip2, _BaseTooltip);
            function SnowTooltip2(quill2, bounds) {
              _classCallCheck(this, SnowTooltip2);
              var _this2 = _possibleConstructorReturn(
                this,
                (
                  SnowTooltip2.__proto__ || Object.getPrototypeOf(SnowTooltip2)
                ).call(this, quill2, bounds)
              );
              _this2.preview = _this2.root.querySelector('a.ql-preview');
              return _this2;
            }
            _createClass(SnowTooltip2, [
              {
                key: 'listen',
                value: function listen() {
                  var _this3 = this;
                  _get(
                    SnowTooltip2.prototype.__proto__ ||
                      Object.getPrototypeOf(SnowTooltip2.prototype),
                    'listen',
                    this
                  ).call(this);
                  this.root
                    .querySelector('a.ql-action')
                    .addEventListener('click', function (event) {
                      if (_this3.root.classList.contains('ql-editing')) {
                        _this3.save();
                      } else {
                        _this3.edit('link', _this3.preview.textContent);
                      }
                      event.preventDefault();
                    });
                  this.root
                    .querySelector('a.ql-remove')
                    .addEventListener('click', function (event) {
                      if (_this3.linkRange != null) {
                        var range = _this3.linkRange;
                        _this3.restoreFocus();
                        _this3.quill.formatText(
                          range,
                          'link',
                          false,
                          _emitter2.default.sources.USER
                        );
                        delete _this3.linkRange;
                      }
                      event.preventDefault();
                      _this3.hide();
                    });
                  this.quill.on(
                    _emitter2.default.events.SELECTION_CHANGE,
                    function (range, oldRange, source) {
                      if (range == null) return;
                      if (
                        range.length === 0 &&
                        source === _emitter2.default.sources.USER
                      ) {
                        var _quill$scroll$descend =
                            _this3.quill.scroll.descendant(
                              _link2.default,
                              range.index
                            ),
                          _quill$scroll$descend2 = _slicedToArray(
                            _quill$scroll$descend,
                            2
                          ),
                          link = _quill$scroll$descend2[0],
                          offset = _quill$scroll$descend2[1];
                        if (link != null) {
                          _this3.linkRange = new _selection.Range(
                            range.index - offset,
                            link.length()
                          );
                          var preview = _link2.default.formats(link.domNode);
                          _this3.preview.textContent = preview;
                          _this3.preview.setAttribute('href', preview);
                          _this3.show();
                          _this3.position(
                            _this3.quill.getBounds(_this3.linkRange)
                          );
                          return;
                        }
                      } else {
                        delete _this3.linkRange;
                      }
                      _this3.hide();
                    }
                  );
                },
              },
              {
                key: 'show',
                value: function show() {
                  _get(
                    SnowTooltip2.prototype.__proto__ ||
                      Object.getPrototypeOf(SnowTooltip2.prototype),
                    'show',
                    this
                  ).call(this);
                  this.root.removeAttribute('data-mode');
                },
              },
            ]);
            return SnowTooltip2;
          })(_base.BaseTooltip);
          SnowTooltip.TEMPLATE = [
            '<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>',
            '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">',
            '<a class="ql-action"></a>',
            '<a class="ql-remove"></a>',
          ].join('');
          exports2.default = SnowTheme;
        },
        /* 63 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _core = __webpack_require__(29);
          var _core2 = _interopRequireDefault(_core);
          var _align = __webpack_require__(36);
          var _direction = __webpack_require__(38);
          var _indent = __webpack_require__(64);
          var _blockquote = __webpack_require__(65);
          var _blockquote2 = _interopRequireDefault(_blockquote);
          var _header = __webpack_require__(66);
          var _header2 = _interopRequireDefault(_header);
          var _list = __webpack_require__(67);
          var _list2 = _interopRequireDefault(_list);
          var _background = __webpack_require__(37);
          var _color = __webpack_require__(26);
          var _font = __webpack_require__(39);
          var _size = __webpack_require__(40);
          var _bold = __webpack_require__(56);
          var _bold2 = _interopRequireDefault(_bold);
          var _italic = __webpack_require__(68);
          var _italic2 = _interopRequireDefault(_italic);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          var _script = __webpack_require__(69);
          var _script2 = _interopRequireDefault(_script);
          var _strike = __webpack_require__(70);
          var _strike2 = _interopRequireDefault(_strike);
          var _underline = __webpack_require__(71);
          var _underline2 = _interopRequireDefault(_underline);
          var _image = __webpack_require__(72);
          var _image2 = _interopRequireDefault(_image);
          var _video = __webpack_require__(73);
          var _video2 = _interopRequireDefault(_video);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _formula = __webpack_require__(74);
          var _formula2 = _interopRequireDefault(_formula);
          var _syntax = __webpack_require__(75);
          var _syntax2 = _interopRequireDefault(_syntax);
          var _toolbar = __webpack_require__(57);
          var _toolbar2 = _interopRequireDefault(_toolbar);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          var _colorPicker = __webpack_require__(59);
          var _colorPicker2 = _interopRequireDefault(_colorPicker);
          var _iconPicker = __webpack_require__(60);
          var _iconPicker2 = _interopRequireDefault(_iconPicker);
          var _tooltip = __webpack_require__(61);
          var _tooltip2 = _interopRequireDefault(_tooltip);
          var _bubble = __webpack_require__(108);
          var _bubble2 = _interopRequireDefault(_bubble);
          var _snow = __webpack_require__(62);
          var _snow2 = _interopRequireDefault(_snow);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          _core2.default.register(
            {
              'attributors/attribute/direction': _direction.DirectionAttribute,
              'attributors/class/align': _align.AlignClass,
              'attributors/class/background': _background.BackgroundClass,
              'attributors/class/color': _color.ColorClass,
              'attributors/class/direction': _direction.DirectionClass,
              'attributors/class/font': _font.FontClass,
              'attributors/class/size': _size.SizeClass,
              'attributors/style/align': _align.AlignStyle,
              'attributors/style/background': _background.BackgroundStyle,
              'attributors/style/color': _color.ColorStyle,
              'attributors/style/direction': _direction.DirectionStyle,
              'attributors/style/font': _font.FontStyle,
              'attributors/style/size': _size.SizeStyle,
            },
            true
          );
          _core2.default.register(
            {
              'formats/align': _align.AlignClass,
              'formats/direction': _direction.DirectionClass,
              'formats/indent': _indent.IndentClass,
              'formats/background': _background.BackgroundStyle,
              'formats/color': _color.ColorStyle,
              'formats/font': _font.FontClass,
              'formats/size': _size.SizeClass,
              'formats/blockquote': _blockquote2.default,
              'formats/code-block': _code2.default,
              'formats/header': _header2.default,
              'formats/list': _list2.default,
              'formats/bold': _bold2.default,
              'formats/code': _code.Code,
              'formats/italic': _italic2.default,
              'formats/link': _link2.default,
              'formats/script': _script2.default,
              'formats/strike': _strike2.default,
              'formats/underline': _underline2.default,
              'formats/image': _image2.default,
              'formats/video': _video2.default,
              'formats/list/item': _list.ListItem,
              'modules/formula': _formula2.default,
              'modules/syntax': _syntax2.default,
              'modules/toolbar': _toolbar2.default,
              'themes/bubble': _bubble2.default,
              'themes/snow': _snow2.default,
              'ui/icons': _icons2.default,
              'ui/picker': _picker2.default,
              'ui/icon-picker': _iconPicker2.default,
              'ui/color-picker': _colorPicker2.default,
              'ui/tooltip': _tooltip2.default,
            },
            true
          );
          exports2.default = _core2.default;
        },
        /* 64 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.IndentClass = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var IdentAttributor = (function (_Parchment$Attributor) {
            _inherits(IdentAttributor2, _Parchment$Attributor);
            function IdentAttributor2() {
              _classCallCheck(this, IdentAttributor2);
              return _possibleConstructorReturn(
                this,
                (
                  IdentAttributor2.__proto__ ||
                  Object.getPrototypeOf(IdentAttributor2)
                ).apply(this, arguments)
              );
            }
            _createClass(IdentAttributor2, [
              {
                key: 'add',
                value: function add(node, value) {
                  if (value === '+1' || value === '-1') {
                    var indent = this.value(node) || 0;
                    value = value === '+1' ? indent + 1 : indent - 1;
                  }
                  if (value === 0) {
                    this.remove(node);
                    return true;
                  } else {
                    return _get(
                      IdentAttributor2.prototype.__proto__ ||
                        Object.getPrototypeOf(IdentAttributor2.prototype),
                      'add',
                      this
                    ).call(this, node, value);
                  }
                },
              },
              {
                key: 'canAdd',
                value: function canAdd(node, value) {
                  return (
                    _get(
                      IdentAttributor2.prototype.__proto__ ||
                        Object.getPrototypeOf(IdentAttributor2.prototype),
                      'canAdd',
                      this
                    ).call(this, node, value) ||
                    _get(
                      IdentAttributor2.prototype.__proto__ ||
                        Object.getPrototypeOf(IdentAttributor2.prototype),
                      'canAdd',
                      this
                    ).call(this, node, parseInt(value))
                  );
                },
              },
              {
                key: 'value',
                value: function value(node) {
                  return (
                    parseInt(
                      _get(
                        IdentAttributor2.prototype.__proto__ ||
                          Object.getPrototypeOf(IdentAttributor2.prototype),
                        'value',
                        this
                      ).call(this, node)
                    ) || void 0
                  );
                },
              },
            ]);
            return IdentAttributor2;
          })(_parchment2.default.Attributor.Class);
          var IndentClass = new IdentAttributor('indent', 'ql-indent', {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: [1, 2, 3, 4, 5, 6, 7, 8],
          });
          exports2.IndentClass = IndentClass;
        },
        /* 65 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Blockquote = (function (_Block) {
            _inherits(Blockquote2, _Block);
            function Blockquote2() {
              _classCallCheck(this, Blockquote2);
              return _possibleConstructorReturn(
                this,
                (
                  Blockquote2.__proto__ || Object.getPrototypeOf(Blockquote2)
                ).apply(this, arguments)
              );
            }
            return Blockquote2;
          })(_block2.default);
          Blockquote.blotName = 'blockquote';
          Blockquote.tagName = 'blockquote';
          exports2.default = Blockquote;
        },
        /* 66 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Header = (function (_Block) {
            _inherits(Header2, _Block);
            function Header2() {
              _classCallCheck(this, Header2);
              return _possibleConstructorReturn(
                this,
                (Header2.__proto__ || Object.getPrototypeOf(Header2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(Header2, null, [
              {
                key: 'formats',
                value: function formats(domNode) {
                  return this.tagName.indexOf(domNode.tagName) + 1;
                },
              },
            ]);
            return Header2;
          })(_block2.default);
          Header.blotName = 'header';
          Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];
          exports2.default = Header;
        },
        /* 67 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.ListItem = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty2(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ListItem = (function (_Block) {
            _inherits(ListItem2, _Block);
            function ListItem2() {
              _classCallCheck(this, ListItem2);
              return _possibleConstructorReturn(
                this,
                (ListItem2.__proto__ || Object.getPrototypeOf(ListItem2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              ListItem2,
              [
                {
                  key: 'format',
                  value: function format(name, value) {
                    if (name === List.blotName && !value) {
                      this.replaceWith(
                        _parchment2.default.create(this.statics.scope)
                      );
                    } else {
                      _get(
                        ListItem2.prototype.__proto__ ||
                          Object.getPrototypeOf(ListItem2.prototype),
                        'format',
                        this
                      ).call(this, name, value);
                    }
                  },
                },
                {
                  key: 'remove',
                  value: function remove() {
                    if (this.prev == null && this.next == null) {
                      this.parent.remove();
                    } else {
                      _get(
                        ListItem2.prototype.__proto__ ||
                          Object.getPrototypeOf(ListItem2.prototype),
                        'remove',
                        this
                      ).call(this);
                    }
                  },
                },
                {
                  key: 'replaceWith',
                  value: function replaceWith(name, value) {
                    this.parent.isolate(
                      this.offset(this.parent),
                      this.length()
                    );
                    if (name === this.parent.statics.blotName) {
                      this.parent.replaceWith(name, value);
                      return this;
                    } else {
                      this.parent.unwrap();
                      return _get(
                        ListItem2.prototype.__proto__ ||
                          Object.getPrototypeOf(ListItem2.prototype),
                        'replaceWith',
                        this
                      ).call(this, name, value);
                    }
                  },
                },
              ],
              [
                {
                  key: 'formats',
                  value: function formats(domNode) {
                    return domNode.tagName === this.tagName
                      ? void 0
                      : _get(
                          ListItem2.__proto__ ||
                            Object.getPrototypeOf(ListItem2),
                          'formats',
                          this
                        ).call(this, domNode);
                  },
                },
              ]
            );
            return ListItem2;
          })(_block2.default);
          ListItem.blotName = 'list-item';
          ListItem.tagName = 'LI';
          var List = (function (_Container) {
            _inherits(List2, _Container);
            _createClass(List2, null, [
              {
                key: 'create',
                value: function create(value) {
                  var tagName = value === 'ordered' ? 'OL' : 'UL';
                  var node = _get(
                    List2.__proto__ || Object.getPrototypeOf(List2),
                    'create',
                    this
                  ).call(this, tagName);
                  if (value === 'checked' || value === 'unchecked') {
                    node.setAttribute('data-checked', value === 'checked');
                  }
                  return node;
                },
              },
              {
                key: 'formats',
                value: function formats(domNode) {
                  if (domNode.tagName === 'OL') return 'ordered';
                  if (domNode.tagName === 'UL') {
                    if (domNode.hasAttribute('data-checked')) {
                      return domNode.getAttribute('data-checked') === 'true'
                        ? 'checked'
                        : 'unchecked';
                    } else {
                      return 'bullet';
                    }
                  }
                  return void 0;
                },
              },
            ]);
            function List2(domNode) {
              _classCallCheck(this, List2);
              var _this2 = _possibleConstructorReturn(
                this,
                (List2.__proto__ || Object.getPrototypeOf(List2)).call(
                  this,
                  domNode
                )
              );
              var listEventHandler = function listEventHandler2(e) {
                if (e.target.parentNode !== domNode) return;
                var format = _this2.statics.formats(domNode);
                var blot = _parchment2.default.find(e.target);
                if (format === 'checked') {
                  blot.format('list', 'unchecked');
                } else if (format === 'unchecked') {
                  blot.format('list', 'checked');
                }
              };
              domNode.addEventListener('touchstart', listEventHandler);
              domNode.addEventListener('mousedown', listEventHandler);
              return _this2;
            }
            _createClass(List2, [
              {
                key: 'format',
                value: function format(name, value) {
                  if (this.children.length > 0) {
                    this.children.tail.format(name, value);
                  }
                },
              },
              {
                key: 'formats',
                value: function formats() {
                  return _defineProperty2(
                    {},
                    this.statics.blotName,
                    this.statics.formats(this.domNode)
                  );
                },
              },
              {
                key: 'insertBefore',
                value: function insertBefore(blot, ref) {
                  if (blot instanceof ListItem) {
                    _get(
                      List2.prototype.__proto__ ||
                        Object.getPrototypeOf(List2.prototype),
                      'insertBefore',
                      this
                    ).call(this, blot, ref);
                  } else {
                    var index = ref == null ? this.length() : ref.offset(this);
                    var after = this.split(index);
                    after.parent.insertBefore(blot, after);
                  }
                },
              },
              {
                key: 'optimize',
                value: function optimize(context) {
                  _get(
                    List2.prototype.__proto__ ||
                      Object.getPrototypeOf(List2.prototype),
                    'optimize',
                    this
                  ).call(this, context);
                  var next = this.next;
                  if (
                    next != null &&
                    next.prev === this &&
                    next.statics.blotName === this.statics.blotName &&
                    next.domNode.tagName === this.domNode.tagName &&
                    next.domNode.getAttribute('data-checked') ===
                      this.domNode.getAttribute('data-checked')
                  ) {
                    next.moveChildren(this);
                    next.remove();
                  }
                },
              },
              {
                key: 'replace',
                value: function replace(target) {
                  if (target.statics.blotName !== this.statics.blotName) {
                    var item = _parchment2.default.create(
                      this.statics.defaultChild
                    );
                    target.moveChildren(item);
                    this.appendChild(item);
                  }
                  _get(
                    List2.prototype.__proto__ ||
                      Object.getPrototypeOf(List2.prototype),
                    'replace',
                    this
                  ).call(this, target);
                },
              },
            ]);
            return List2;
          })(_container2.default);
          List.blotName = 'list';
          List.scope = _parchment2.default.Scope.BLOCK_BLOT;
          List.tagName = ['OL', 'UL'];
          List.defaultChild = 'list-item';
          List.allowedChildren = [ListItem];
          exports2.ListItem = ListItem;
          exports2.default = List;
        },
        /* 68 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _bold = __webpack_require__(56);
          var _bold2 = _interopRequireDefault(_bold);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Italic = (function (_Bold) {
            _inherits(Italic2, _Bold);
            function Italic2() {
              _classCallCheck(this, Italic2);
              return _possibleConstructorReturn(
                this,
                (Italic2.__proto__ || Object.getPrototypeOf(Italic2)).apply(
                  this,
                  arguments
                )
              );
            }
            return Italic2;
          })(_bold2.default);
          Italic.blotName = 'italic';
          Italic.tagName = ['EM', 'I'];
          exports2.default = Italic;
        },
        /* 69 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Script = (function (_Inline) {
            _inherits(Script2, _Inline);
            function Script2() {
              _classCallCheck(this, Script2);
              return _possibleConstructorReturn(
                this,
                (Script2.__proto__ || Object.getPrototypeOf(Script2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(Script2, null, [
              {
                key: 'create',
                value: function create(value) {
                  if (value === 'super') {
                    return document.createElement('sup');
                  } else if (value === 'sub') {
                    return document.createElement('sub');
                  } else {
                    return _get(
                      Script2.__proto__ || Object.getPrototypeOf(Script2),
                      'create',
                      this
                    ).call(this, value);
                  }
                },
              },
              {
                key: 'formats',
                value: function formats(domNode) {
                  if (domNode.tagName === 'SUB') return 'sub';
                  if (domNode.tagName === 'SUP') return 'super';
                  return void 0;
                },
              },
            ]);
            return Script2;
          })(_inline2.default);
          Script.blotName = 'script';
          Script.tagName = ['SUB', 'SUP'];
          exports2.default = Script;
        },
        /* 70 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Strike = (function (_Inline) {
            _inherits(Strike2, _Inline);
            function Strike2() {
              _classCallCheck(this, Strike2);
              return _possibleConstructorReturn(
                this,
                (Strike2.__proto__ || Object.getPrototypeOf(Strike2)).apply(
                  this,
                  arguments
                )
              );
            }
            return Strike2;
          })(_inline2.default);
          Strike.blotName = 'strike';
          Strike.tagName = 'S';
          exports2.default = Strike;
        },
        /* 71 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var Underline = (function (_Inline) {
            _inherits(Underline2, _Inline);
            function Underline2() {
              _classCallCheck(this, Underline2);
              return _possibleConstructorReturn(
                this,
                (
                  Underline2.__proto__ || Object.getPrototypeOf(Underline2)
                ).apply(this, arguments)
              );
            }
            return Underline2;
          })(_inline2.default);
          Underline.blotName = 'underline';
          Underline.tagName = 'U';
          exports2.default = Underline;
        },
        /* 72 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _link = __webpack_require__(27);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ATTRIBUTES = ['alt', 'height', 'width'];
          var Image2 = (function (_Parchment$Embed) {
            _inherits(Image3, _Parchment$Embed);
            function Image3() {
              _classCallCheck(this, Image3);
              return _possibleConstructorReturn(
                this,
                (Image3.__proto__ || Object.getPrototypeOf(Image3)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Image3,
              [
                {
                  key: 'format',
                  value: function format(name, value) {
                    if (ATTRIBUTES.indexOf(name) > -1) {
                      if (value) {
                        this.domNode.setAttribute(name, value);
                      } else {
                        this.domNode.removeAttribute(name);
                      }
                    } else {
                      _get(
                        Image3.prototype.__proto__ ||
                          Object.getPrototypeOf(Image3.prototype),
                        'format',
                        this
                      ).call(this, name, value);
                    }
                  },
                },
              ],
              [
                {
                  key: 'create',
                  value: function create(value) {
                    var node = _get(
                      Image3.__proto__ || Object.getPrototypeOf(Image3),
                      'create',
                      this
                    ).call(this, value);
                    if (typeof value === 'string') {
                      node.setAttribute('src', this.sanitize(value));
                    }
                    return node;
                  },
                },
                {
                  key: 'formats',
                  value: function formats(domNode) {
                    return ATTRIBUTES.reduce(function (formats2, attribute) {
                      if (domNode.hasAttribute(attribute)) {
                        formats2[attribute] = domNode.getAttribute(attribute);
                      }
                      return formats2;
                    }, {});
                  },
                },
                {
                  key: 'match',
                  value: function match(url) {
                    return (
                      /\.(jpe?g|gif|png)$/.test(url) ||
                      /^data:image\/.+;base64/.test(url)
                    );
                  },
                },
                {
                  key: 'sanitize',
                  value: function sanitize(url) {
                    return (0, _link.sanitize)(url, ['http', 'https', 'data'])
                      ? url
                      : '//:0';
                  },
                },
                {
                  key: 'value',
                  value: function value(domNode) {
                    return domNode.getAttribute('src');
                  },
                },
              ]
            );
            return Image3;
          })(_parchment2.default.Embed);
          Image2.blotName = 'image';
          Image2.tagName = 'IMG';
          exports2.default = Image2;
        },
        /* 73 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _block = __webpack_require__(4);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var ATTRIBUTES = ['height', 'width'];
          var Video = (function (_BlockEmbed) {
            _inherits(Video2, _BlockEmbed);
            function Video2() {
              _classCallCheck(this, Video2);
              return _possibleConstructorReturn(
                this,
                (Video2.__proto__ || Object.getPrototypeOf(Video2)).apply(
                  this,
                  arguments
                )
              );
            }
            _createClass(
              Video2,
              [
                {
                  key: 'format',
                  value: function format(name, value) {
                    if (ATTRIBUTES.indexOf(name) > -1) {
                      if (value) {
                        this.domNode.setAttribute(name, value);
                      } else {
                        this.domNode.removeAttribute(name);
                      }
                    } else {
                      _get(
                        Video2.prototype.__proto__ ||
                          Object.getPrototypeOf(Video2.prototype),
                        'format',
                        this
                      ).call(this, name, value);
                    }
                  },
                },
              ],
              [
                {
                  key: 'create',
                  value: function create(value) {
                    var node = _get(
                      Video2.__proto__ || Object.getPrototypeOf(Video2),
                      'create',
                      this
                    ).call(this, value);
                    node.setAttribute('frameborder', '0');
                    node.setAttribute('allowfullscreen', true);
                    node.setAttribute('src', this.sanitize(value));
                    return node;
                  },
                },
                {
                  key: 'formats',
                  value: function formats(domNode) {
                    return ATTRIBUTES.reduce(function (formats2, attribute) {
                      if (domNode.hasAttribute(attribute)) {
                        formats2[attribute] = domNode.getAttribute(attribute);
                      }
                      return formats2;
                    }, {});
                  },
                },
                {
                  key: 'sanitize',
                  value: function sanitize(url) {
                    return _link2.default.sanitize(url);
                  },
                },
                {
                  key: 'value',
                  value: function value(domNode) {
                    return domNode.getAttribute('src');
                  },
                },
              ]
            );
            return Video2;
          })(_block.BlockEmbed);
          Video.blotName = 'video';
          Video.className = 'ql-video';
          Video.tagName = 'IFRAME';
          exports2.default = Video;
        },
        /* 74 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.FormulaBlot = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _embed = __webpack_require__(35);
          var _embed2 = _interopRequireDefault(_embed);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var FormulaBlot = (function (_Embed) {
            _inherits(FormulaBlot2, _Embed);
            function FormulaBlot2() {
              _classCallCheck(this, FormulaBlot2);
              return _possibleConstructorReturn(
                this,
                (
                  FormulaBlot2.__proto__ || Object.getPrototypeOf(FormulaBlot2)
                ).apply(this, arguments)
              );
            }
            _createClass(FormulaBlot2, null, [
              {
                key: 'create',
                value: function create(value) {
                  var node = _get(
                    FormulaBlot2.__proto__ ||
                      Object.getPrototypeOf(FormulaBlot2),
                    'create',
                    this
                  ).call(this, value);
                  if (typeof value === 'string') {
                    window.katex.render(value, node, {
                      throwOnError: false,
                      errorColor: '#f00',
                    });
                    node.setAttribute('data-value', value);
                  }
                  return node;
                },
              },
              {
                key: 'value',
                value: function value(domNode) {
                  return domNode.getAttribute('data-value');
                },
              },
            ]);
            return FormulaBlot2;
          })(_embed2.default);
          FormulaBlot.blotName = 'formula';
          FormulaBlot.className = 'ql-formula';
          FormulaBlot.tagName = 'SPAN';
          var Formula = (function (_Module) {
            _inherits(Formula2, _Module);
            _createClass(Formula2, null, [
              {
                key: 'register',
                value: function register() {
                  _quill2.default.register(FormulaBlot, true);
                },
              },
            ]);
            function Formula2() {
              _classCallCheck(this, Formula2);
              var _this2 = _possibleConstructorReturn(
                this,
                (Formula2.__proto__ || Object.getPrototypeOf(Formula2)).call(
                  this
                )
              );
              if (window.katex == null) {
                throw new Error('Formula module requires KaTeX.');
              }
              return _this2;
            }
            return Formula2;
          })(_module2.default);
          exports2.FormulaBlot = FormulaBlot;
          exports2.default = Formula;
        },
        /* 75 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.CodeToken = exports2.CodeBlock = void 0;
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var SyntaxCodeBlock = (function (_CodeBlock) {
            _inherits(SyntaxCodeBlock2, _CodeBlock);
            function SyntaxCodeBlock2() {
              _classCallCheck(this, SyntaxCodeBlock2);
              return _possibleConstructorReturn(
                this,
                (
                  SyntaxCodeBlock2.__proto__ ||
                  Object.getPrototypeOf(SyntaxCodeBlock2)
                ).apply(this, arguments)
              );
            }
            _createClass(SyntaxCodeBlock2, [
              {
                key: 'replaceWith',
                value: function replaceWith(block) {
                  this.domNode.textContent = this.domNode.textContent;
                  this.attach();
                  _get(
                    SyntaxCodeBlock2.prototype.__proto__ ||
                      Object.getPrototypeOf(SyntaxCodeBlock2.prototype),
                    'replaceWith',
                    this
                  ).call(this, block);
                },
              },
              {
                key: 'highlight',
                value: function highlight(_highlight) {
                  var text = this.domNode.textContent;
                  if (this.cachedText !== text) {
                    if (text.trim().length > 0 || this.cachedText == null) {
                      this.domNode.innerHTML = _highlight(text);
                      this.domNode.normalize();
                      this.attach();
                    }
                    this.cachedText = text;
                  }
                },
              },
            ]);
            return SyntaxCodeBlock2;
          })(_code2.default);
          SyntaxCodeBlock.className = 'ql-syntax';
          var CodeToken = new _parchment2.default.Attributor.Class(
            'token',
            'hljs',
            {
              scope: _parchment2.default.Scope.INLINE,
            }
          );
          var Syntax = (function (_Module) {
            _inherits(Syntax2, _Module);
            _createClass(Syntax2, null, [
              {
                key: 'register',
                value: function register() {
                  _quill2.default.register(CodeToken, true);
                  _quill2.default.register(SyntaxCodeBlock, true);
                },
              },
            ]);
            function Syntax2(quill2, options) {
              _classCallCheck(this, Syntax2);
              var _this2 = _possibleConstructorReturn(
                this,
                (Syntax2.__proto__ || Object.getPrototypeOf(Syntax2)).call(
                  this,
                  quill2,
                  options
                )
              );
              if (typeof _this2.options.highlight !== 'function') {
                throw new Error(
                  'Syntax module requires highlight.js. Please include the library on the page before Quill.'
                );
              }
              var timer = null;
              _this2.quill.on(
                _quill2.default.events.SCROLL_OPTIMIZE,
                function () {
                  clearTimeout(timer);
                  timer = setTimeout(function () {
                    _this2.highlight();
                    timer = null;
                  }, _this2.options.interval);
                }
              );
              _this2.highlight();
              return _this2;
            }
            _createClass(Syntax2, [
              {
                key: 'highlight',
                value: function highlight() {
                  var _this3 = this;
                  if (this.quill.selection.composing) return;
                  this.quill.update(_quill2.default.sources.USER);
                  var range = this.quill.getSelection();
                  this.quill.scroll
                    .descendants(SyntaxCodeBlock)
                    .forEach(function (code) {
                      code.highlight(_this3.options.highlight);
                    });
                  this.quill.update(_quill2.default.sources.SILENT);
                  if (range != null) {
                    this.quill.setSelection(
                      range,
                      _quill2.default.sources.SILENT
                    );
                  }
                },
              },
            ]);
            return Syntax2;
          })(_module2.default);
          Syntax.DEFAULTS = {
            highlight: (function () {
              if (window.hljs == null) return null;
              return function (text) {
                var result = window.hljs.highlightAuto(text);
                return result.value;
              };
            })(),
            interval: 1e3,
          };
          exports2.CodeBlock = SyntaxCodeBlock;
          exports2.CodeToken = CodeToken;
          exports2.default = Syntax;
        },
        /* 76 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>';
        },
        /* 77 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>';
        },
        /* 78 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>';
        },
        /* 79 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>';
        },
        /* 80 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <g class="ql-fill ql-color-label"> <polygon points="6 6.868 6 6 5 6 5 7 5.942 7 6 6.868"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points="6.817 5 6 5 6 6 6.38 6 6.817 5"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points="4 11.439 4 11 3 11 3 12 3.755 12 4 11.439"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points="4.63 10 4 10 4 11 4.192 11 4.63 10"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points="13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points="12 6.868 12 6 11.62 6 12 6.868"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points="12.933 9 13 9 13 8 12.495 8 12.933 9"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points="5.5 13 9 5 12.5 13"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>';
        },
        /* 81 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <rect class="ql-fill ql-stroke" height=3 width=3 x=4 y=5></rect> <rect class="ql-fill ql-stroke" height=3 width=3 x=11 y=5></rect> <path class="ql-even ql-fill ql-stroke" d=M7,8c0,4.031-3,5-3,5></path> <path class="ql-even ql-fill ql-stroke" d=M14,8c0,4.031-3,5-3,5></path> </svg>';
        },
        /* 82 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>';
        },
        /* 83 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>';
        },
        /* 84 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class="ql-color-label ql-stroke ql-transparent" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points="5.5 11 9 3 12.5 11"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>';
        },
        /* 85 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="3 11 5 9 3 7 3 11"></polygon> <line class="ql-stroke ql-fill" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>';
        },
        /* 86 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="15 12 13 10 15 8 15 12"></polygon> <line class="ql-stroke ql-fill" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>';
        },
        /* 87 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>';
        },
        /* 88 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>';
        },
        /* 89 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>';
        },
        /* 90 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform="translate(24 18) rotate(-180)"/> </svg>';
        },
        /* 91 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>';
        },
        /* 92 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>';
        },
        /* 93 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>';
        },
        /* 94 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>';
        },
        /* 95 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class="ql-even ql-fill" points="5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12"></polyline> </svg>';
        },
        /* 96 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class="ql-fill ql-stroke" points="3 7 3 11 5 9 3 7"></polyline> </svg>';
        },
        /* 97 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="5 7 5 11 3 9 5 7"></polyline> </svg>';
        },
        /* 98 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class="ql-even ql-stroke" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class="ql-even ql-stroke" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>';
        },
        /* 99 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class="ql-stroke ql-thin" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class="ql-stroke ql-thin" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class="ql-stroke ql-thin" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>';
        },
        /* 100 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>';
        },
        /* 101 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points="3 4 4 5 6 3"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points="3 14 4 15 6 13"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="3 9 4 10 6 8"></polyline> </svg>';
        },
        /* 102 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>';
        },
        /* 103 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>';
        },
        /* 104 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <line class="ql-stroke ql-thin" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>';
        },
        /* 105 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>';
        },
        /* 106 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>';
        },
        /* 107 */
        /***/
        function (module2, exports2) {
          module2.exports =
            '<svg viewbox="0 0 18 18"> <polygon class=ql-stroke points="7 11 9 13 11 11 7 11"></polygon> <polygon class=ql-stroke points="7 7 9 5 11 7 7 7"></polygon> </svg>';
        },
        /* 108 */
        /***/
        function (module2, exports2, __webpack_require__) {
          Object.defineProperty(exports2, '__esModule', {
            value: true,
          });
          exports2.default = exports2.BubbleTooltip = void 0;
          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get(parent, property, receiver);
              }
            } else if ('value' in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = /* @__PURE__ */ (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _base = __webpack_require__(43);
          var _base2 = _interopRequireDefault(_base);
          var _selection = __webpack_require__(15);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }
          var TOOLBAR_CONFIG = [
            ['bold', 'italic', 'link'],
            [{ header: 1 }, { header: 2 }, 'blockquote'],
          ];
          var BubbleTheme = (function (_BaseTheme) {
            _inherits(BubbleTheme2, _BaseTheme);
            function BubbleTheme2(quill2, options) {
              _classCallCheck(this, BubbleTheme2);
              if (
                options.modules.toolbar != null &&
                options.modules.toolbar.container == null
              ) {
                options.modules.toolbar.container = TOOLBAR_CONFIG;
              }
              var _this = _possibleConstructorReturn(
                this,
                (
                  BubbleTheme2.__proto__ || Object.getPrototypeOf(BubbleTheme2)
                ).call(this, quill2, options)
              );
              _this.quill.container.classList.add('ql-bubble');
              return _this;
            }
            _createClass(BubbleTheme2, [
              {
                key: 'extendToolbar',
                value: function extendToolbar(toolbar) {
                  this.tooltip = new BubbleTooltip(
                    this.quill,
                    this.options.bounds
                  );
                  this.tooltip.root.appendChild(toolbar.container);
                  this.buildButtons(
                    [].slice.call(toolbar.container.querySelectorAll('button')),
                    _icons2.default
                  );
                  this.buildPickers(
                    [].slice.call(toolbar.container.querySelectorAll('select')),
                    _icons2.default
                  );
                },
              },
            ]);
            return BubbleTheme2;
          })(_base2.default);
          BubbleTheme.DEFAULTS = (0, _extend2.default)(
            true,
            {},
            _base2.default.DEFAULTS,
            {
              modules: {
                toolbar: {
                  handlers: {
                    link: function link(value) {
                      if (!value) {
                        this.quill.format('link', false);
                      } else {
                        this.quill.theme.tooltip.edit();
                      }
                    },
                  },
                },
              },
            }
          );
          var BubbleTooltip = (function (_BaseTooltip) {
            _inherits(BubbleTooltip2, _BaseTooltip);
            function BubbleTooltip2(quill2, bounds) {
              _classCallCheck(this, BubbleTooltip2);
              var _this2 = _possibleConstructorReturn(
                this,
                (
                  BubbleTooltip2.__proto__ ||
                  Object.getPrototypeOf(BubbleTooltip2)
                ).call(this, quill2, bounds)
              );
              _this2.quill.on(
                _emitter2.default.events.EDITOR_CHANGE,
                function (type, range, oldRange, source) {
                  if (type !== _emitter2.default.events.SELECTION_CHANGE)
                    return;
                  if (
                    range != null &&
                    range.length > 0 &&
                    source === _emitter2.default.sources.USER
                  ) {
                    _this2.show();
                    _this2.root.style.left = '0px';
                    _this2.root.style.width = '';
                    _this2.root.style.width = _this2.root.offsetWidth + 'px';
                    var lines = _this2.quill.getLines(
                      range.index,
                      range.length
                    );
                    if (lines.length === 1) {
                      _this2.position(_this2.quill.getBounds(range));
                    } else {
                      var lastLine = lines[lines.length - 1];
                      var index = _this2.quill.getIndex(lastLine);
                      var length = Math.min(
                        lastLine.length() - 1,
                        range.index + range.length - index
                      );
                      var _bounds = _this2.quill.getBounds(
                        new _selection.Range(index, length)
                      );
                      _this2.position(_bounds);
                    }
                  } else if (
                    document.activeElement !== _this2.textbox &&
                    _this2.quill.hasFocus()
                  ) {
                    _this2.hide();
                  }
                }
              );
              return _this2;
            }
            _createClass(BubbleTooltip2, [
              {
                key: 'listen',
                value: function listen() {
                  var _this3 = this;
                  _get(
                    BubbleTooltip2.prototype.__proto__ ||
                      Object.getPrototypeOf(BubbleTooltip2.prototype),
                    'listen',
                    this
                  ).call(this);
                  this.root
                    .querySelector('.ql-close')
                    .addEventListener('click', function () {
                      _this3.root.classList.remove('ql-editing');
                    });
                  this.quill.on(
                    _emitter2.default.events.SCROLL_OPTIMIZE,
                    function () {
                      setTimeout(function () {
                        if (_this3.root.classList.contains('ql-hidden')) return;
                        var range = _this3.quill.getSelection();
                        if (range != null) {
                          _this3.position(_this3.quill.getBounds(range));
                        }
                      }, 1);
                    }
                  );
                },
              },
              {
                key: 'cancel',
                value: function cancel() {
                  this.show();
                },
              },
              {
                key: 'position',
                value: function position(reference) {
                  var shift = _get(
                    BubbleTooltip2.prototype.__proto__ ||
                      Object.getPrototypeOf(BubbleTooltip2.prototype),
                    'position',
                    this
                  ).call(this, reference);
                  var arrow = this.root.querySelector('.ql-tooltip-arrow');
                  arrow.style.marginLeft = '';
                  if (shift === 0) return shift;
                  arrow.style.marginLeft =
                    -1 * shift - arrow.offsetWidth / 2 + 'px';
                },
              },
            ]);
            return BubbleTooltip2;
          })(_base.BaseTooltip);
          BubbleTooltip.TEMPLATE = [
            '<span class="ql-tooltip-arrow"></span>',
            '<div class="ql-tooltip-editor">',
            '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">',
            '<a class="ql-close"></a>',
            '</div>',
          ].join('');
          exports2.BubbleTooltip = BubbleTooltip;
          exports2.default = BubbleTheme;
        },
        /* 109 */
        /***/
        function (module2, exports2, __webpack_require__) {
          module2.exports = __webpack_require__(63);
        },
        /******/
      ])['default']
    );
  });
})(quill);
var quillExports = quill.exports;
var __extends =
  (commonjsGlobal && commonjsGlobal.__extends) ||
  /* @__PURE__ */ (function () {
    var extendStatics = function (d, b) {
      extendStatics =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (d2, b2) {
            d2.__proto__ = b2;
          }) ||
        function (d2, b2) {
          for (var p2 in b2) if (b2.hasOwnProperty(p2)) d2[p2] = b2[p2];
        };
      return extendStatics(d, b);
    };
    return function (d, b) {
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype =
        b === null
          ? Object.create(b)
          : ((__.prototype = b.prototype), new __());
    };
  })();
var __assign =
  (commonjsGlobal && commonjsGlobal.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t2) {
        for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
          s = arguments[i];
          for (var p2 in s)
            if (Object.prototype.hasOwnProperty.call(s, p2)) t2[p2] = s[p2];
        }
        return t2;
      };
    return __assign.apply(this, arguments);
  };
var __spreadArrays =
  (commonjsGlobal && commonjsGlobal.__spreadArrays) ||
  function () {
    for (var s = 0, i = 0, il2 = arguments.length; i < il2; i++)
      s += arguments[i].length;
    for (var r2 = Array(s), k2 = 0, i = 0; i < il2; i++)
      for (var a = arguments[i], j = 0, jl2 = a.length; j < jl2; j++, k2++)
        r2[k2] = a[j];
    return r2;
  };
var __importDefault =
  (commonjsGlobal && commonjsGlobal.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
var react_1 = __importDefault(reactExports);
var react_dom_1 = __importDefault(reactDomExports);
var isEqual_1 = __importDefault(isEqual_1$1);
var quill_1 = __importDefault(quillExports);
var ReactQuill =
  /** @class */
  (function (_super) {
    __extends(ReactQuill2, _super);
    function ReactQuill2(props) {
      var _this = _super.call(this, props) || this;
      _this.dirtyProps = ['modules', 'formats', 'bounds', 'theme', 'children'];
      _this.cleanProps = [
        'id',
        'className',
        'style',
        'placeholder',
        'tabIndex',
        'onChange',
        'onChangeSelection',
        'onFocus',
        'onBlur',
        'onKeyPress',
        'onKeyDown',
        'onKeyUp',
      ];
      _this.state = {
        generation: 0,
      };
      _this.selection = null;
      _this.onEditorChange = function (
        eventName,
        rangeOrDelta,
        oldRangeOrDelta,
        source
      ) {
        var _a, _b, _c, _d;
        if (eventName === 'text-change') {
          (_b = (_a = _this).onEditorChangeText) === null || _b === void 0
            ? void 0
            : _b.call(
                _a,
                _this.editor.root.innerHTML,
                rangeOrDelta,
                source,
                _this.unprivilegedEditor
              );
        } else if (eventName === 'selection-change') {
          (_d = (_c = _this).onEditorChangeSelection) === null || _d === void 0
            ? void 0
            : _d.call(_c, rangeOrDelta, source, _this.unprivilegedEditor);
        }
      };
      var value = _this.isControlled() ? props.value : props.defaultValue;
      _this.value = value !== null && value !== void 0 ? value : '';
      return _this;
    }
    ReactQuill2.prototype.validateProps = function (props) {
      var _a;
      if (react_1.default.Children.count(props.children) > 1)
        throw new Error(
          'The Quill editing area can only be composed of a single React element.'
        );
      if (react_1.default.Children.count(props.children)) {
        var child = react_1.default.Children.only(props.children);
        if (
          ((_a = child) === null || _a === void 0 ? void 0 : _a.type) ===
          'textarea'
        )
          throw new Error(
            'Quill does not support editing on a <textarea>. Use a <div> instead.'
          );
      }
      if (this.lastDeltaChangeSet && props.value === this.lastDeltaChangeSet)
        throw new Error(
          'You are passing the `delta` object from the `onChange` event back as `value`. You most probably want `editor.getContents()` instead. See: https://github.com/zenoamaro/react-quill#using-deltas'
        );
    };
    ReactQuill2.prototype.shouldComponentUpdate = function (
      nextProps,
      nextState
    ) {
      var _this = this;
      var _a;
      this.validateProps(nextProps);
      if (!this.editor || this.state.generation !== nextState.generation) {
        return true;
      }
      if ('value' in nextProps) {
        var prevContents = this.getEditorContents();
        var nextContents =
          ((_a = nextProps.value), _a !== null && _a !== void 0 ? _a : '');
        if (!this.isEqualValue(nextContents, prevContents)) {
          this.setEditorContents(this.editor, nextContents);
        }
      }
      if (nextProps.readOnly !== this.props.readOnly) {
        this.setEditorReadOnly(this.editor, nextProps.readOnly);
      }
      return __spreadArrays(this.cleanProps, this.dirtyProps).some(
        function (prop) {
          return !isEqual_1.default(nextProps[prop], _this.props[prop]);
        }
      );
    };
    ReactQuill2.prototype.shouldComponentRegenerate = function (nextProps) {
      var _this = this;
      return this.dirtyProps.some(function (prop) {
        return !isEqual_1.default(nextProps[prop], _this.props[prop]);
      });
    };
    ReactQuill2.prototype.componentDidMount = function () {
      this.instantiateEditor();
      this.setEditorContents(this.editor, this.getEditorContents());
    };
    ReactQuill2.prototype.componentWillUnmount = function () {
      this.destroyEditor();
    };
    ReactQuill2.prototype.componentDidUpdate = function (prevProps, prevState) {
      var _this = this;
      if (this.editor && this.shouldComponentRegenerate(prevProps)) {
        var delta = this.editor.getContents();
        var selection = this.editor.getSelection();
        this.regenerationSnapshot = { delta, selection };
        this.setState({ generation: this.state.generation + 1 });
        this.destroyEditor();
      }
      if (this.state.generation !== prevState.generation) {
        var _a = this.regenerationSnapshot,
          delta = _a.delta,
          selection_1 = _a.selection;
        delete this.regenerationSnapshot;
        this.instantiateEditor();
        var editor_1 = this.editor;
        editor_1.setContents(delta);
        postpone(function () {
          return _this.setEditorSelection(editor_1, selection_1);
        });
      }
    };
    ReactQuill2.prototype.instantiateEditor = function () {
      if (this.editor) {
        this.hookEditor(this.editor);
      } else {
        this.editor = this.createEditor(
          this.getEditingArea(),
          this.getEditorConfig()
        );
      }
    };
    ReactQuill2.prototype.destroyEditor = function () {
      if (!this.editor) return;
      this.unhookEditor(this.editor);
    };
    ReactQuill2.prototype.isControlled = function () {
      return 'value' in this.props;
    };
    ReactQuill2.prototype.getEditorConfig = function () {
      return {
        bounds: this.props.bounds,
        formats: this.props.formats,
        modules: this.props.modules,
        placeholder: this.props.placeholder,
        readOnly: this.props.readOnly,
        scrollingContainer: this.props.scrollingContainer,
        tabIndex: this.props.tabIndex,
        theme: this.props.theme,
      };
    };
    ReactQuill2.prototype.getEditor = function () {
      if (!this.editor) throw new Error('Accessing non-instantiated editor');
      return this.editor;
    };
    ReactQuill2.prototype.createEditor = function (element, config) {
      var editor2 = new quill_1.default(element, config);
      if (config.tabIndex != null) {
        this.setEditorTabIndex(editor2, config.tabIndex);
      }
      this.hookEditor(editor2);
      return editor2;
    };
    ReactQuill2.prototype.hookEditor = function (editor2) {
      this.unprivilegedEditor = this.makeUnprivilegedEditor(editor2);
      editor2.on('editor-change', this.onEditorChange);
    };
    ReactQuill2.prototype.unhookEditor = function (editor2) {
      editor2.off('editor-change', this.onEditorChange);
    };
    ReactQuill2.prototype.getEditorContents = function () {
      return this.value;
    };
    ReactQuill2.prototype.getEditorSelection = function () {
      return this.selection;
    };
    ReactQuill2.prototype.isDelta = function (value) {
      return value && value.ops;
    };
    ReactQuill2.prototype.isEqualValue = function (value, nextValue) {
      if (this.isDelta(value) && this.isDelta(nextValue)) {
        return isEqual_1.default(value.ops, nextValue.ops);
      } else {
        return isEqual_1.default(value, nextValue);
      }
    };
    ReactQuill2.prototype.setEditorContents = function (editor2, value) {
      var _this = this;
      this.value = value;
      var sel = this.getEditorSelection();
      if (typeof value === 'string') {
        editor2.setContents(editor2.clipboard.convert(value));
      } else {
        editor2.setContents(value);
      }
      postpone(function () {
        return _this.setEditorSelection(editor2, sel);
      });
    };
    ReactQuill2.prototype.setEditorSelection = function (editor2, range) {
      this.selection = range;
      if (range) {
        var length_1 = editor2.getLength();
        range.index = Math.max(0, Math.min(range.index, length_1 - 1));
        range.length = Math.max(
          0,
          Math.min(range.length, length_1 - 1 - range.index)
        );
        editor2.setSelection(range);
      }
    };
    ReactQuill2.prototype.setEditorTabIndex = function (editor2, tabIndex) {
      var _a, _b;
      if (
        (_b = (_a = editor2) === null || _a === void 0 ? void 0 : _a.scroll) ===
          null || _b === void 0
          ? void 0
          : _b.domNode
      ) {
        editor2.scroll.domNode.tabIndex = tabIndex;
      }
    };
    ReactQuill2.prototype.setEditorReadOnly = function (editor2, value) {
      if (value) {
        editor2.disable();
      } else {
        editor2.enable();
      }
    };
    ReactQuill2.prototype.makeUnprivilegedEditor = function (editor2) {
      var e = editor2;
      return {
        getHTML: function () {
          return e.root.innerHTML;
        },
        getLength: e.getLength.bind(e),
        getText: e.getText.bind(e),
        getContents: e.getContents.bind(e),
        getSelection: e.getSelection.bind(e),
        getBounds: e.getBounds.bind(e),
      };
    };
    ReactQuill2.prototype.getEditingArea = function () {
      if (!this.editingArea) {
        throw new Error('Instantiating on missing editing area');
      }
      var element = react_dom_1.default.findDOMNode(this.editingArea);
      if (!element) {
        throw new Error('Cannot find element for editing area');
      }
      if (element.nodeType === 3) {
        throw new Error('Editing area cannot be a text node');
      }
      return element;
    };
    ReactQuill2.prototype.renderEditingArea = function () {
      var _this = this;
      var _a = this.props,
        children = _a.children,
        preserveWhitespace = _a.preserveWhitespace;
      var generation = this.state.generation;
      var properties = {
        key: generation,
        ref: function (instance) {
          _this.editingArea = instance;
        },
      };
      if (react_1.default.Children.count(children)) {
        return react_1.default.cloneElement(
          react_1.default.Children.only(children),
          properties
        );
      }
      return preserveWhitespace
        ? react_1.default.createElement('pre', __assign({}, properties))
        : react_1.default.createElement('div', __assign({}, properties));
    };
    ReactQuill2.prototype.render = function () {
      var _a;
      return react_1.default.createElement(
        'div',
        {
          id: this.props.id,
          style: this.props.style,
          key: this.state.generation,
          className:
            'quill ' +
            ((_a = this.props.className),
            _a !== null && _a !== void 0 ? _a : ''),
          onKeyPress: this.props.onKeyPress,
          onKeyDown: this.props.onKeyDown,
          onKeyUp: this.props.onKeyUp,
        },
        this.renderEditingArea()
      );
    };
    ReactQuill2.prototype.onEditorChangeText = function (
      value,
      delta,
      source,
      editor2
    ) {
      var _a, _b;
      if (!this.editor) return;
      var nextContents = this.isDelta(this.value)
        ? editor2.getContents()
        : editor2.getHTML();
      if (nextContents !== this.getEditorContents()) {
        this.lastDeltaChangeSet = delta;
        this.value = nextContents;
        (_b = (_a = this.props).onChange) === null || _b === void 0
          ? void 0
          : _b.call(_a, value, delta, source, editor2);
      }
    };
    ReactQuill2.prototype.onEditorChangeSelection = function (
      nextSelection,
      source,
      editor2
    ) {
      var _a, _b, _c, _d, _e, _f;
      if (!this.editor) return;
      var currentSelection = this.getEditorSelection();
      var hasGainedFocus = !currentSelection && nextSelection;
      var hasLostFocus = currentSelection && !nextSelection;
      if (isEqual_1.default(nextSelection, currentSelection)) return;
      this.selection = nextSelection;
      (_b = (_a = this.props).onChangeSelection) === null || _b === void 0
        ? void 0
        : _b.call(_a, nextSelection, source, editor2);
      if (hasGainedFocus) {
        (_d = (_c = this.props).onFocus) === null || _d === void 0
          ? void 0
          : _d.call(_c, nextSelection, source, editor2);
      } else if (hasLostFocus) {
        (_f = (_e = this.props).onBlur) === null || _f === void 0
          ? void 0
          : _f.call(_e, currentSelection, source, editor2);
      }
    };
    ReactQuill2.prototype.focus = function () {
      if (!this.editor) return;
      this.editor.focus();
    };
    ReactQuill2.prototype.blur = function () {
      if (!this.editor) return;
      this.selection = null;
      this.editor.blur();
    };
    ReactQuill2.displayName = 'React Quill';
    ReactQuill2.Quill = quill_1.default;
    ReactQuill2.defaultProps = {
      theme: 'snow',
      modules: {},
      readOnly: false,
    };
    return ReactQuill2;
  })(react_1.default.Component);
function postpone(fn) {
  Promise.resolve().then(fn);
}
var lib = ReactQuill;
const ReactQuill$1 = /* @__PURE__ */ getDefaultExportFromCjs(lib);
const SendModal = ({ toggleModalOpen }) => {
  const [content2, setContent] = reactExports.useState('');
  const [uploadedFiles, setUploadedFiles] = reactExports.useState(null);
  const handleFileChange = (event) => {
    if (event.target.files) {
      const newFiles = Array.from(event.target.files);
      setUploadedFiles((files) => (files ? [...files, ...newFiles] : newFiles));
    }
  };
  const getByteSize = (size) => {
    const byteUnits = ['KB', 'MB'];
    for (let i = 0; i < byteUnits.length; i++) {
      size = size / 1024;
      if (size < 1024) {
        return size.toFixed(2) + ' ' + byteUnits[i];
      }
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: container,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx('header', {
        className: header,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
          onClick: () => {
            toggleModalOpen?.(false);
          },
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Cancel, {}),
        }),
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: inputs,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: inputContainer,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                className: label,
                children: '받는사람:',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('input', {
                type: 'email',
                className: input,
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: inputContainer,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx('p', {
                className: label,
                children: '제목:',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('input', {
                type: 'text',
                className: input,
              }),
            ],
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
        className: editorContainer,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: textEditor,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(ReactQuill$1, {
              value: content2,
              onChange: setContent,
              className: editor,
            }),
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: fileList,
            children: uploadedFiles?.map((file, index) =>
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                'div',
                {
                  className: fileItem,
                  children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsxs('p', {
                      className: fileName,
                      children: [
                        file.name,
                        ' ',
                        /* @__PURE__ */ jsxRuntimeExports.jsx('span', {
                          className: fileBytes,
                          children: getByteSize(file.size),
                        }),
                      ],
                    }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
                      className: fileDeleteBtn,
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Cancel,
                        {}
                      ),
                    }),
                  ],
                },
                index
              )
            ),
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('footer', {
        className: footer,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
            className: icon,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(Image, {}),
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('label', {
            className: icon,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(File, {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx('input', {
                type: 'file',
                className: fileInput,
                multiple: true,
                onChange: handleFileChange,
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('button', {
            className: `${icon} ${sent}`,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(Sent, {
              fill: __default__.white,
            }),
          }),
        ],
      }),
    ],
  });
};
const mailData = [
  {
    id: 1,
    sender: '보낸이름',
    Recipient: '받는이름',
    title: '보안알림',
    description:
      'macOS에 Google 계정 액세스 권한이 부여됨 chltjdgns1009@gmail.com 액세스 권한을 부여한 적이 없다면 이 활동을 확인하고 계정을 보호하세요.',
    date: '2025.01.12.',
    RecipientEmail: 'dltmdgus1412@gmail.com',
    senderEmail: 'notifications@github.com',
    read: false,
  },
  {
    id: 2,
    sender: '추성우',
    Recipient: 'seonghoon07/Kotlin_study',
    title: '[seonghoon07/Kotlin_study] 하지마 (Issue #1)',
    description:
      '— Reply to this email directly, view it on GitHub, or unsubscribe. You are receiving this because you are subscribed to this thread.',
    date: '2025.01.12.',
    RecipientEmail: 'Kotlin_study@noreply.github.com',
    senderEmail: 'notifications@github.com',
    read: true,
  },
  {
    id: 3,
    sender: 'PAYCO',
    Recipient: '받는이름',
    title: 'PAYCO 전자금융거래 이용약관 개정 안내',
    description:
      'PAYCO 전자금융거래 이용약관 개정 안내 PAYCO 서비스를 이용해주시는 회원 여러분께 감사드리며, 전자금융거래 이용약관 개정 안내 드립니다. 1. 개정약관 시행일 : 2025년 2월 17일',
    date: '2025.01.12.',
    RecipientEmail: 'dltmdgus1412@gmail.com',
    senderEmail: 'notifications@github.com',
    read: true,
  },
];
const Content = ({ modalOpen, toggleModalOpen }) => {
  const { selectedMenu } = useMenuState();
  const [selectedMail, setSelectedMail] = reactExports.useState(0);
  const selectedMailData = mailData.find((mail) => mail.id === selectedMail);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: container$1,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs('header', {
        className: header$1,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: mailType,
            children: [
              selectedMenu,
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: subTitle,
                children: '4개의 메일, 1개 읽지 않음',
              }),
            ],
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
            className: mailOption,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: mailOption_addPlan,
                children: '일정으로 추가',
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: mailOption_write,
                onClick: () => {
                  toggleModalOpen?.(true);
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(WriteIcon, {}),
              }),
              /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                className: mailOption_delete,
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  TrashcanIcon,
                  {}
                ),
              }),
            ],
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs('main', {
        className: content,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: content_list,
            children: mailData.map((data) =>
              /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                className: `${mailList_container} ${selectedMail === data.id ? mailList_container_selected : ''}`,
                onClick: () => setSelectedMail(data.id),
                children: [
                  data.read
                    ? ''
                    : /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                        className: mailList_readState,
                      }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                    className: mailList_header,
                    children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                        className: mailList_Sender,
                        children: data.sender,
                      }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                        className: `${mailList_Date} ${selectedMail === data.id ? mailList_container_selected : ''}`,
                        children: data.date,
                      }),
                    ],
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                    className: mailList_title,
                    children: data.title,
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                    className: `${mailList_description} ${selectedMail === data.id ? mailList_container_selected : ''}`,
                    children: data.description,
                  }),
                ],
              })
            ),
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
            className: content_description,
            children:
              selectedMail !== 0 &&
              selectedMailData &&
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                jsxRuntimeExports.Fragment,
                {
                  children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                      className: description_header,
                      children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                          className: description_title,
                          children: selectedMailData.title,
                        }),
                        /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                          className: description_info,
                          children: [
                            /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                              className: description_sender,
                              children: [
                                selectedMailData.sender,
                                ' <',
                                selectedMailData.senderEmail,
                                '>',
                              ],
                            }),
                            /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
                              className: description_Recipient,
                              children: [
                                selectedMailData.Recipient,
                                ' <',
                                selectedMailData.RecipientEmail,
                                '>',
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx('div', {
                      className: description_content,
                      children: mailData.find(
                        (mail) => mail.id === selectedMail
                      )?.description,
                    }),
                  ],
                }
              ),
          }),
          modalOpen &&
            /* @__PURE__ */ jsxRuntimeExports.jsx(SendModal, {
              toggleModalOpen,
            }),
        ],
      }),
    ],
  });
};
const Mail = () => {
  const [isModalOpened, setIsModalOpened] = reactExports.useState(false);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs('div', {
    className: container$2,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Sidebar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Content, {
        modalOpen: isModalOpened,
        toggleModalOpen: setIsModalOpened,
      }),
    ],
  });
};
function Router() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, {
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(Route, {
        element: /* @__PURE__ */ jsxRuntimeExports.jsx(Layout, {}),
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, {
            path: '/',
            element: /* @__PURE__ */ jsxRuntimeExports.jsx(Home, {}),
          }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, {
            path: '/mail',
            element: /* @__PURE__ */ jsxRuntimeExports.jsx(Mail, {}),
          }),
        ],
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, {
        path: '/login',
        element: /* @__PURE__ */ jsxRuntimeExports.jsx(Login, {}),
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, {
        path: '/survey',
        element: /* @__PURE__ */ jsxRuntimeExports.jsx(Survey, {}),
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, {
        path: '/google/callback',
        element: /* @__PURE__ */ jsxRuntimeExports.jsx(OAuth, {}),
      }),
    ],
  });
}
const App = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Router, {});
};
var ReactQueryDevtools2 = function () {
  return null;
};
const ReactQueryProviders = ({ children }) => {
  const [client] = reactExports.useState(
    new QueryClient({
      defaultOptions: {
        queries: {
          refetchOnWindowFocus: false,
          refetchOnMount: false,
          retry: 1,
        },
        mutations: {
          retry: 1,
        },
      },
    })
  );
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(QueryClientProvider, {
    client,
    children: [
      children,
      /* @__PURE__ */ jsxRuntimeExports.jsx(ReactQueryDevtools2, {
        initialIsOpen: false,
      }),
    ],
  });
};
createRoot(document.getElementById('root')).render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(ReactQueryProviders, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(BrowserRouter, {
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(App, {}),
    }),
  })
);
